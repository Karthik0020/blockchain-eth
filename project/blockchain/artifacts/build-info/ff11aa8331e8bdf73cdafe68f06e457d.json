{"id":"ff11aa8331e8bdf73cdafe68f06e457d","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/HMSRecords.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\n/**\n * @title HMSRecords\n * @dev Smart contract for Hospital Management System record hashes\n * Stores only hashes of medical records, not the actual data\n */\ncontract HMSRecords is AccessControl, ReentrancyGuard, Pausable {\n    bytes32 public constant DOCTOR_ROLE = keccak256(\"DOCTOR_ROLE\");\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n    \n    struct MedicalRecord {\n        string patientId;\n        bytes32 recordHash;\n        uint256 timestamp;\n        address authorizedBy;\n        string recordType; // \"appointment\", \"diagnosis\", \"treatment\", etc.\n        bool isActive;\n    }\n    \n    struct Patient {\n        string patientId;\n        bytes32 identityHash; // Hash of patient identity data\n        address[] authorizedDoctors;\n        uint256 createdAt;\n        bool isActive;\n    }\n    \n    // Mappings\n    mapping(string => Patient) public patients;\n    mapping(bytes32 => MedicalRecord) public records;\n    mapping(string => bytes32[]) public patientRecords;\n    mapping(address => string[]) public doctorPatients;\n    \n    // Arrays for enumeration\n    string[] public allPatientIds;\n    bytes32[] public allRecordHashes;\n    \n    // Events\n    event PatientRegistered(\n        string indexed patientId,\n        bytes32 identityHash,\n        address indexed registeredBy,\n        uint256 timestamp\n    );\n    \n    event RecordAdded(\n        string indexed patientId,\n        bytes32 indexed recordHash,\n        address indexed authorizedBy,\n        string recordType,\n        uint256 timestamp\n    );\n    \n    event RecordUpdated(\n        bytes32 indexed recordHash,\n        address indexed updatedBy,\n        uint256 timestamp\n    );\n    \n    event DoctorAuthorized(\n        string indexed patientId,\n        address indexed doctor,\n        address indexed authorizedBy\n    );\n    \n    event DoctorRevoked(\n        string indexed patientId,\n        address indexed doctor,\n        address indexed revokedBy\n    );\n    \n    constructor() {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(ADMIN_ROLE, msg.sender);\n    }\n    \n    /**\n     * @dev Register a new patient\n     * @param patientId Unique patient identifier\n     * @param identityHash Hash of patient identity data\n     */\n    function registerPatient(\n        string memory patientId,\n        bytes32 identityHash\n    ) external onlyRole(ADMIN_ROLE) whenNotPaused {\n        require(bytes(patientId).length > 0, \"Patient ID cannot be empty\");\n        require(!patients[patientId].isActive, \"Patient already registered\");\n        \n        patients[patientId] = Patient({\n            patientId: patientId,\n            identityHash: identityHash,\n            authorizedDoctors: new address[](0),\n            createdAt: block.timestamp,\n            isActive: true\n        });\n        \n        allPatientIds.push(patientId);\n        \n        emit PatientRegistered(patientId, identityHash, msg.sender, block.timestamp);\n    }\n    \n    /**\n     * @dev Add a medical record hash\n     * @param patientId Patient identifier\n     * @param recordHash Hash of the medical record\n     * @param recordType Type of record (appointment, diagnosis, etc.)\n     */\n    function addRecord(\n        string memory patientId,\n        bytes32 recordHash,\n        string memory recordType\n    ) external whenNotPaused {\n        require(patients[patientId].isActive, \"Patient not found\");\n        require(recordHash != bytes32(0), \"Record hash cannot be empty\");\n        require(\n            hasRole(ADMIN_ROLE, msg.sender) || \n            hasRole(DOCTOR_ROLE, msg.sender) || \n            isAuthorizedDoctor(patientId, msg.sender),\n            \"Not authorized to add records\"\n        );\n        require(!records[recordHash].isActive, \"Record already exists\");\n        \n        records[recordHash] = MedicalRecord({\n            patientId: patientId,\n            recordHash: recordHash,\n            timestamp: block.timestamp,\n            authorizedBy: msg.sender,\n            recordType: recordType,\n            isActive: true\n        });\n        \n        patientRecords[patientId].push(recordHash);\n        allRecordHashes.push(recordHash);\n        \n        emit RecordAdded(patientId, recordHash, msg.sender, recordType, block.timestamp);\n    }\n    \n    /**\n     * @dev Update a medical record (mark as updated, original hash remains)\n     * @param recordHash Hash of the record to update\n     */\n    function updateRecord(bytes32 recordHash) external whenNotPaused {\n        require(records[recordHash].isActive, \"Record not found\");\n        require(\n            hasRole(ADMIN_ROLE, msg.sender) || \n            records[recordHash].authorizedBy == msg.sender,\n            \"Not authorized to update this record\"\n        );\n        \n        emit RecordUpdated(recordHash, msg.sender, block.timestamp);\n    }\n    \n    /**\n     * @dev Authorize a doctor to access patient records\n     * @param patientId Patient identifier\n     * @param doctor Doctor's address\n     */\n    function authorizeDoctor(\n        string memory patientId,\n        address doctor\n    ) external onlyRole(ADMIN_ROLE) whenNotPaused {\n        require(patients[patientId].isActive, \"Patient not found\");\n        require(doctor != address(0), \"Invalid doctor address\");\n        require(!isAuthorizedDoctor(patientId, doctor), \"Doctor already authorized\");\n        \n        patients[patientId].authorizedDoctors.push(doctor);\n        doctorPatients[doctor].push(patientId);\n        \n        emit DoctorAuthorized(patientId, doctor, msg.sender);\n    }\n    \n    /**\n     * @dev Revoke doctor's access to patient records\n     * @param patientId Patient identifier\n     * @param doctor Doctor's address\n     */\n    function revokeDoctor(\n        string memory patientId,\n        address doctor\n    ) external onlyRole(ADMIN_ROLE) whenNotPaused {\n        require(patients[patientId].isActive, \"Patient not found\");\n        require(isAuthorizedDoctor(patientId, doctor), \"Doctor not authorized\");\n        \n        // Remove doctor from patient's authorized list\n        address[] storage authorizedDoctors = patients[patientId].authorizedDoctors;\n        for (uint i = 0; i < authorizedDoctors.length; i++) {\n            if (authorizedDoctors[i] == doctor) {\n                authorizedDoctors[i] = authorizedDoctors[authorizedDoctors.length - 1];\n                authorizedDoctors.pop();\n                break;\n            }\n        }\n        \n        // Remove patient from doctor's patient list\n        string[] storage doctorPatientList = doctorPatients[doctor];\n        for (uint i = 0; i < doctorPatientList.length; i++) {\n            if (keccak256(bytes(doctorPatientList[i])) == keccak256(bytes(patientId))) {\n                doctorPatientList[i] = doctorPatientList[doctorPatientList.length - 1];\n                doctorPatientList.pop();\n                break;\n            }\n        }\n        \n        emit DoctorRevoked(patientId, doctor, msg.sender);\n    }\n    \n    /**\n     * @dev Check if a doctor is authorized for a patient\n     * @param patientId Patient identifier\n     * @param doctor Doctor's address\n     * @return bool Authorization status\n     */\n    function isAuthorizedDoctor(\n        string memory patientId,\n        address doctor\n    ) public view returns (bool) {\n        address[] memory authorizedDoctors = patients[patientId].authorizedDoctors;\n        for (uint i = 0; i < authorizedDoctors.length; i++) {\n            if (authorizedDoctors[i] == doctor) {\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    /**\n     * @dev Get patient records\n     * @param patientId Patient identifier\n     * @return bytes32[] Array of record hashes\n     */\n    function getPatientRecords(\n        string memory patientId\n    ) external view returns (bytes32[] memory) {\n        require(\n            hasRole(ADMIN_ROLE, msg.sender) || \n            isAuthorizedDoctor(patientId, msg.sender),\n            \"Not authorized to view records\"\n        );\n        return patientRecords[patientId];\n    }\n    \n    /**\n     * @dev Get doctor's patients\n     * @param doctor Doctor's address\n     * @return string[] Array of patient IDs\n     */\n    function getDoctorPatients(\n        address doctor\n    ) external view returns (string[] memory) {\n        require(\n            hasRole(ADMIN_ROLE, msg.sender) || \n            doctor == msg.sender,\n            \"Not authorized to view doctor patients\"\n        );\n        return doctorPatients[doctor];\n    }\n    \n    /**\n     * @dev Get total number of patients\n     * @return uint256 Total patients count\n     */\n    function getTotalPatients() external view returns (uint256) {\n        return allPatientIds.length;\n    }\n    \n    /**\n     * @dev Get total number of records\n     * @return uint256 Total records count\n     */\n    function getTotalRecords() external view returns (uint256) {\n        return allRecordHashes.length;\n    }\n    \n    /**\n     * @dev Verify a record hash exists\n     * @param recordHash Hash to verify\n     * @return bool Existence status\n     */\n    function verifyRecord(bytes32 recordHash) external view returns (bool) {\n        return records[recordHash].isActive;\n    }\n    \n    /**\n     * @dev Get record details\n     * @param recordHash Hash of the record\n     * @return MedicalRecord Record details\n     */\n    function getRecord(\n        bytes32 recordHash\n    ) external view returns (MedicalRecord memory) {\n        require(records[recordHash].isActive, \"Record not found\");\n        require(\n            hasRole(ADMIN_ROLE, msg.sender) || \n            isAuthorizedDoctor(records[recordHash].patientId, msg.sender) ||\n            records[recordHash].authorizedBy == msg.sender,\n            \"Not authorized to view this record\"\n        );\n        return records[recordHash];\n    }\n    \n    /**\n     * @dev Grant doctor role\n     * @param doctor Address to grant doctor role\n     */\n    function grantDoctorRole(address doctor) external onlyRole(ADMIN_ROLE) {\n        _grantRole(DOCTOR_ROLE, doctor);\n    }\n    \n    /**\n     * @dev Revoke doctor role\n     * @param doctor Address to revoke doctor role\n     */\n    function revokeDoctorRole(address doctor) external onlyRole(ADMIN_ROLE) {\n        _revokeRole(DOCTOR_ROLE, doctor);\n    }\n    \n    /**\n     * @dev Pause contract\n     */\n    function pause() external onlyRole(ADMIN_ROLE) {\n        _pause();\n    }\n    \n    /**\n     * @dev Unpause contract\n     */\n    function unpause() external onlyRole(ADMIN_ROLE) {\n        _unpause();\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[583],"ERC165":[836],"IAccessControl":[388],"IERC165":[848],"Math":[1714],"SignedMath":[1819],"Strings":[812]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":389,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":584,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":813,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":837,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nameLocations":["1967:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":583,"src":"1967:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1967:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nameLocations":["1976:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"1976:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1976:14:0"},{"baseName":{"id":11,"name":"ERC165","nameLocations":["1992:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":836,"src":"1992:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1992:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,836,848,388,583],"name":"AccessControl","nameLocation":"1950:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"2056:7:0","nodeType":"VariableDeclaration","scope":19,"src":"2031:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2031:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"2050:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"2081:9:0","nodeType":"VariableDeclaration","scope":19,"src":"2073:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2073:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2012:8:0","nodeType":"StructDefinition","scope":315,"src":"2005:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2140:6:0","nodeType":"VariableDeclaration","scope":315,"src":"2103:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2103:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nameLocations":["2122:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":19,"src":"2122:8:0"},"referencedDeclaration":19,"src":"2122:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2177:18:0","nodeType":"VariableDeclaration","scope":315,"src":"2153:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2198:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2621:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2642:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2631:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2631:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2631:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2657:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2209:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2598:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2615:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2606:14:0"},"src":"2589:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[835],"body":{"id":59,"nodeType":"Block","src":"2823:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2840:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2860:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2855:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$388","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2876:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2855:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2840:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2915:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2891:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2897:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":835,"src":"2891:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2891:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2840:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2833:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2671:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2741:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2799:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2766:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2759:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2759:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2758:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2817:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2817:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2816:6:0"},"scope":315,"src":"2732:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[355],"body":{"id":78,"nodeType":"Block","src":"3113:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3130:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3137:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3143:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3130:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3151:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"3123:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2940:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3030:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3089:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"3046:4:0","nodeType":"VariableDeclaration","scope":79,"src":"3038:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3038:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"3060:7:0","nodeType":"VariableDeclaration","scope":79,"src":"3052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3037:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"3107:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"3107:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3106:6:0"},"scope":315,"src":"3021:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3516:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3537:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"3543:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3543:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3526:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3526:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3526:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3172:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3469:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3488:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3480:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3479:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3516:0:0"},"scope":315,"src":"3460:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3917:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3931:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3940:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3946:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3932:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3932:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3927:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3956:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4064:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4135:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"4115:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$812_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4123:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":786,"src":"4115:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4115:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4242:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4234:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4234:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4249:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"4214:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$812_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4222:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":766,"src":"4214:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4022:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4026:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"4022:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4022:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3994:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3994:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3970:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3970:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3970:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3569:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3853:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3872:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3864:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3864:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3886:7:0","nodeType":"VariableDeclaration","scope":131,"src":"3878:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3863:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3917:0:0"},"scope":315,"src":"3844:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[363],"body":{"id":145,"nodeType":"Block","src":"4587:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4604:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4611:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4604:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4617:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4604:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4597:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4329:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4513:12:0","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4560:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4534:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4526:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4525:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"4578:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4578:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4577:9:0"},"scope":315,"src":"4504:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[371],"body":{"id":165,"nodeType":"Block","src":"5032:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5053:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"5059:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5042:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5042:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"5042:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4639:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5025:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5012:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5012:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["5003:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5003:8:0"},"nodeType":"ModifierInvocation","src":"5003:28:0"}],"name":"grantRole","nameLocation":"4938:9:0","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4994:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4956:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4948:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4948:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"4970:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4962:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4947:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"5032:0:0"},"scope":315,"src":"4929:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[379],"body":{"id":185,"nodeType":"Block","src":"5458:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5480:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5486:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5468:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5468:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"5080:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5451:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5438:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5438:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyRole","nameLocations":["5429:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5429:8:0"},"nodeType":"ModifierInvocation","src":"5429:28:0"}],"name":"revokeRole","nameLocation":"5363:10:0","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5420:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5382:4:0","nodeType":"VariableDeclaration","scope":186,"src":"5374:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5374:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nameLocation":"5396:7:0","nodeType":"VariableDeclaration","scope":186,"src":"5388:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5373:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5458:0:0"},"scope":315,"src":"5354:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[387],"body":{"id":208,"nodeType":"Block","src":"6115:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"6144:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6144:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6133:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6125:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6125:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"6125:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6231:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6237:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6219:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6219:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6219:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5507:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6047:12:0","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"6106:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nameLocation":"6068:4:0","nodeType":"VariableDeclaration","scope":209,"src":"6060:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6060:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nameLocation":"6082:7:0","nodeType":"VariableDeclaration","scope":209,"src":"6074:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"6074:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6059:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"6115:0:0"},"scope":315,"src":"6038:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"7005:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"7026:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"7015:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7015:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"7015:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6258:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6946:10:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6965:4:0","nodeType":"VariableDeclaration","scope":223,"src":"6957:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6957:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"6979:7:0","nodeType":"VariableDeclaration","scope":223,"src":"6971:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6971:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6956:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"7005:0:0"},"scope":315,"src":"6937:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7245:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7263:17:0","nodeType":"VariableDeclaration","scope":250,"src":"7255:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7255:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7296:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7283:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7283:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7255:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7311:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7318:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7311:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7324:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7311:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7336:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7311:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7311:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7377:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7383:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7402:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7360:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7360:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7355:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"7053:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7181:13:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nameLocation":"7203:4:0","nodeType":"VariableDeclaration","scope":251,"src":"7195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nameLocation":"7217:9:0","nodeType":"VariableDeclaration","scope":251,"src":"7209:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7209:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7194:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7245:0:0"},"scope":315,"src":"7172:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7655:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7669:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7678:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7670:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7670:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7665:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7694:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7708:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7715:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7708:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7721:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7708:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7729:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7708:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7740:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7708:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7708:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7775:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7781:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"7763:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7758:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7425:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7596:10:0","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nameLocation":"7615:4:0","nodeType":"VariableDeclaration","scope":283,"src":"7607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nameLocation":"7629:7:0","nodeType":"VariableDeclaration","scope":283,"src":"7621:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7621:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7606:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7655:0:0"},"scope":315,"src":"7587:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"8060:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8082:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8088:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"8074:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8074:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"8070:149:0","trueBody":{"id":311,"nodeType":"Block","src":"8098:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"8112:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8119:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8112:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8125:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"8112:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8112:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8144:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8112:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"8112:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8180:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8186:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"8195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"8168:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8168:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8163:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7826:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8000:11:0","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"8020:4:0","nodeType":"VariableDeclaration","scope":314,"src":"8012:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8012:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"8034:7:0","nodeType":"VariableDeclaration","scope":314,"src":"8026:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"8026:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8011:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"8060:0:0"},"scope":315,"src":"7991:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1932:6295:0","usedErrors":[]}],"src":"108:8120:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[388]},"id":389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":388,"linearizedBaseContracts":[388],"name":"IAccessControl","nameLocation":"219:14:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"240:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":327,"name":"RoleAdminChanged","nameLocation":"543:16:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:1","nodeType":"VariableDeclaration","scope":327,"src":"560:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:1","nodeType":"VariableDeclaration","scope":327,"src":"582:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:1","nodeType":"VariableDeclaration","scope":327,"src":"617:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:1"},"src":"537:110:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"653:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":336,"name":"RoleGranted","nameLocation":"876:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:1","nodeType":"VariableDeclaration","scope":336,"src":"888:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:1","nodeType":"VariableDeclaration","scope":336,"src":"910:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:1","nodeType":"VariableDeclaration","scope":336,"src":"935:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:1"},"src":"870:89:1"},{"anonymous":false,"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"965:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":345,"name":"RoleRevoked","nameLocation":"1251:11:1","nodeType":"EventDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1263:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1285:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:1","nodeType":"VariableDeclaration","scope":345,"src":"1310:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:1"},"src":"1245:89:1"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1340:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":355,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:1","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"1446:4:1","nodeType":"VariableDeclaration","scope":355,"src":"1438:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"account","nameLocation":"1460:7:1","nodeType":"VariableDeclaration","scope":355,"src":"1452:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"1492:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":352,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:1"},"scope":388,"src":"1421:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"1504:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"role","nameLocation":"1723:4:1","nodeType":"VariableDeclaration","scope":363,"src":"1715:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:1"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"1752:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:1"},"scope":388,"src":"1693:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1767:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":371,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:1","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"role","nameLocation":"2038:4:1","nodeType":"VariableDeclaration","scope":371,"src":"2030:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"account","nameLocation":"2052:7:1","nodeType":"VariableDeclaration","scope":371,"src":"2044:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:1"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"2069:0:1"},"scope":388,"src":"2011:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"2076:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":379,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"role","nameLocation":"2332:4:1","nodeType":"VariableDeclaration","scope":379,"src":"2324:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"account","nameLocation":"2346:7:1","nodeType":"VariableDeclaration","scope":379,"src":"2338:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:1"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"2363:0:1"},"scope":388,"src":"2304:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2370:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:1","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"role","nameLocation":"2885:4:1","nodeType":"VariableDeclaration","scope":387,"src":"2877:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"account","nameLocation":"2899:7:1","nodeType":"VariableDeclaration","scope":387,"src":"2891:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:1"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"2916:0:1"},"scope":388,"src":"2855:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":389,"src":"209:2710:1","usedErrors":[]}],"src":"94:2826:1"},"id":1},"@openzeppelin/contracts/security/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[583],"Pausable":[496]},"id":497,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":390,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":497,"sourceUnit":584,"src":"130:30:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":393,"name":"Context","nameLocations":["632:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":583,"src":"632:7:2"},"id":394,"nodeType":"InheritanceSpecifier","src":"632:7:2"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"162:439:2","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":496,"linearizedBaseContracts":[496,583],"name":"Pausable","nameLocation":"620:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":395,"nodeType":"StructuredDocumentation","src":"646:73:2","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":399,"name":"Paused","nameLocation":"730:6:2","nodeType":"EventDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"745:7:2","nodeType":"VariableDeclaration","scope":399,"src":"737:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":396,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:2"},"src":"724:30:2"},{"anonymous":false,"documentation":{"id":400,"nodeType":"StructuredDocumentation","src":"760:70:2","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":404,"name":"Unpaused","nameLocation":"841:8:2","nodeType":"EventDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"858:7:2","nodeType":"VariableDeclaration","scope":404,"src":"850:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:2"},"src":"835:32:2"},{"constant":false,"id":406,"mutability":"mutable","name":"_paused","nameLocation":"886:7:2","nodeType":"VariableDeclaration","scope":496,"src":"873:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":405,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":414,"nodeType":"Block","src":"986:32:2","statements":[{"expression":{"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":410,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"996:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":413,"nodeType":"ExpressionStatement","src":"996:15:2"}]},"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"900:67:2","text":" @dev Initializes the contract in unpaused state."},"id":415,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[],"src":"983:2:2"},"returnParameters":{"id":409,"nodeType":"ParameterList","parameters":[],"src":"986:0:2"},"scope":496,"src":"972:46:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":422,"nodeType":"Block","src":"1229:47:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":418,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"1239:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1239:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":420,"nodeType":"ExpressionStatement","src":"1239:19:2"},{"id":421,"nodeType":"PlaceholderStatement","src":"1268:1:2"}]},"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"1024:175:2","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":423,"name":"whenNotPaused","nameLocation":"1213:13:2","nodeType":"ModifierDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[],"src":"1226:2:2"},"src":"1204:72:2","virtual":false,"visibility":"internal"},{"body":{"id":430,"nodeType":"Block","src":"1476:44:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":426,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"1486:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1486:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"ExpressionStatement","src":"1486:16:2"},{"id":429,"nodeType":"PlaceholderStatement","src":"1512:1:2"}]},"documentation":{"id":424,"nodeType":"StructuredDocumentation","src":"1282:167:2","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":431,"name":"whenPaused","nameLocation":"1463:10:2","nodeType":"ModifierDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"1473:2:2"},"src":"1454:66:2","virtual":false,"visibility":"internal"},{"body":{"id":439,"nodeType":"Block","src":"1668:31:2","statements":[{"expression":{"id":437,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1685:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":436,"id":438,"nodeType":"Return","src":"1678:14:2"}]},"documentation":{"id":432,"nodeType":"StructuredDocumentation","src":"1526:84:2","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":440,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1624:6:2","nodeType":"FunctionDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[],"src":"1630:2:2"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":440,"src":"1662:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":434,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:2"},"scope":496,"src":"1615:84:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":451,"nodeType":"Block","src":"1818:55:2","statements":[{"expression":{"arguments":[{"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:2","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":445,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"1837:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":444,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":450,"nodeType":"ExpressionStatement","src":"1828:38:2"}]},"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"1705:57:2","text":" @dev Throws if the contract is paused."},"id":452,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1776:17:2","nodeType":"FunctionDefinition","parameters":{"id":442,"nodeType":"ParameterList","parameters":[],"src":"1793:2:2"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[],"src":"1818:0:2"},"scope":496,"src":"1767:106:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":462,"nodeType":"Block","src":"1993:58:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":457,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2011:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2011:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":456,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2003:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":461,"nodeType":"ExpressionStatement","src":"2003:41:2"}]},"documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"1879:61:2","text":" @dev Throws if the contract is not paused."},"id":463,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"1954:14:2","nodeType":"FunctionDefinition","parameters":{"id":454,"nodeType":"ParameterList","parameters":[],"src":"1968:2:2"},"returnParameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"1993:0:2"},"scope":496,"src":"1945:106:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":478,"nodeType":"Block","src":"2235:66:2","statements":[{"expression":{"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":469,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"2245:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":472,"nodeType":"ExpressionStatement","src":"2245:14:2"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":474,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2281:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":473,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2274:6:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":477,"nodeType":"EmitStatement","src":"2269:25:2"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"2057:124:2","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":479,"implemented":true,"kind":"function","modifiers":[{"id":467,"kind":"modifierInvocation","modifierName":{"id":466,"name":"whenNotPaused","nameLocations":["2221:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":423,"src":"2221:13:2"},"nodeType":"ModifierInvocation","src":"2221:13:2"}],"name":"_pause","nameLocation":"2195:6:2","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"2201:2:2"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"2235:0:2"},"scope":496,"src":"2186:115:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":494,"nodeType":"Block","src":"2481:69:2","statements":[{"expression":{"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":485,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"2491:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":488,"nodeType":"ExpressionStatement","src":"2491:15:2"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":490,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2530:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2530:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":489,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2521:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2521:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"EmitStatement","src":"2516:27:2"}]},"documentation":{"id":480,"nodeType":"StructuredDocumentation","src":"2307:121:2","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":495,"implemented":true,"kind":"function","modifiers":[{"id":483,"kind":"modifierInvocation","modifierName":{"id":482,"name":"whenPaused","nameLocations":["2470:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":431,"src":"2470:10:2"},"nodeType":"ModifierInvocation","src":"2470:10:2"}],"name":"_unpause","nameLocation":"2442:8:2","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[],"src":"2450:2:2"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"2481:0:2"},"scope":496,"src":"2433:117:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":497,"src":"602:1950:2","usedErrors":[]}],"src":"105:2448:2"},"id":2},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[561]},"id":562,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":498,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:3"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"137:750:3","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":561,"linearizedBaseContracts":[561],"name":"ReentrancyGuard","nameLocation":"906:15:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":502,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:3","nodeType":"VariableDeclaration","scope":561,"src":"1676:41:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":500,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":505,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:3","nodeType":"VariableDeclaration","scope":561,"src":"1723:37:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":507,"mutability":"mutable","name":"_status","nameLocation":"1783:7:3","nodeType":"VariableDeclaration","scope":561,"src":"1767:23:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":514,"nodeType":"Block","src":"1811:39:3","statements":[{"expression":{"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":510,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"1821:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":511,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"1831:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":513,"nodeType":"ExpressionStatement","src":"1821:22:3"}]},"id":515,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":508,"nodeType":"ParameterList","parameters":[],"src":"1808:2:3"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[],"src":"1811:0:3"},"scope":561,"src":"1797:53:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":525,"nodeType":"Block","src":"2251:79:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":518,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"2261:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"ExpressionStatement","src":"2261:21:3"},{"id":521,"nodeType":"PlaceholderStatement","src":"2292:1:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":522,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"2303:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"ExpressionStatement","src":"2303:20:3"}]},"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"1856:366:3","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":526,"name":"nonReentrant","nameLocation":"2236:12:3","nodeType":"ModifierDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"2248:2:3"},"src":"2227:103:3","virtual":false,"visibility":"internal"},{"body":{"id":540,"nodeType":"Block","src":"2375:248:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":530,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"2468:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":531,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"2479:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":529,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":535,"nodeType":"ExpressionStatement","src":"2460:63:3"},{"expression":{"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":536,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"2598:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":537,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"2608:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":539,"nodeType":"ExpressionStatement","src":"2598:18:3"}]},"id":541,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:3","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"2364:2:3"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[],"src":"2375:0:3"},"scope":561,"src":"2336:287:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":548,"nodeType":"Block","src":"2667:171:3","statements":[{"expression":{"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":544,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"2809:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":545,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2819:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":547,"nodeType":"ExpressionStatement","src":"2809:22:3"}]},"id":549,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:3","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"2656:2:3"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"2667:0:3"},"scope":561,"src":"2629:209:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":559,"nodeType":"Block","src":"3081:43:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":555,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"3098:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":556,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"3109:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":554,"id":558,"nodeType":"Return","src":"3091:26:3"}]},"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"2844:168:3","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":560,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:3","nodeType":"FunctionDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[],"src":"3049:2:3"},"returnParameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":560,"src":"3075:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":552,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:3"},"scope":561,"src":"3017:107:3","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":562,"src":"888:2238:3","usedErrors":[]}],"src":"112:3015:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[583]},"id":584,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":563,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"111:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":583,"linearizedBaseContracts":[583],"name":"Context","nameLocation":"626:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":572,"nodeType":"Block","src":"702:34:4","statements":[{"expression":{"expression":{"id":569,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:4","memberName":"sender","nodeType":"MemberAccess","src":"719:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":568,"id":571,"nodeType":"Return","src":"712:17:4"}]},"id":573,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:4","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[],"src":"659:2:4"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":573,"src":"693:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:4"},"scope":583,"src":"640:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":581,"nodeType":"Block","src":"809:32:4","statements":[{"expression":{"expression":{"id":578,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:4","memberName":"data","nodeType":"MemberAccess","src":"826:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":577,"id":580,"nodeType":"Return","src":"819:15:4"}]},"id":582,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:4","nodeType":"FunctionDefinition","parameters":{"id":574,"nodeType":"ParameterList","parameters":[],"src":"759:2:4"},"returnParameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":582,"src":"793:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":575,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:4"},"scope":583,"src":"742:99:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":584,"src":"608:235:4","usedErrors":[]}],"src":"86:758:4"},"id":4},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1714],"SignedMath":[1819],"Strings":[812]},"id":813,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":585,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":586,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":813,"sourceUnit":1715,"src":"126:25:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":587,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":813,"sourceUnit":1820,"src":"152:31:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"185:34:5","text":" @dev String operations."},"fullyImplemented":true,"id":812,"linearizedBaseContracts":[812],"name":"Strings","nameLocation":"228:7:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":591,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:5","nodeType":"VariableDeclaration","scope":812,"src":"242:54:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":589,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":594,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:5","nodeType":"VariableDeclaration","scope":812,"src":"302:43:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":592,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:5","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":641,"nodeType":"Block","src":"518:625:5","statements":[{"id":640,"nodeType":"UncheckedBlock","src":"528:609:5","statements":[{"assignments":[603],"declarations":[{"constant":false,"id":603,"mutability":"mutable","name":"length","nameLocation":"560:6:5","nodeType":"VariableDeclaration","scope":640,"src":"552:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":610,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"580:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":604,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"569:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1714_$","typeString":"type(library Math)"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:5","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1551,"src":"569:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:5"},{"assignments":[612],"declarations":[{"constant":false,"id":612,"mutability":"mutable","name":"buffer","nameLocation":"618:6:5","nodeType":"VariableDeclaration","scope":640,"src":"604:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":611,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":617,"initialValue":{"arguments":[{"id":615,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"638:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":613,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:5"},{"assignments":[619],"declarations":[{"constant":false,"id":619,"mutability":"mutable","name":"ptr","nameLocation":"667:3:5","nodeType":"VariableDeclaration","scope":640,"src":"659:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":620,"nodeType":"VariableDeclarationStatement","src":"659:11:5"},{"AST":{"nodeType":"YulBlock","src":"740:67:5","statements":[{"nodeType":"YulAssignment","src":"758:35:5","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:5","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:5"},"nodeType":"YulFunctionCall","src":"777:15:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:5"},"nodeType":"YulFunctionCall","src":"765:28:5"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:5"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":612,"isOffset":false,"isSlot":false,"src":"769:6:5","valueSize":1},{"declaration":603,"isOffset":false,"isSlot":false,"src":"785:6:5","valueSize":1},{"declaration":619,"isOffset":false,"isSlot":false,"src":"758:3:5","valueSize":1}],"id":621,"nodeType":"InlineAssembly","src":"731:76:5"},{"body":{"id":636,"nodeType":"Block","src":"833:267:5","statements":[{"expression":{"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:5","subExpression":{"id":623,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"851:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":625,"nodeType":"ExpressionStatement","src":"851:5:5"},{"AST":{"nodeType":"YulBlock","src":"934:84:5","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:5"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:5","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:5"},"nodeType":"YulFunctionCall","src":"974:14:5"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:5"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:5"},"nodeType":"YulFunctionCall","src":"969:30:5"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:5"},"nodeType":"YulFunctionCall","src":"956:44:5"},"nodeType":"YulExpressionStatement","src":"956:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":591,"isOffset":false,"isSlot":false,"src":"990:8:5","valueSize":1},{"declaration":619,"isOffset":false,"isSlot":false,"src":"964:3:5","valueSize":1},{"declaration":597,"isOffset":false,"isSlot":false,"src":"978:5:5","valueSize":1}],"id":626,"nodeType":"InlineAssembly","src":"925:93:5"},{"expression":{"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"1035:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":630,"nodeType":"ExpressionStatement","src":"1035:11:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"1068:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":635,"nodeType":"IfStatement","src":"1064:21:5","trueBody":{"id":634,"nodeType":"Break","src":"1080:5:5"}}]},"condition":{"hexValue":"74727565","id":622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":637,"nodeType":"WhileStatement","src":"820:280:5"},{"expression":{"id":638,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"1120:6:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":601,"id":639,"nodeType":"Return","src":"1113:13:5"}]}]},"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"352:90:5","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":642,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:5","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"value","nameLocation":"473:5:5","nodeType":"VariableDeclaration","scope":642,"src":"465:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:5"},"returnParameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":642,"src":"503:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":599,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:5"},"scope":812,"src":"447:696:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":669,"nodeType":"Block","src":"1313:103:5","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"1354:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:5","trueExpression":{"hexValue":"2d","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"1400:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":661,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"1385:10:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$1819_$","typeString":"type(library SignedMath)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:5","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":1818,"src":"1385:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":660,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[642,670],"referencedDeclaration":642,"src":"1376:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":652,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":650,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:5","typeDescriptions":{}}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":649,"id":668,"nodeType":"Return","src":"1323:86:5"}]},"documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"1149:89:5","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":670,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:5","nodeType":"FunctionDefinition","parameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"value","nameLocation":"1268:5:5","nodeType":"VariableDeclaration","scope":670,"src":"1261:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":644,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:5"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":670,"src":"1298:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":647,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:5"},"scope":812,"src":"1243:173:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"1595:100:5","statements":[{"id":688,"nodeType":"UncheckedBlock","src":"1605:84:5","statements":[{"expression":{"arguments":[{"id":679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"1648:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"1667:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":680,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"1655:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1714_$","typeString":"type(library Math)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:5","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1674,"src":"1655:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":678,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[690,766,786],"referencedDeclaration":766,"src":"1636:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":677,"id":687,"nodeType":"Return","src":"1629:49:5"}]}]},"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"1422:94:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:5","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"value","nameLocation":"1550:5:5","nodeType":"VariableDeclaration","scope":690,"src":"1542:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:5"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":690,"src":"1580:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":675,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:5"},"scope":812,"src":"1521:174:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":765,"nodeType":"Block","src":"1908:347:5","statements":[{"assignments":[701],"declarations":[{"constant":false,"id":701,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:5","nodeType":"VariableDeclaration","scope":765,"src":"1918:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":700,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":710,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":705,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"1954:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":702,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:5"},{"expression":{"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":711,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"1975:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":713,"indexExpression":{"hexValue":"30","id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":716,"nodeType":"ExpressionStatement","src":"1975:15:5"},{"expression":{"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":717,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"2000:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":719,"indexExpression":{"hexValue":"31","id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":722,"nodeType":"ExpressionStatement","src":"2000:15:5"},{"body":{"id":751,"nodeType":"Block","src":"2070:83:5","statements":[{"expression":{"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":737,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"2084:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":739,"indexExpression":{"id":738,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"2091:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":740,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"2096:8:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":744,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"2105:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":746,"nodeType":"ExpressionStatement","src":"2084:33:5"},{"expression":{"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"2131:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":750,"nodeType":"ExpressionStatement","src":"2131:11:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":731,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"2058:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":752,"initializationExpression":{"assignments":[724],"declarations":[{"constant":false,"id":724,"mutability":"mutable","name":"i","nameLocation":"2038:1:5","nodeType":"VariableDeclaration","scope":752,"src":"2030:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":730,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":726,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"2046:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:5"},"loopExpression":{"expression":{"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:5","subExpression":{"id":734,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"2067:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":736,"nodeType":"ExpressionStatement","src":"2065:3:5"},"nodeType":"ForStatement","src":"2025:128:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"2170:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":753,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":759,"nodeType":"ExpressionStatement","src":"2162:55:5"},{"expression":{"arguments":[{"id":762,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"2241:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":760,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:5","typeDescriptions":{}}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":699,"id":764,"nodeType":"Return","src":"2227:21:5"}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"1701:112:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":766,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:5","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"value","nameLocation":"1847:5:5","nodeType":"VariableDeclaration","scope":766,"src":"1839:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":692,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"length","nameLocation":"1862:6:5","nodeType":"VariableDeclaration","scope":766,"src":"1854:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":694,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:5"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":766,"src":"1893:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":697,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:5"},"scope":812,"src":"1818:437:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":785,"nodeType":"Block","src":"2480:76:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":779,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"2525:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":777,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:5","typeDescriptions":{}}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":775,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:5","typeDescriptions":{}}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":782,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"2533:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":774,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[690,766,786],"referencedDeclaration":766,"src":"2497:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":773,"id":784,"nodeType":"Return","src":"2490:59:5"}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"2261:141:5","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":786,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:5","nodeType":"FunctionDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"addr","nameLocation":"2436:4:5","nodeType":"VariableDeclaration","scope":786,"src":"2428:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:5"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":786,"src":"2465:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":771,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:5"},"scope":812,"src":"2407:149:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":810,"nodeType":"Block","src":"2711:66:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":799,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"2744:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":797,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:5","typeDescriptions":{}}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":796,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":805,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"2767:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":803,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:5","typeDescriptions":{}}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":802,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":795,"id":809,"nodeType":"Return","src":"2721:49:5"}]},"documentation":{"id":787,"nodeType":"StructuredDocumentation","src":"2562:66:5","text":" @dev Returns true if the two strings are equal."},"id":811,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:5","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"a","nameLocation":"2662:1:5","nodeType":"VariableDeclaration","scope":811,"src":"2648:15:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":788,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"b","nameLocation":"2679:1:5","nodeType":"VariableDeclaration","scope":811,"src":"2665:15:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":790,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:5"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":811,"src":"2705:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":793,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:5"},"scope":812,"src":"2633:144:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":813,"src":"220:2559:5","usedErrors":[]}],"src":"101:2679:5"},"id":5},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[836],"IERC165":[848]},"id":837,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":814,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":815,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":837,"sourceUnit":849,"src":"124:23:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":817,"name":"IERC165","nameLocations":["754:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":848,"src":"754:7:6"},"id":818,"nodeType":"InheritanceSpecifier","src":"754:7:6"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"149:576:6","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":836,"linearizedBaseContracts":[836,848],"name":"ERC165","nameLocation":"744:6:6","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[847],"body":{"id":834,"nodeType":"Block","src":"920:64:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":827,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"937:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":829,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"957:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$848_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$848_$","typeString":"type(contract IERC165)"}],"id":828,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$848","typeString":"type(contract IERC165)"}},"id":831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":826,"id":833,"nodeType":"Return","src":"930:47:6"}]},"documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"768:56:6","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":835,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:6","nodeType":"FunctionDefinition","overrides":{"id":823,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:6"},"parameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:6","nodeType":"VariableDeclaration","scope":835,"src":"856:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":820,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:6"},"returnParameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":835,"src":"914:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":824,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:6"},"scope":836,"src":"829:155:6","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":837,"src":"726:260:6","usedErrors":[]}],"src":"99:888:6"},"id":6},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[848]},"id":849,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":838,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"125:279:7","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":848,"linearizedBaseContracts":[848],"name":"IERC165","nameLocation":"415:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":840,"nodeType":"StructuredDocumentation","src":"429:340:7","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":847,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:7","nodeType":"FunctionDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:7","nodeType":"VariableDeclaration","scope":847,"src":"801:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":841,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:7"},"returnParameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":847,"src":"844:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":844,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:7"},"scope":848,"src":"774:76:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":849,"src":"405:447:7","usedErrors":[]}],"src":"100:753:7"},"id":7},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1714]},"id":1715,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":850,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"128:73:8","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1714,"linearizedBaseContracts":[1714],"name":"Math","nameLocation":"210:4:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":855,"members":[{"id":852,"name":"Down","nameLocation":"245:4:8","nodeType":"EnumValue","src":"245:4:8"},{"id":853,"name":"Up","nameLocation":"287:2:8","nodeType":"EnumValue","src":"287:2:8"},{"id":854,"name":"Zero","nameLocation":"318:4:8","nodeType":"EnumValue","src":"318:4:8"}],"name":"Rounding","nameLocation":"226:8:8","nodeType":"EnumDefinition","src":"221:122:8"},{"body":{"id":872,"nodeType":"Block","src":"480:37:8","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":865,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"497:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":866,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"501:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":869,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"509:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:8","trueExpression":{"id":868,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"505:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":864,"id":871,"nodeType":"Return","src":"490:20:8"}]},"documentation":{"id":856,"nodeType":"StructuredDocumentation","src":"349:59:8","text":" @dev Returns the largest of two numbers."},"id":873,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:8","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"a","nameLocation":"434:1:8","nodeType":"VariableDeclaration","scope":873,"src":"426:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":857,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"b","nameLocation":"445:1:8","nodeType":"VariableDeclaration","scope":873,"src":"437:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:8"},"returnParameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":873,"src":"471:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":862,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:8"},"scope":1714,"src":"413:104:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":890,"nodeType":"Block","src":"655:37:8","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":883,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"672:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":884,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"676:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":887,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"684:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:8","trueExpression":{"id":886,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"680:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":882,"id":889,"nodeType":"Return","src":"665:20:8"}]},"documentation":{"id":874,"nodeType":"StructuredDocumentation","src":"523:60:8","text":" @dev Returns the smallest of two numbers."},"id":891,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:8","nodeType":"FunctionDefinition","parameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"a","nameLocation":"609:1:8","nodeType":"VariableDeclaration","scope":891,"src":"601:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":878,"mutability":"mutable","name":"b","nameLocation":"620:1:8","nodeType":"VariableDeclaration","scope":891,"src":"612:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":877,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:8"},"returnParameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":891,"src":"646:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":880,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:8"},"scope":1714,"src":"588:104:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":913,"nodeType":"Block","src":"876:82:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":901,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"931:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":902,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"935:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":905,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"941:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":906,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"945:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":908,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":900,"id":912,"nodeType":"Return","src":"923:28:8"}]},"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"698:102:8","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":914,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:8","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"a","nameLocation":"830:1:8","nodeType":"VariableDeclaration","scope":914,"src":"822:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"b","nameLocation":"841:1:8","nodeType":"VariableDeclaration","scope":914,"src":"833:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:8"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":914,"src":"867:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":898,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:8"},"scope":1714,"src":"805:153:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":938,"nodeType":"Block","src":"1228:123:8","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":924,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"1316:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":928,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"1330:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":932,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"1339:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:8","trueExpression":{"hexValue":"30","id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":923,"id":937,"nodeType":"Return","src":"1309:35:8"}]},"documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"964:188:8","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":939,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:8","nodeType":"FunctionDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"a","nameLocation":"1182:1:8","nodeType":"VariableDeclaration","scope":939,"src":"1174:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":919,"mutability":"mutable","name":"b","nameLocation":"1193:1:8","nodeType":"VariableDeclaration","scope":939,"src":"1185:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:8"},"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":939,"src":"1219:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:8"},"scope":1714,"src":"1157:194:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1061,"nodeType":"Block","src":"1765:4115:8","statements":[{"id":1060,"nodeType":"UncheckedBlock","src":"1775:4099:8","statements":[{"assignments":[952],"declarations":[{"constant":false,"id":952,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:8","nodeType":"VariableDeclaration","scope":1060,"src":"2096:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":953,"nodeType":"VariableDeclarationStatement","src":"2096:13:8"},{"assignments":[955],"declarations":[{"constant":false,"id":955,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:8","nodeType":"VariableDeclaration","scope":1060,"src":"2168:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":956,"nodeType":"VariableDeclarationStatement","src":"2168:13:8"},{"AST":{"nodeType":"YulBlock","src":"2248:157:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:8"},"nodeType":"YulFunctionCall","src":"2289:6:8"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:8"},"nodeType":"YulFunctionCall","src":"2276:20:8"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:8","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:8"},"nodeType":"YulFunctionCall","src":"2322:9:8"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:8"}]},{"nodeType":"YulAssignment","src":"2348:43:8","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:8"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:8"},"nodeType":"YulFunctionCall","src":"2361:14:8"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:8"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:8"},"nodeType":"YulFunctionCall","src":"2377:13:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:8"},"nodeType":"YulFunctionCall","src":"2357:34:8"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":952,"isOffset":false,"isSlot":false,"src":"2313:5:8","valueSize":1},{"declaration":952,"isOffset":false,"isSlot":false,"src":"2369:5:8","valueSize":1},{"declaration":952,"isOffset":false,"isSlot":false,"src":"2384:5:8","valueSize":1},{"declaration":955,"isOffset":false,"isSlot":false,"src":"2348:5:8","valueSize":1},{"declaration":942,"isOffset":false,"isSlot":false,"src":"2283:1:8","valueSize":1},{"declaration":942,"isOffset":false,"isSlot":false,"src":"2326:1:8","valueSize":1},{"declaration":944,"isOffset":false,"isSlot":false,"src":"2286:1:8","valueSize":1},{"declaration":944,"isOffset":false,"isSlot":false,"src":"2329:1:8","valueSize":1}],"id":957,"nodeType":"InlineAssembly","src":"2239:166:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":958,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"2486:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":966,"nodeType":"IfStatement","src":"2482:368:8","trueBody":{"id":965,"nodeType":"Block","src":"2498:352:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":961,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"2816:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":962,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2824:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":950,"id":964,"nodeType":"Return","src":"2809:26:8"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":968,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2960:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":969,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"2974:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":967,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":973,"nodeType":"ExpressionStatement","src":"2952:53:8"},{"assignments":[975],"declarations":[{"constant":false,"id":975,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:8","nodeType":"VariableDeclaration","scope":1060,"src":"3261:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":974,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":976,"nodeType":"VariableDeclarationStatement","src":"3261:17:8"},{"AST":{"nodeType":"YulBlock","src":"3301:291:8","statements":[{"nodeType":"YulAssignment","src":"3370:38:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:8"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:8"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:8"},"nodeType":"YulFunctionCall","src":"3383:25:8"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:8"}]},{"nodeType":"YulAssignment","src":"3490:41:8","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:8"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:8"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:8"},"nodeType":"YulFunctionCall","src":"3510:20:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:8"},"nodeType":"YulFunctionCall","src":"3499:32:8"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:8"}]},{"nodeType":"YulAssignment","src":"3548:30:8","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:8"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:8"},"nodeType":"YulFunctionCall","src":"3557:21:8"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":946,"isOffset":false,"isSlot":false,"src":"3396:11:8","valueSize":1},{"declaration":952,"isOffset":false,"isSlot":false,"src":"3524:5:8","valueSize":1},{"declaration":952,"isOffset":false,"isSlot":false,"src":"3548:5:8","valueSize":1},{"declaration":952,"isOffset":false,"isSlot":false,"src":"3561:5:8","valueSize":1},{"declaration":955,"isOffset":false,"isSlot":false,"src":"3490:5:8","valueSize":1},{"declaration":955,"isOffset":false,"isSlot":false,"src":"3503:5:8","valueSize":1},{"declaration":975,"isOffset":false,"isSlot":false,"src":"3370:9:8","valueSize":1},{"declaration":975,"isOffset":false,"isSlot":false,"src":"3513:9:8","valueSize":1},{"declaration":975,"isOffset":false,"isSlot":false,"src":"3568:9:8","valueSize":1},{"declaration":942,"isOffset":false,"isSlot":false,"src":"3390:1:8","valueSize":1},{"declaration":944,"isOffset":false,"isSlot":false,"src":"3393:1:8","valueSize":1}],"id":977,"nodeType":"InlineAssembly","src":"3292:300:8"},{"assignments":[979],"declarations":[{"constant":false,"id":979,"mutability":"mutable","name":"twos","nameLocation":"3907:4:8","nodeType":"VariableDeclaration","scope":1060,"src":"3899:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":987,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":980,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"3914:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:8","subExpression":{"id":981,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"3930:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":985,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:8"},{"AST":{"nodeType":"YulBlock","src":"3969:362:8","statements":[{"nodeType":"YulAssignment","src":"4034:37:8","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:8"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:8"},"nodeType":"YulFunctionCall","src":"4049:22:8"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:8"}]},{"nodeType":"YulAssignment","src":"4138:25:8","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:8"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:8"},"nodeType":"YulFunctionCall","src":"4147:16:8"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:8"}]},{"nodeType":"YulAssignment","src":"4278:39:8","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:8","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:8"},"nodeType":"YulFunctionCall","src":"4294:12:8"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:8"},"nodeType":"YulFunctionCall","src":"4290:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:8"},"nodeType":"YulFunctionCall","src":"4286:31:8"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":946,"isOffset":false,"isSlot":false,"src":"4034:11:8","valueSize":1},{"declaration":946,"isOffset":false,"isSlot":false,"src":"4053:11:8","valueSize":1},{"declaration":952,"isOffset":false,"isSlot":false,"src":"4138:5:8","valueSize":1},{"declaration":952,"isOffset":false,"isSlot":false,"src":"4151:5:8","valueSize":1},{"declaration":979,"isOffset":false,"isSlot":false,"src":"4066:4:8","valueSize":1},{"declaration":979,"isOffset":false,"isSlot":false,"src":"4158:4:8","valueSize":1},{"declaration":979,"isOffset":false,"isSlot":false,"src":"4278:4:8","valueSize":1},{"declaration":979,"isOffset":false,"isSlot":false,"src":"4301:4:8","valueSize":1},{"declaration":979,"isOffset":false,"isSlot":false,"src":"4308:4:8","valueSize":1}],"id":988,"nodeType":"InlineAssembly","src":"3960:371:8"},{"expression":{"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":989,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"4397:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":990,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"4406:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":991,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"4414:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":994,"nodeType":"ExpressionStatement","src":"4397:21:8"},{"assignments":[996],"declarations":[{"constant":false,"id":996,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:8","nodeType":"VariableDeclaration","scope":1060,"src":"4736:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":995,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1003,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":998,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"4759:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1000,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:8"},{"expression":{"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1004,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4992:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1006,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"5007:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1007,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5021:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1011,"nodeType":"ExpressionStatement","src":"4992:36:8"},{"expression":{"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1012,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5061:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1014,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"5076:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1015,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5090:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1019,"nodeType":"ExpressionStatement","src":"5061:36:8"},{"expression":{"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1020,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5131:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1022,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"5146:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1023,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5160:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1027,"nodeType":"ExpressionStatement","src":"5131:36:8"},{"expression":{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1028,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5201:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1030,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"5216:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1031,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5230:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1035,"nodeType":"ExpressionStatement","src":"5201:36:8"},{"expression":{"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1036,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5271:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1038,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"5286:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1039,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5300:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1043,"nodeType":"ExpressionStatement","src":"5271:36:8"},{"expression":{"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1044,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5342:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1046,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"5357:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1047,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5371:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1051,"nodeType":"ExpressionStatement","src":"5342:36:8"},{"expression":{"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1052,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"5812:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1053,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"5821:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1054,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5829:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1057,"nodeType":"ExpressionStatement","src":"5812:24:8"},{"expression":{"id":1058,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"5857:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":950,"id":1059,"nodeType":"Return","src":"5850:13:8"}]}]},"documentation":{"id":940,"nodeType":"StructuredDocumentation","src":"1357:305:8","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1062,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:8","nodeType":"FunctionDefinition","parameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"x","nameLocation":"1691:1:8","nodeType":"VariableDeclaration","scope":1062,"src":"1683:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":941,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":944,"mutability":"mutable","name":"y","nameLocation":"1702:1:8","nodeType":"VariableDeclaration","scope":1062,"src":"1694:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":946,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:8","nodeType":"VariableDeclaration","scope":1062,"src":"1705:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:8"},"returnParameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"result","nameLocation":"1757:6:8","nodeType":"VariableDeclaration","scope":1062,"src":"1749:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:8"},"scope":1714,"src":"1667:4213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1105,"nodeType":"Block","src":"6122:189:8","statements":[{"assignments":[1078],"declarations":[{"constant":false,"id":1078,"mutability":"mutable","name":"result","nameLocation":"6140:6:8","nodeType":"VariableDeclaration","scope":1105,"src":"6132:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1084,"initialValue":{"arguments":[{"id":1080,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"6156:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1081,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"6159:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1082,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"6162:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1079,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1062,1106],"referencedDeclaration":1062,"src":"6149:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1085,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"6188:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1086,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"6200:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$855_$","typeString":"type(enum Math.Rounding)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:8","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":853,"src":"6200:11:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"}},"src":"6188:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1090,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"6222:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1091,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"6225:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1092,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"6228:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1089,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:8","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1102,"nodeType":"IfStatement","src":"6184:98:8","trueBody":{"id":1101,"nodeType":"Block","src":"6246:36:8","statements":[{"expression":{"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6260:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1100,"nodeType":"ExpressionStatement","src":"6260:11:8"}]}},{"expression":{"id":1103,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6298:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1076,"id":1104,"nodeType":"Return","src":"6291:13:8"}]},"documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"5886:121:8","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1106,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:8","nodeType":"FunctionDefinition","parameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"x","nameLocation":"6036:1:8","nodeType":"VariableDeclaration","scope":1106,"src":"6028:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1064,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"y","nameLocation":"6047:1:8","nodeType":"VariableDeclaration","scope":1106,"src":"6039:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:8","nodeType":"VariableDeclaration","scope":1106,"src":"6050:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1068,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:8","nodeType":"VariableDeclaration","scope":1106,"src":"6071:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"},"typeName":{"id":1071,"nodeType":"UserDefinedTypeName","pathNode":{"id":1070,"name":"Rounding","nameLocations":["6071:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"6071:8:8"},"referencedDeclaration":855,"src":"6071:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:8"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1106,"src":"6113:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:8"},"scope":1714,"src":"6012:299:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1217,"nodeType":"Block","src":"6587:1585:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1114,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"6601:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1120,"nodeType":"IfStatement","src":"6597:45:8","trueBody":{"id":1119,"nodeType":"Block","src":"6609:33:8","statements":[{"expression":{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1113,"id":1118,"nodeType":"Return","src":"6623:8:8"}]}},{"assignments":[1122],"declarations":[{"constant":false,"id":1122,"mutability":"mutable","name":"result","nameLocation":"7329:6:8","nodeType":"VariableDeclaration","scope":1217,"src":"7321:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1121,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1131,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1125,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"7349:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1124,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1386,1422],"referencedDeclaration":1386,"src":"7344:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:8"},{"id":1216,"nodeType":"UncheckedBlock","src":"7758:408:8","statements":[{"expression":{"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1132,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"7782:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1133,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"7792:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1134,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"7801:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1135,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"7805:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1138,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1142,"nodeType":"ExpressionStatement","src":"7782:35:8"},{"expression":{"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1143,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"7831:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1144,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"7841:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1145,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"7850:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1146,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"7854:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1153,"nodeType":"ExpressionStatement","src":"7831:35:8"},{"expression":{"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"7880:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1155,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"7890:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1156,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"7899:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"7903:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1164,"nodeType":"ExpressionStatement","src":"7880:35:8"},{"expression":{"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1165,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"7929:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1166,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"7939:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1167,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"7948:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1168,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"7952:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1175,"nodeType":"ExpressionStatement","src":"7929:35:8"},{"expression":{"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1176,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"7978:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1177,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"7988:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1178,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"7997:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1179,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"8001:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1182,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1186,"nodeType":"ExpressionStatement","src":"7978:35:8"},{"expression":{"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1187,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"8027:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1188,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"8037:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1189,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"8046:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1190,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"8050:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1193,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1197,"nodeType":"ExpressionStatement","src":"8027:35:8"},{"expression":{"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1198,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"8076:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1199,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"8086:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1200,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"8095:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1201,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"8099:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1208,"nodeType":"ExpressionStatement","src":"8076:35:8"},{"expression":{"arguments":[{"id":1210,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"8136:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1211,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"8144:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1212,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"8148:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1209,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"8132:3:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1113,"id":1215,"nodeType":"Return","src":"8125:30:8"}]}]},"documentation":{"id":1107,"nodeType":"StructuredDocumentation","src":"6317:208:8","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1218,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:8","nodeType":"FunctionDefinition","parameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"a","nameLocation":"6552:1:8","nodeType":"VariableDeclaration","scope":1218,"src":"6544:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:8"},"returnParameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1218,"src":"6578:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:8"},"scope":1714,"src":"6530:1642:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1253,"nodeType":"Block","src":"8348:161:8","statements":[{"id":1252,"nodeType":"UncheckedBlock","src":"8358:145:8","statements":[{"assignments":[1230],"declarations":[{"constant":false,"id":1230,"mutability":"mutable","name":"result","nameLocation":"8390:6:8","nodeType":"VariableDeclaration","scope":1252,"src":"8382:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1234,"initialValue":{"arguments":[{"id":1232,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"8404:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1231,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1218,1254],"referencedDeclaration":1218,"src":"8399:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"8427:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"8437:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1237,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"8449:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$855_$","typeString":"type(enum Math.Rounding)"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:8","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":853,"src":"8449:11:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"}},"src":"8437:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"8464:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"8473:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1243,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"8482:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:8","trueExpression":{"hexValue":"31","id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1249,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1228,"id":1251,"nodeType":"Return","src":"8420:72:8"}]}]},"documentation":{"id":1219,"nodeType":"StructuredDocumentation","src":"8178:89:8","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1254,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:8","nodeType":"FunctionDefinition","parameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"a","nameLocation":"8294:1:8","nodeType":"VariableDeclaration","scope":1254,"src":"8286:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1220,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1224,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:8","nodeType":"VariableDeclaration","scope":1254,"src":"8297:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"},"typeName":{"id":1223,"nodeType":"UserDefinedTypeName","pathNode":{"id":1222,"name":"Rounding","nameLocations":["8297:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"8297:8:8"},"referencedDeclaration":855,"src":"8297:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:8"},"returnParameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1254,"src":"8339:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:8"},"scope":1714,"src":"8272:237:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1385,"nodeType":"Block","src":"8694:922:8","statements":[{"assignments":[1263],"declarations":[{"constant":false,"id":1263,"mutability":"mutable","name":"result","nameLocation":"8712:6:8","nodeType":"VariableDeclaration","scope":1385,"src":"8704:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1265,"initialValue":{"hexValue":"30","id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:8"},{"id":1382,"nodeType":"UncheckedBlock","src":"8732:855:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"8760:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1280,"nodeType":"IfStatement","src":"8756:99:8","trueBody":{"id":1279,"nodeType":"Block","src":"8778:77:8","statements":[{"expression":{"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"8796:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1274,"nodeType":"ExpressionStatement","src":"8796:13:8"},{"expression":{"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1275,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"8827:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1278,"nodeType":"ExpressionStatement","src":"8827:13:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"8872:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1295,"nodeType":"IfStatement","src":"8868:96:8","trueBody":{"id":1294,"nodeType":"Block","src":"8889:75:8","statements":[{"expression":{"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"8907:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1289,"nodeType":"ExpressionStatement","src":"8907:12:8"},{"expression":{"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1290,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"8937:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1293,"nodeType":"ExpressionStatement","src":"8937:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"8981:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1310,"nodeType":"IfStatement","src":"8977:96:8","trueBody":{"id":1309,"nodeType":"Block","src":"8998:75:8","statements":[{"expression":{"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9016:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1304,"nodeType":"ExpressionStatement","src":"9016:12:8"},{"expression":{"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1305,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9046:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1308,"nodeType":"ExpressionStatement","src":"9046:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9090:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1325,"nodeType":"IfStatement","src":"9086:96:8","trueBody":{"id":1324,"nodeType":"Block","src":"9107:75:8","statements":[{"expression":{"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9125:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1319,"nodeType":"ExpressionStatement","src":"9125:12:8"},{"expression":{"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1320,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9155:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1323,"nodeType":"ExpressionStatement","src":"9155:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9199:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1340,"nodeType":"IfStatement","src":"9195:93:8","trueBody":{"id":1339,"nodeType":"Block","src":"9215:73:8","statements":[{"expression":{"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9233:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1334,"nodeType":"ExpressionStatement","src":"9233:11:8"},{"expression":{"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9262:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1338,"nodeType":"ExpressionStatement","src":"9262:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9305:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1355,"nodeType":"IfStatement","src":"9301:93:8","trueBody":{"id":1354,"nodeType":"Block","src":"9321:73:8","statements":[{"expression":{"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9339:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1349,"nodeType":"ExpressionStatement","src":"9339:11:8"},{"expression":{"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1350,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9368:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1353,"nodeType":"ExpressionStatement","src":"9368:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9411:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1370,"nodeType":"IfStatement","src":"9407:93:8","trueBody":{"id":1369,"nodeType":"Block","src":"9427:73:8","statements":[{"expression":{"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9445:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1364,"nodeType":"ExpressionStatement","src":"9445:11:8"},{"expression":{"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1365,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9474:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1368,"nodeType":"ExpressionStatement","src":"9474:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9517:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1381,"nodeType":"IfStatement","src":"9513:64:8","trueBody":{"id":1380,"nodeType":"Block","src":"9533:44:8","statements":[{"expression":{"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1376,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9551:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1379,"nodeType":"ExpressionStatement","src":"9551:11:8"}]}}]},{"expression":{"id":1383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9603:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1261,"id":1384,"nodeType":"Return","src":"9596:13:8"}]},"documentation":{"id":1255,"nodeType":"StructuredDocumentation","src":"8515:113:8","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1386,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:8","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"value","nameLocation":"8655:5:8","nodeType":"VariableDeclaration","scope":1386,"src":"8647:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:8"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1386,"src":"8685:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:8"},"scope":1714,"src":"8633:983:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1421,"nodeType":"Block","src":"9849:165:8","statements":[{"id":1420,"nodeType":"UncheckedBlock","src":"9859:149:8","statements":[{"assignments":[1398],"declarations":[{"constant":false,"id":1398,"mutability":"mutable","name":"result","nameLocation":"9891:6:8","nodeType":"VariableDeclaration","scope":1420,"src":"9883:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1402,"initialValue":{"arguments":[{"id":1400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"9905:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1399,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1386,1422],"referencedDeclaration":1386,"src":"9900:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1403,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"9932:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1404,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"9942:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1405,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"9954:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$855_$","typeString":"type(enum Math.Rounding)"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:8","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":853,"src":"9954:11:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"}},"src":"9942:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1409,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"9974:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"9983:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:8","trueExpression":{"hexValue":"31","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1396,"id":1419,"nodeType":"Return","src":"9925:72:8"}]}]},"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"9622:142:8","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1422,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:8","nodeType":"FunctionDefinition","parameters":{"id":1393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"mutability":"mutable","name":"value","nameLocation":"9791:5:8","nodeType":"VariableDeclaration","scope":1422,"src":"9783:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1388,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1392,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:8","nodeType":"VariableDeclaration","scope":1422,"src":"9798:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"},"typeName":{"id":1391,"nodeType":"UserDefinedTypeName","pathNode":{"id":1390,"name":"Rounding","nameLocations":["9798:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"9798:8:8"},"referencedDeclaration":855,"src":"9798:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:8"},"returnParameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1422,"src":"9840:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:8"},"scope":1714,"src":"9769:245:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1550,"nodeType":"Block","src":"10201:854:8","statements":[{"assignments":[1431],"declarations":[{"constant":false,"id":1431,"mutability":"mutable","name":"result","nameLocation":"10219:6:8","nodeType":"VariableDeclaration","scope":1550,"src":"10211:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1433,"initialValue":{"hexValue":"30","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:8"},{"id":1547,"nodeType":"UncheckedBlock","src":"10239:787:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"10267:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1450,"nodeType":"IfStatement","src":"10263:103:8","trueBody":{"id":1449,"nodeType":"Block","src":"10286:80:8","statements":[{"expression":{"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"10304:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1444,"nodeType":"ExpressionStatement","src":"10304:17:8"},{"expression":{"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1445,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"10339:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1448,"nodeType":"ExpressionStatement","src":"10339:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"10383:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1467,"nodeType":"IfStatement","src":"10379:103:8","trueBody":{"id":1466,"nodeType":"Block","src":"10402:80:8","statements":[{"expression":{"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"10420:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1461,"nodeType":"ExpressionStatement","src":"10420:17:8"},{"expression":{"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1462,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"10455:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1465,"nodeType":"ExpressionStatement","src":"10455:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"10499:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1484,"nodeType":"IfStatement","src":"10495:103:8","trueBody":{"id":1483,"nodeType":"Block","src":"10518:80:8","statements":[{"expression":{"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"10536:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1478,"nodeType":"ExpressionStatement","src":"10536:17:8"},{"expression":{"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"10571:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1482,"nodeType":"ExpressionStatement","src":"10571:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"10615:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1501,"nodeType":"IfStatement","src":"10611:100:8","trueBody":{"id":1500,"nodeType":"Block","src":"10633:78:8","statements":[{"expression":{"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"10651:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1495,"nodeType":"ExpressionStatement","src":"10651:16:8"},{"expression":{"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1496,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"10685:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1499,"nodeType":"ExpressionStatement","src":"10685:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"10728:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1518,"nodeType":"IfStatement","src":"10724:100:8","trueBody":{"id":1517,"nodeType":"Block","src":"10746:78:8","statements":[{"expression":{"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"10764:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1512,"nodeType":"ExpressionStatement","src":"10764:16:8"},{"expression":{"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1513,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"10798:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1516,"nodeType":"ExpressionStatement","src":"10798:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"10841:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1535,"nodeType":"IfStatement","src":"10837:100:8","trueBody":{"id":1534,"nodeType":"Block","src":"10859:78:8","statements":[{"expression":{"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"10877:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1529,"nodeType":"ExpressionStatement","src":"10877:16:8"},{"expression":{"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1530,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"10911:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1533,"nodeType":"ExpressionStatement","src":"10911:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"10954:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1546,"nodeType":"IfStatement","src":"10950:66:8","trueBody":{"id":1545,"nodeType":"Block","src":"10972:44:8","statements":[{"expression":{"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1541,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"10990:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1544,"nodeType":"ExpressionStatement","src":"10990:11:8"}]}}]},{"expression":{"id":1548,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"11042:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1429,"id":1549,"nodeType":"Return","src":"11035:13:8"}]},"documentation":{"id":1423,"nodeType":"StructuredDocumentation","src":"10020:114:8","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1551,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:8","nodeType":"FunctionDefinition","parameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"value","nameLocation":"10162:5:8","nodeType":"VariableDeclaration","scope":1551,"src":"10154:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1424,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:8"},"returnParameters":{"id":1429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1551,"src":"10192:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:8"},"scope":1714,"src":"10139:916:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1586,"nodeType":"Block","src":"11290:167:8","statements":[{"id":1585,"nodeType":"UncheckedBlock","src":"11300:151:8","statements":[{"assignments":[1563],"declarations":[{"constant":false,"id":1563,"mutability":"mutable","name":"result","nameLocation":"11332:6:8","nodeType":"VariableDeclaration","scope":1585,"src":"11324:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1562,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1567,"initialValue":{"arguments":[{"id":1565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"11347:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1564,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1551,1587],"referencedDeclaration":1551,"src":"11341:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1568,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"11374:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1569,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"11384:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1570,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"11396:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$855_$","typeString":"type(enum Math.Rounding)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:8","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":853,"src":"11396:11:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"}},"src":"11384:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1574,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"11417:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"11426:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:8","trueExpression":{"hexValue":"31","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1582,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1561,"id":1584,"nodeType":"Return","src":"11367:73:8"}]}]},"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"11061:143:8","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1587,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:8","nodeType":"FunctionDefinition","parameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"value","nameLocation":"11232:5:8","nodeType":"VariableDeclaration","scope":1587,"src":"11224:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1557,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:8","nodeType":"VariableDeclaration","scope":1587,"src":"11239:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"},"typeName":{"id":1556,"nodeType":"UserDefinedTypeName","pathNode":{"id":1555,"name":"Rounding","nameLocations":["11239:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"11239:8:8"},"referencedDeclaration":855,"src":"11239:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:8"},"returnParameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1587,"src":"11281:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1559,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:8"},"scope":1714,"src":"11209:248:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1673,"nodeType":"Block","src":"11771:600:8","statements":[{"assignments":[1596],"declarations":[{"constant":false,"id":1596,"mutability":"mutable","name":"result","nameLocation":"11789:6:8","nodeType":"VariableDeclaration","scope":1673,"src":"11781:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1598,"initialValue":{"hexValue":"30","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:8"},{"id":1670,"nodeType":"UncheckedBlock","src":"11809:533:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"11837:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1613,"nodeType":"IfStatement","src":"11833:98:8","trueBody":{"id":1612,"nodeType":"Block","src":"11855:76:8","statements":[{"expression":{"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"11873:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1607,"nodeType":"ExpressionStatement","src":"11873:13:8"},{"expression":{"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"11904:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1611,"nodeType":"ExpressionStatement","src":"11904:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"11948:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1628,"nodeType":"IfStatement","src":"11944:95:8","trueBody":{"id":1627,"nodeType":"Block","src":"11965:74:8","statements":[{"expression":{"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"11983:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1622,"nodeType":"ExpressionStatement","src":"11983:12:8"},{"expression":{"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1623,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"12013:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1626,"nodeType":"ExpressionStatement","src":"12013:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"12056:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1643,"nodeType":"IfStatement","src":"12052:95:8","trueBody":{"id":1642,"nodeType":"Block","src":"12073:74:8","statements":[{"expression":{"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"12091:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1637,"nodeType":"ExpressionStatement","src":"12091:12:8"},{"expression":{"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1638,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"12121:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1641,"nodeType":"ExpressionStatement","src":"12121:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"12164:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1658,"nodeType":"IfStatement","src":"12160:95:8","trueBody":{"id":1657,"nodeType":"Block","src":"12181:74:8","statements":[{"expression":{"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"12199:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1652,"nodeType":"ExpressionStatement","src":"12199:12:8"},{"expression":{"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1653,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"12229:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1656,"nodeType":"ExpressionStatement","src":"12229:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"12272:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1669,"nodeType":"IfStatement","src":"12268:64:8","trueBody":{"id":1668,"nodeType":"Block","src":"12288:44:8","statements":[{"expression":{"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1664,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"12306:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1667,"nodeType":"ExpressionStatement","src":"12306:11:8"}]}}]},{"expression":{"id":1671,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"12358:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1594,"id":1672,"nodeType":"Return","src":"12351:13:8"}]},"documentation":{"id":1588,"nodeType":"StructuredDocumentation","src":"11463:240:8","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1674,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:8","nodeType":"FunctionDefinition","parameters":{"id":1591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"value","nameLocation":"11732:5:8","nodeType":"VariableDeclaration","scope":1674,"src":"11724:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1589,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:8"},"returnParameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1674,"src":"11762:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:8"},"scope":1714,"src":"11708:663:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1712,"nodeType":"Block","src":"12608:174:8","statements":[{"id":1711,"nodeType":"UncheckedBlock","src":"12618:158:8","statements":[{"assignments":[1686],"declarations":[{"constant":false,"id":1686,"mutability":"mutable","name":"result","nameLocation":"12650:6:8","nodeType":"VariableDeclaration","scope":1711,"src":"12642:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1685,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1690,"initialValue":{"arguments":[{"id":1688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"12666:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1687,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1674,1713],"referencedDeclaration":1674,"src":"12659:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1691,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"12693:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1692,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"12703:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1693,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"12715:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$855_$","typeString":"type(enum Math.Rounding)"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:8","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":853,"src":"12715:11:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"}},"src":"12703:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1697,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"12736:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1700,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"12751:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:8","trueExpression":{"hexValue":"31","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1708,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1684,"id":1710,"nodeType":"Return","src":"12686:79:8"}]}]},"documentation":{"id":1675,"nodeType":"StructuredDocumentation","src":"12377:144:8","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:8","nodeType":"FunctionDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"value","nameLocation":"12550:5:8","nodeType":"VariableDeclaration","scope":1713,"src":"12542:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1676,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1680,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:8","nodeType":"VariableDeclaration","scope":1713,"src":"12557:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"},"typeName":{"id":1679,"nodeType":"UserDefinedTypeName","pathNode":{"id":1678,"name":"Rounding","nameLocations":["12557:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"12557:8:8"},"referencedDeclaration":855,"src":"12557:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$855","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:8"},"returnParameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1713,"src":"12599:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1682,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:8"},"scope":1714,"src":"12526:256:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1715,"src":"202:12582:8","usedErrors":[]}],"src":"103:12682:8"},"id":8},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[1819]},"id":1820,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1716,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"134:80:9","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1819,"linearizedBaseContracts":[1819],"name":"SignedMath","nameLocation":"223:10:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1734,"nodeType":"Block","src":"375:37:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1727,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"392:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1728,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"396:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1731,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"404:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:9","trueExpression":{"id":1730,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"400:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1726,"id":1733,"nodeType":"Return","src":"385:20:9"}]},"documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"240:66:9","text":" @dev Returns the largest of two signed numbers."},"id":1735,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:9","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"a","nameLocation":"331:1:9","nodeType":"VariableDeclaration","scope":1735,"src":"324:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1719,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"b","nameLocation":"341:1:9","nodeType":"VariableDeclaration","scope":1735,"src":"334:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1721,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:9"},"returnParameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1735,"src":"367:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1724,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:9"},"scope":1819,"src":"311:101:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1752,"nodeType":"Block","src":"554:37:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1745,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"571:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1746,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"575:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1749,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"583:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:9","trueExpression":{"id":1748,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"579:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1744,"id":1751,"nodeType":"Return","src":"564:20:9"}]},"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"418:67:9","text":" @dev Returns the smallest of two signed numbers."},"id":1753,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:9","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"a","nameLocation":"510:1:9","nodeType":"VariableDeclaration","scope":1753,"src":"503:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1737,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"b","nameLocation":"520:1:9","nodeType":"VariableDeclaration","scope":1753,"src":"513:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1739,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:9"},"returnParameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1753,"src":"546:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1742,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:9"},"scope":1819,"src":"490:101:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1796,"nodeType":"Block","src":"796:162:9","statements":[{"assignments":[1764],"declarations":[{"constant":false,"id":1764,"mutability":"mutable","name":"x","nameLocation":"865:1:9","nodeType":"VariableDeclaration","scope":1796,"src":"858:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1763,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1777,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1765,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"870:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1766,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"874:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1768,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1769,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"881:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1770,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"885:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:9"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1778,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"910:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1783,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"930:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1781,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:9","typeDescriptions":{}}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1779,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:9","typeDescriptions":{}}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1788,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"944:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1789,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"948:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1793,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1762,"id":1795,"nodeType":"Return","src":"903:48:9"}]},"documentation":{"id":1754,"nodeType":"StructuredDocumentation","src":"597:126:9","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":1797,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:9","nodeType":"FunctionDefinition","parameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1756,"mutability":"mutable","name":"a","nameLocation":"752:1:9","nodeType":"VariableDeclaration","scope":1797,"src":"745:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1755,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1758,"mutability":"mutable","name":"b","nameLocation":"762:1:9","nodeType":"VariableDeclaration","scope":1797,"src":"755:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1757,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:9"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1797,"src":"788:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1760,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:9"},"scope":1819,"src":"728:230:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1817,"nodeType":"Block","src":"1102:158:9","statements":[{"id":1816,"nodeType":"UncheckedBlock","src":"1112:142:9","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1807,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"1227:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:9","subExpression":{"id":1811,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"1241:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:9","trueExpression":{"id":1810,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"1236:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:9","typeDescriptions":{}}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1804,"id":1815,"nodeType":"Return","src":"1212:31:9"}]}]},"documentation":{"id":1798,"nodeType":"StructuredDocumentation","src":"964:78:9","text":" @dev Returns the absolute unsigned value of a signed value."},"id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:9","nodeType":"FunctionDefinition","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"mutability":"mutable","name":"n","nameLocation":"1067:1:9","nodeType":"VariableDeclaration","scope":1818,"src":"1060:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1799,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:9"},"returnParameters":{"id":1804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1818,"src":"1093:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1802,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:9"},"scope":1819,"src":"1047:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1820,"src":"215:1047:9","usedErrors":[]}],"src":"109:1154:9"},"id":9},"contracts/HMSRecords.sol":{"ast":{"absolutePath":"contracts/HMSRecords.sol","exportedSymbols":{"AccessControl":[315],"Context":[583],"ERC165":[836],"HMSRecords":[2601],"IAccessControl":[388],"IERC165":[848],"Math":[1714],"Pausable":[496],"ReentrancyGuard":[561],"SignedMath":[1819],"Strings":[812]},"id":2602,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1821,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:10"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":1822,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2602,"sourceUnit":316,"src":"58:58:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":1823,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2602,"sourceUnit":562,"src":"117:62:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"@openzeppelin/contracts/security/Pausable.sol","id":1824,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2602,"sourceUnit":497,"src":"180:55:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1826,"name":"AccessControl","nameLocations":["419:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"419:13:10"},"id":1827,"nodeType":"InheritanceSpecifier","src":"419:13:10"},{"baseName":{"id":1828,"name":"ReentrancyGuard","nameLocations":["434:15:10"],"nodeType":"IdentifierPath","referencedDeclaration":561,"src":"434:15:10"},"id":1829,"nodeType":"InheritanceSpecifier","src":"434:15:10"},{"baseName":{"id":1830,"name":"Pausable","nameLocations":["451:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":496,"src":"451:8:10"},"id":1831,"nodeType":"InheritanceSpecifier","src":"451:8:10"}],"canonicalName":"HMSRecords","contractDependencies":[],"contractKind":"contract","documentation":{"id":1825,"nodeType":"StructuredDocumentation","src":"237:158:10","text":" @title HMSRecords\n @dev Smart contract for Hospital Management System record hashes\n Stores only hashes of medical records, not the actual data"},"fullyImplemented":true,"id":2601,"linearizedBaseContracts":[2601,496,561,315,836,848,388,583],"name":"HMSRecords","nameLocation":"405:10:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"fec331f2","id":1836,"mutability":"constant","name":"DOCTOR_ROLE","nameLocation":"490:11:10","nodeType":"VariableDeclaration","scope":2601,"src":"466:62:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"466:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"444f43544f525f524f4c45","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"514:13:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f","typeString":"literal_string \"DOCTOR_ROLE\""},"value":"DOCTOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f","typeString":"literal_string \"DOCTOR_ROLE\""}],"id":1833,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"504:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"504:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"75b238fc","id":1841,"mutability":"constant","name":"ADMIN_ROLE","nameLocation":"558:10:10","nodeType":"VariableDeclaration","scope":2601,"src":"534:60:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"534:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41444d494e5f524f4c45","id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"581:12:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""},"value":"ADMIN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""}],"id":1838,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"571:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"571:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"canonicalName":"HMSRecords.MedicalRecord","id":1854,"members":[{"constant":false,"id":1843,"mutability":"mutable","name":"patientId","nameLocation":"643:9:10","nodeType":"VariableDeclaration","scope":1854,"src":"636:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1842,"name":"string","nodeType":"ElementaryTypeName","src":"636:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"recordHash","nameLocation":"670:10:10","nodeType":"VariableDeclaration","scope":1854,"src":"662:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"662:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1847,"mutability":"mutable","name":"timestamp","nameLocation":"698:9:10","nodeType":"VariableDeclaration","scope":1854,"src":"690:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"690:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1849,"mutability":"mutable","name":"authorizedBy","nameLocation":"725:12:10","nodeType":"VariableDeclaration","scope":1854,"src":"717:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1848,"name":"address","nodeType":"ElementaryTypeName","src":"717:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1851,"mutability":"mutable","name":"recordType","nameLocation":"754:10:10","nodeType":"VariableDeclaration","scope":1854,"src":"747:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1850,"name":"string","nodeType":"ElementaryTypeName","src":"747:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"isActive","nameLocation":"828:8:10","nodeType":"VariableDeclaration","scope":1854,"src":"823:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1852,"name":"bool","nodeType":"ElementaryTypeName","src":"823:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"MedicalRecord","nameLocation":"612:13:10","nodeType":"StructDefinition","scope":2601,"src":"605:238:10","visibility":"public"},{"canonicalName":"HMSRecords.Patient","id":1866,"members":[{"constant":false,"id":1856,"mutability":"mutable","name":"patientId","nameLocation":"885:9:10","nodeType":"VariableDeclaration","scope":1866,"src":"878:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1855,"name":"string","nodeType":"ElementaryTypeName","src":"878:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"identityHash","nameLocation":"912:12:10","nodeType":"VariableDeclaration","scope":1866,"src":"904:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"904:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1861,"mutability":"mutable","name":"authorizedDoctors","nameLocation":"977:17:10","nodeType":"VariableDeclaration","scope":1866,"src":"967:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1859,"name":"address","nodeType":"ElementaryTypeName","src":"967:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1860,"nodeType":"ArrayTypeName","src":"967:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1863,"mutability":"mutable","name":"createdAt","nameLocation":"1012:9:10","nodeType":"VariableDeclaration","scope":1866,"src":"1004:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1004:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1865,"mutability":"mutable","name":"isActive","nameLocation":"1036:8:10","nodeType":"VariableDeclaration","scope":1866,"src":"1031:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1864,"name":"bool","nodeType":"ElementaryTypeName","src":"1031:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Patient","nameLocation":"860:7:10","nodeType":"StructDefinition","scope":2601,"src":"853:198:10","visibility":"public"},{"constant":false,"functionSelector":"c6009d84","id":1871,"mutability":"mutable","name":"patients","nameLocation":"1111:8:10","nodeType":"VariableDeclaration","scope":2601,"src":"1077:42:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Patient_$1866_storage_$","typeString":"mapping(string => struct HMSRecords.Patient)"},"typeName":{"id":1870,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1867,"name":"string","nodeType":"ElementaryTypeName","src":"1085:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1077:26:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Patient_$1866_storage_$","typeString":"mapping(string => struct HMSRecords.Patient)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1869,"nodeType":"UserDefinedTypeName","pathNode":{"id":1868,"name":"Patient","nameLocations":["1095:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":1866,"src":"1095:7:10"},"referencedDeclaration":1866,"src":"1095:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Patient_$1866_storage_ptr","typeString":"struct HMSRecords.Patient"}}},"visibility":"public"},{"constant":false,"functionSelector":"01e64725","id":1876,"mutability":"mutable","name":"records","nameLocation":"1166:7:10","nodeType":"VariableDeclaration","scope":2601,"src":"1125:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MedicalRecord_$1854_storage_$","typeString":"mapping(bytes32 => struct HMSRecords.MedicalRecord)"},"typeName":{"id":1875,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1133:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1125:33:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MedicalRecord_$1854_storage_$","typeString":"mapping(bytes32 => struct HMSRecords.MedicalRecord)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1874,"nodeType":"UserDefinedTypeName","pathNode":{"id":1873,"name":"MedicalRecord","nameLocations":["1144:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1854,"src":"1144:13:10"},"referencedDeclaration":1854,"src":"1144:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$1854_storage_ptr","typeString":"struct HMSRecords.MedicalRecord"}}},"visibility":"public"},{"constant":false,"functionSelector":"b8a751df","id":1881,"mutability":"mutable","name":"patientRecords","nameLocation":"1215:14:10","nodeType":"VariableDeclaration","scope":2601,"src":"1179:50:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(string => bytes32[])"},"typeName":{"id":1880,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1877,"name":"string","nodeType":"ElementaryTypeName","src":"1187:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1179:28:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(string => bytes32[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1878,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1197:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1879,"nodeType":"ArrayTypeName","src":"1197:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"4ac9e300","id":1886,"mutability":"mutable","name":"doctorPatients","nameLocation":"1271:14:10","nodeType":"VariableDeclaration","scope":2601,"src":"1235:50:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string[])"},"typeName":{"id":1885,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1882,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1235:28:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1883,"name":"string","nodeType":"ElementaryTypeName","src":"1254:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1884,"nodeType":"ArrayTypeName","src":"1254:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"52366c21","id":1889,"mutability":"mutable","name":"allPatientIds","nameLocation":"1342:13:10","nodeType":"VariableDeclaration","scope":2601,"src":"1326:29:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":1887,"name":"string","nodeType":"ElementaryTypeName","src":"1326:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1888,"nodeType":"ArrayTypeName","src":"1326:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"public"},{"constant":false,"functionSelector":"07184900","id":1892,"mutability":"mutable","name":"allRecordHashes","nameLocation":"1378:15:10","nodeType":"VariableDeclaration","scope":2601,"src":"1361:32:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1361:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1891,"nodeType":"ArrayTypeName","src":"1361:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"ca7c439ac98ab508692c283175e70b79c56058dd05da29469976aadc904692f5","id":1902,"name":"PatientRegistered","nameLocation":"1424:17:10","nodeType":"EventDefinition","parameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"indexed":true,"mutability":"mutable","name":"patientId","nameLocation":"1466:9:10","nodeType":"VariableDeclaration","scope":1902,"src":"1451:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1893,"name":"string","nodeType":"ElementaryTypeName","src":"1451:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1896,"indexed":false,"mutability":"mutable","name":"identityHash","nameLocation":"1493:12:10","nodeType":"VariableDeclaration","scope":1902,"src":"1485:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1895,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1485:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1898,"indexed":true,"mutability":"mutable","name":"registeredBy","nameLocation":"1531:12:10","nodeType":"VariableDeclaration","scope":1902,"src":"1515:28:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1897,"name":"address","nodeType":"ElementaryTypeName","src":"1515:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1900,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1561:9:10","nodeType":"VariableDeclaration","scope":1902,"src":"1553:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"1553:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1441:135:10"},"src":"1418:159:10"},{"anonymous":false,"eventSelector":"716f9d7e35c51954f900c6c9cf9ed807431a0ca5bff577e9c0d144dd5623babc","id":1914,"name":"RecordAdded","nameLocation":"1593:11:10","nodeType":"EventDefinition","parameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"indexed":true,"mutability":"mutable","name":"patientId","nameLocation":"1629:9:10","nodeType":"VariableDeclaration","scope":1914,"src":"1614:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1903,"name":"string","nodeType":"ElementaryTypeName","src":"1614:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1906,"indexed":true,"mutability":"mutable","name":"recordHash","nameLocation":"1664:10:10","nodeType":"VariableDeclaration","scope":1914,"src":"1648:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1648:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1908,"indexed":true,"mutability":"mutable","name":"authorizedBy","nameLocation":"1700:12:10","nodeType":"VariableDeclaration","scope":1914,"src":"1684:28:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1907,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1910,"indexed":false,"mutability":"mutable","name":"recordType","nameLocation":"1729:10:10","nodeType":"VariableDeclaration","scope":1914,"src":"1722:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1909,"name":"string","nodeType":"ElementaryTypeName","src":"1722:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1912,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1757:9:10","nodeType":"VariableDeclaration","scope":1914,"src":"1749:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1604:168:10"},"src":"1587:186:10"},{"anonymous":false,"eventSelector":"35e7b6f8e0ca02c830bfb02ce9e16fda8e9ea880a052abb6e6950140eed84a2d","id":1922,"name":"RecordUpdated","nameLocation":"1789:13:10","nodeType":"EventDefinition","parameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"indexed":true,"mutability":"mutable","name":"recordHash","nameLocation":"1828:10:10","nodeType":"VariableDeclaration","scope":1922,"src":"1812:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1915,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1812:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1918,"indexed":true,"mutability":"mutable","name":"updatedBy","nameLocation":"1864:9:10","nodeType":"VariableDeclaration","scope":1922,"src":"1848:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1917,"name":"address","nodeType":"ElementaryTypeName","src":"1848:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1920,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1891:9:10","nodeType":"VariableDeclaration","scope":1922,"src":"1883:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1919,"name":"uint256","nodeType":"ElementaryTypeName","src":"1883:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1802:104:10"},"src":"1783:124:10"},{"anonymous":false,"eventSelector":"53ea77bac257751bb36bf9bc6076f9e71751fc8f1f4ca1fc008b0a060f1343db","id":1930,"name":"DoctorAuthorized","nameLocation":"1923:16:10","nodeType":"EventDefinition","parameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"indexed":true,"mutability":"mutable","name":"patientId","nameLocation":"1964:9:10","nodeType":"VariableDeclaration","scope":1930,"src":"1949:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1923,"name":"string","nodeType":"ElementaryTypeName","src":"1949:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1926,"indexed":true,"mutability":"mutable","name":"doctor","nameLocation":"1999:6:10","nodeType":"VariableDeclaration","scope":1930,"src":"1983:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1925,"name":"address","nodeType":"ElementaryTypeName","src":"1983:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1928,"indexed":true,"mutability":"mutable","name":"authorizedBy","nameLocation":"2031:12:10","nodeType":"VariableDeclaration","scope":1930,"src":"2015:28:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1927,"name":"address","nodeType":"ElementaryTypeName","src":"2015:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1939:110:10"},"src":"1917:133:10"},{"anonymous":false,"eventSelector":"313d03951ff63181e699c784850c99173ea0426ea96118739cd232756cb8dc08","id":1938,"name":"DoctorRevoked","nameLocation":"2066:13:10","nodeType":"EventDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"indexed":true,"mutability":"mutable","name":"patientId","nameLocation":"2104:9:10","nodeType":"VariableDeclaration","scope":1938,"src":"2089:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1931,"name":"string","nodeType":"ElementaryTypeName","src":"2089:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1934,"indexed":true,"mutability":"mutable","name":"doctor","nameLocation":"2139:6:10","nodeType":"VariableDeclaration","scope":1938,"src":"2123:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1933,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1936,"indexed":true,"mutability":"mutable","name":"revokedBy","nameLocation":"2171:9:10","nodeType":"VariableDeclaration","scope":1938,"src":"2155:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1935,"name":"address","nodeType":"ElementaryTypeName","src":"2155:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2079:107:10"},"src":"2060:127:10"},{"body":{"id":1953,"nodeType":"Block","src":"2211:103:10","statements":[{"expression":{"arguments":[{"id":1942,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2232:18:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1943,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2252:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2256:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2252:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1941,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2221:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2221:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1946,"nodeType":"ExpressionStatement","src":"2221:42:10"},{"expression":{"arguments":[{"id":1948,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2284:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1949,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2296:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2300:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2296:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1947,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2273:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1952,"nodeType":"ExpressionStatement","src":"2273:34:10"}]},"id":1954,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1939,"nodeType":"ParameterList","parameters":[],"src":"2208:2:10"},"returnParameters":{"id":1940,"nodeType":"ParameterList","parameters":[],"src":"2211:0:10"},"scope":2601,"src":"2197:117:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2019,"nodeType":"Block","src":"2620:555:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1970,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"2644:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2638:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1968,"name":"bytes","nodeType":"ElementaryTypeName","src":"2638:5:10","typeDescriptions":{}}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2638:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2655:6:10","memberName":"length","nodeType":"MemberAccess","src":"2638:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2664:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2638:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50617469656e742049442063616e6e6f7420626520656d707479","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:28:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_28bdf382440fa4116bdda25bcfef0045a4b02ece70872c990eb37af47b6a5a6f","typeString":"literal_string \"Patient ID cannot be empty\""},"value":"Patient ID cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_28bdf382440fa4116bdda25bcfef0045a4b02ece70872c990eb37af47b6a5a6f","typeString":"literal_string \"Patient ID cannot be empty\""}],"id":1967,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2630:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2630:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1977,"nodeType":"ExpressionStatement","src":"2630:66:10"},{"expression":{"arguments":[{"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2714:29:10","subExpression":{"expression":{"baseExpression":{"id":1979,"name":"patients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"2715:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Patient_$1866_storage_$","typeString":"mapping(string memory => struct HMSRecords.Patient storage ref)"}},"id":1981,"indexExpression":{"id":1980,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"2724:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2715:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_Patient_$1866_storage","typeString":"struct HMSRecords.Patient storage ref"}},"id":1982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2735:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1865,"src":"2715:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50617469656e7420616c72656164792072656769737465726564","id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2745:28:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_39964dd4ab745112952693f060791e679669e0677a04eb4aa71bca4732419ad0","typeString":"literal_string \"Patient already registered\""},"value":"Patient already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39964dd4ab745112952693f060791e679669e0677a04eb4aa71bca4732419ad0","typeString":"literal_string \"Patient already registered\""}],"id":1978,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2706:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2706:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1986,"nodeType":"ExpressionStatement","src":"2706:68:10"},{"expression":{"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1987,"name":"patients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"2793:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Patient_$1866_storage_$","typeString":"mapping(string memory => struct HMSRecords.Patient storage ref)"}},"id":1989,"indexExpression":{"id":1988,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"2802:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2793:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_Patient_$1866_storage","typeString":"struct HMSRecords.Patient storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1991,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"2848:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1992,"name":"identityHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"2885:12:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2944:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2930:13:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1993,"name":"address","nodeType":"ElementaryTypeName","src":"2934:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1994,"nodeType":"ArrayTypeName","src":"2934:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2930:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"expression":{"id":1998,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2971:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2977:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"2971:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3010:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1990,"name":"Patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"2815:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Patient_$1866_storage_ptr_$","typeString":"type(struct HMSRecords.Patient storage pointer)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2837:9:10","2871:12:10","2911:17:10","2960:9:10","3000:8:10"],"names":["patientId","identityHash","authorizedDoctors","createdAt","isActive"],"nodeType":"FunctionCall","src":"2815:210:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Patient_$1866_memory_ptr","typeString":"struct HMSRecords.Patient memory"}},"src":"2793:232:10","typeDescriptions":{"typeIdentifier":"t_struct$_Patient_$1866_storage","typeString":"struct HMSRecords.Patient storage ref"}},"id":2003,"nodeType":"ExpressionStatement","src":"2793:232:10"},{"expression":{"arguments":[{"id":2007,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"3063:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2004,"name":"allPatientIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"3044:13:10","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3058:4:10","memberName":"push","nodeType":"MemberAccess","src":"3044:18:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$","typeString":"function (string storage ref[] storage pointer,string storage ref)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2009,"nodeType":"ExpressionStatement","src":"3044:29:10"},{"eventCall":{"arguments":[{"id":2011,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"3115:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2012,"name":"identityHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"3126:12:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2013,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3140:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3144:6:10","memberName":"sender","nodeType":"MemberAccess","src":"3140:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2015,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3152:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3158:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"3152:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2010,"name":"PatientRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"3097:17:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (string memory,bytes32,address,uint256)"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3097:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2018,"nodeType":"EmitStatement","src":"3092:76:10"}]},"documentation":{"id":1955,"nodeType":"StructuredDocumentation","src":"2324:153:10","text":" @dev Register a new patient\n @param patientId Unique patient identifier\n @param identityHash Hash of patient identity data"},"functionSelector":"e41db285","id":2020,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1962,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2594:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1963,"kind":"modifierInvocation","modifierName":{"id":1961,"name":"onlyRole","nameLocations":["2585:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"2585:8:10"},"nodeType":"ModifierInvocation","src":"2585:20:10"},{"id":1965,"kind":"modifierInvocation","modifierName":{"id":1964,"name":"whenNotPaused","nameLocations":["2606:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":423,"src":"2606:13:10"},"nodeType":"ModifierInvocation","src":"2606:13:10"}],"name":"registerPatient","nameLocation":"2491:15:10","nodeType":"FunctionDefinition","parameters":{"id":1960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"patientId","nameLocation":"2530:9:10","nodeType":"VariableDeclaration","scope":2020,"src":"2516:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1956,"name":"string","nodeType":"ElementaryTypeName","src":"2516:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1959,"mutability":"mutable","name":"identityHash","nameLocation":"2557:12:10","nodeType":"VariableDeclaration","scope":2020,"src":"2549:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2549:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2506:69:10"},"returnParameters":{"id":1966,"nodeType":"ParameterList","parameters":[],"src":"2620:0:10"},"scope":2601,"src":"2482:693:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2118,"nodeType":"Block","src":"3548:926:10","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2033,"name":"patients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"3566:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Patient_$1866_storage_$","typeString":"mapping(string memory => struct HMSRecords.Patient storage ref)"}},"id":2035,"indexExpression":{"id":2034,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"3575:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3566:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_Patient_$1866_storage","typeString":"struct HMSRecords.Patient storage ref"}},"id":2036,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3586:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1865,"src":"3566:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50617469656e74206e6f7420666f756e64","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3596:19:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_79ce62d7220f73dea0dc2c9bb95d6143420225d311d28b04d8fae31c4aacf571","typeString":"literal_string \"Patient not found\""},"value":"Patient not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_79ce62d7220f73dea0dc2c9bb95d6143420225d311d28b04d8fae31c4aacf571","typeString":"literal_string \"Patient not found\""}],"id":2032,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3558:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3558:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2039,"nodeType":"ExpressionStatement","src":"3558:58:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2041,"name":"recordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"3634:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3648:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3648:7:10","typeDescriptions":{}}},"id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3648:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3634:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265636f726420686173682063616e6e6f7420626520656d707479","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3660:29:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_07c1c635d65e6af8656a934f42e338eb58f1c610b9d5735313ff1b71d7e23625","typeString":"literal_string \"Record hash cannot be empty\""},"value":"Record hash cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_07c1c635d65e6af8656a934f42e338eb58f1c610b9d5735313ff1b71d7e23625","typeString":"literal_string \"Record hash cannot be empty\""}],"id":2040,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3626:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3626:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2049,"nodeType":"ExpressionStatement","src":"3626:64:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2052,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"3729:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2053,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3741:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3745:6:10","memberName":"sender","nodeType":"MemberAccess","src":"3741:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2051,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3721:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2057,"name":"DOCTOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3777:11:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2058,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3790:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3794:6:10","memberName":"sender","nodeType":"MemberAccess","src":"3790:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2056,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3769:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3769:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3721:80:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2063,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"3837:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2064,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3848:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3852:6:10","memberName":"sender","nodeType":"MemberAccess","src":"3848:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2062,"name":"isAuthorizedDoctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"3818:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (string memory,address) view returns (bool)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3721:138:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420746f20616464207265636f726473","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3873:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7880436d3be123a72f6eaf76b42ade9cc7ddea4b1232a581fa6f1bb5299c8057","typeString":"literal_string \"Not authorized to add records\""},"value":"Not authorized to add records"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7880436d3be123a72f6eaf76b42ade9cc7ddea4b1232a581fa6f1bb5299c8057","typeString":"literal_string \"Not authorized to add records\""}],"id":2050,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3700:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3700:214:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2070,"nodeType":"ExpressionStatement","src":"3700:214:10"},{"expression":{"arguments":[{"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3932:29:10","subExpression":{"expression":{"baseExpression":{"id":2072,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"3933:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MedicalRecord_$1854_storage_$","typeString":"mapping(bytes32 => struct HMSRecords.MedicalRecord storage ref)"}},"id":2074,"indexExpression":{"id":2073,"name":"recordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"3941:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3933:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$1854_storage","typeString":"struct HMSRecords.MedicalRecord storage ref"}},"id":2075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3953:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1853,"src":"3933:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265636f726420616c726561647920657869737473","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3963:23:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4","typeString":"literal_string \"Record already exists\""},"value":"Record already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4","typeString":"literal_string \"Record already exists\""}],"id":2071,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3924:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3924:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2079,"nodeType":"ExpressionStatement","src":"3924:63:10"},{"expression":{"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2080,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"4006:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MedicalRecord_$1854_storage_$","typeString":"mapping(bytes32 => struct HMSRecords.MedicalRecord storage ref)"}},"id":2082,"indexExpression":{"id":2081,"name":"recordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"4014:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4006:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$1854_storage","typeString":"struct HMSRecords.MedicalRecord storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2084,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"4067:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2085,"name":"recordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"4102:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2086,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4137:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4143:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"4137:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2088,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4180:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4184:6:10","memberName":"sender","nodeType":"MemberAccess","src":"4180:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2090,"name":"recordType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"4216:10:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4250:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2083,"name":"MedicalRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"4028:13:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MedicalRecord_$1854_storage_ptr_$","typeString":"type(struct HMSRecords.MedicalRecord storage pointer)"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4056:9:10","4090:10:10","4126:9:10","4166:12:10","4204:10:10","4240:8:10"],"names":["patientId","recordHash","timestamp","authorizedBy","recordType","isActive"],"nodeType":"FunctionCall","src":"4028:237:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$1854_memory_ptr","typeString":"struct HMSRecords.MedicalRecord memory"}},"src":"4006:259:10","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$1854_storage","typeString":"struct HMSRecords.MedicalRecord storage ref"}},"id":2094,"nodeType":"ExpressionStatement","src":"4006:259:10"},{"expression":{"arguments":[{"id":2099,"name":"recordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"4315:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":2095,"name":"patientRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"4284:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(string memory => bytes32[] storage ref)"}},"id":2097,"indexExpression":{"id":2096,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"4299:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4284:25:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4310:4:10","memberName":"push","nodeType":"MemberAccess","src":"4284:30:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4284:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2101,"nodeType":"ExpressionStatement","src":"4284:42:10"},{"expression":{"arguments":[{"id":2105,"name":"recordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"4357:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2102,"name":"allRecordHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"4336:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4352:4:10","memberName":"push","nodeType":"MemberAccess","src":"4336:20:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2107,"nodeType":"ExpressionStatement","src":"4336:32:10"},{"eventCall":{"arguments":[{"id":2109,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"4404:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2110,"name":"recordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"4415:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2111,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4427:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4431:6:10","memberName":"sender","nodeType":"MemberAccess","src":"4427:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2113,"name":"recordType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"4439:10:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2114,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4451:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4457:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"4451:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2108,"name":"RecordAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"4392:11:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,bytes32,address,string memory,uint256)"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4392:75:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2117,"nodeType":"EmitStatement","src":"4387:80:10"}]},"documentation":{"id":2021,"nodeType":"StructuredDocumentation","src":"3185:215:10","text":" @dev Add a medical record hash\n @param patientId Patient identifier\n @param recordHash Hash of the medical record\n @param recordType Type of record (appointment, diagnosis, etc.)"},"functionSelector":"508a9100","id":2119,"implemented":true,"kind":"function","modifiers":[{"id":2030,"kind":"modifierInvocation","modifierName":{"id":2029,"name":"whenNotPaused","nameLocations":["3534:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":423,"src":"3534:13:10"},"nodeType":"ModifierInvocation","src":"3534:13:10"}],"name":"addRecord","nameLocation":"3414:9:10","nodeType":"FunctionDefinition","parameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"patientId","nameLocation":"3447:9:10","nodeType":"VariableDeclaration","scope":2119,"src":"3433:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2022,"name":"string","nodeType":"ElementaryTypeName","src":"3433:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2025,"mutability":"mutable","name":"recordHash","nameLocation":"3474:10:10","nodeType":"VariableDeclaration","scope":2119,"src":"3466:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2024,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3466:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"recordType","nameLocation":"3508:10:10","nodeType":"VariableDeclaration","scope":2119,"src":"3494:24:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2026,"name":"string","nodeType":"ElementaryTypeName","src":"3494:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3423:101:10"},"returnParameters":{"id":2031,"nodeType":"ParameterList","parameters":[],"src":"3548:0:10"},"scope":2601,"src":"3405:1069:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2160,"nodeType":"Block","src":"4696:339:10","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2128,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"4714:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MedicalRecord_$1854_storage_$","typeString":"mapping(bytes32 => struct HMSRecords.MedicalRecord storage ref)"}},"id":2130,"indexExpression":{"id":2129,"name":"recordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"4722:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4714:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$1854_storage","typeString":"struct HMSRecords.MedicalRecord storage ref"}},"id":2131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4734:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1853,"src":"4714:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265636f7264206e6f7420666f756e64","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4744:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a8ed45d00a83e492b4ab61ee8b2e636923fb87d2492039421aabce06b0b29cc","typeString":"literal_string \"Record not found\""},"value":"Record not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0a8ed45d00a83e492b4ab61ee8b2e636923fb87d2492039421aabce06b0b29cc","typeString":"literal_string \"Record not found\""}],"id":2127,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4706:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4706:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2134,"nodeType":"ExpressionStatement","src":"4706:57:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2137,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"4802:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2138,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4814:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4818:6:10","memberName":"sender","nodeType":"MemberAccess","src":"4814:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2136,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"4794:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4794:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2141,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"4842:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MedicalRecord_$1854_storage_$","typeString":"mapping(bytes32 => struct HMSRecords.MedicalRecord storage ref)"}},"id":2143,"indexExpression":{"id":2142,"name":"recordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"4850:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4842:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$1854_storage","typeString":"struct HMSRecords.MedicalRecord storage ref"}},"id":2144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4862:12:10","memberName":"authorizedBy","nodeType":"MemberAccess","referencedDeclaration":1849,"src":"4842:32:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2145,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4878:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4882:6:10","memberName":"sender","nodeType":"MemberAccess","src":"4878:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4842:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4794:94:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420746f207570646174652074686973207265636f7264","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4902:38:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c93a18ddae6e1b292f548b4b4fbb7daafa6cf30048bc047db044c6a8f6b36ee0","typeString":"literal_string \"Not authorized to update this record\""},"value":"Not authorized to update this record"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c93a18ddae6e1b292f548b4b4fbb7daafa6cf30048bc047db044c6a8f6b36ee0","typeString":"literal_string \"Not authorized to update this record\""}],"id":2135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4773:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4773:177:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2151,"nodeType":"ExpressionStatement","src":"4773:177:10"},{"eventCall":{"arguments":[{"id":2153,"name":"recordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"4988:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2154,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5000:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5004:6:10","memberName":"sender","nodeType":"MemberAccess","src":"5000:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2156,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5012:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5018:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"5012:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2152,"name":"RecordUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"4974:13:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4974:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2159,"nodeType":"EmitStatement","src":"4969:59:10"}]},"documentation":{"id":2120,"nodeType":"StructuredDocumentation","src":"4484:142:10","text":" @dev Update a medical record (mark as updated, original hash remains)\n @param recordHash Hash of the record to update"},"functionSelector":"01186d99","id":2161,"implemented":true,"kind":"function","modifiers":[{"id":2125,"kind":"modifierInvocation","modifierName":{"id":2124,"name":"whenNotPaused","nameLocations":["4682:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":423,"src":"4682:13:10"},"nodeType":"ModifierInvocation","src":"4682:13:10"}],"name":"updateRecord","nameLocation":"4640:12:10","nodeType":"FunctionDefinition","parameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"recordHash","nameLocation":"4661:10:10","nodeType":"VariableDeclaration","scope":2161,"src":"4653:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4653:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4652:20:10"},"returnParameters":{"id":2126,"nodeType":"ParameterList","parameters":[],"src":"4696:0:10"},"scope":2601,"src":"4631:404:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2223,"nodeType":"Block","src":"5331:414:10","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2175,"name":"patients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"5349:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Patient_$1866_storage_$","typeString":"mapping(string memory => struct HMSRecords.Patient storage ref)"}},"id":2177,"indexExpression":{"id":2176,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"5358:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5349:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_Patient_$1866_storage","typeString":"struct HMSRecords.Patient storage ref"}},"id":2178,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5369:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1865,"src":"5349:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50617469656e74206e6f7420666f756e64","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5379:19:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_79ce62d7220f73dea0dc2c9bb95d6143420225d311d28b04d8fae31c4aacf571","typeString":"literal_string \"Patient not found\""},"value":"Patient not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_79ce62d7220f73dea0dc2c9bb95d6143420225d311d28b04d8fae31c4aacf571","typeString":"literal_string \"Patient not found\""}],"id":2174,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5341:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5341:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2181,"nodeType":"ExpressionStatement","src":"5341:58:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2183,"name":"doctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"5417:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5435:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5427:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2184,"name":"address","nodeType":"ElementaryTypeName","src":"5427:7:10","typeDescriptions":{}}},"id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5427:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5417:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420646f63746f722061646472657373","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5439:24:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_28e1e9afd51a158c04b777f0ff1418890681aa2dcfc4468bbbe06c954ae8f930","typeString":"literal_string \"Invalid doctor address\""},"value":"Invalid doctor address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_28e1e9afd51a158c04b777f0ff1418890681aa2dcfc4468bbbe06c954ae8f930","typeString":"literal_string \"Invalid doctor address\""}],"id":2182,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5409:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5409:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2191,"nodeType":"ExpressionStatement","src":"5409:55:10"},{"expression":{"arguments":[{"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5482:38:10","subExpression":{"arguments":[{"id":2194,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"5502:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2195,"name":"doctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"5513:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2193,"name":"isAuthorizedDoctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"5483:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (string memory,address) view returns (bool)"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5483:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446f63746f7220616c726561647920617574686f72697a6564","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5522:27:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf5e6d02bf80a51bf9006bf64f7534c5650a0026feea9a9f345bd4684adae9c6","typeString":"literal_string \"Doctor already authorized\""},"value":"Doctor already authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bf5e6d02bf80a51bf9006bf64f7534c5650a0026feea9a9f345bd4684adae9c6","typeString":"literal_string \"Doctor already authorized\""}],"id":2192,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5474:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5474:76:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2200,"nodeType":"ExpressionStatement","src":"5474:76:10"},{"expression":{"arguments":[{"id":2206,"name":"doctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"5612:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"baseExpression":{"id":2201,"name":"patients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"5569:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Patient_$1866_storage_$","typeString":"mapping(string memory => struct HMSRecords.Patient storage ref)"}},"id":2203,"indexExpression":{"id":2202,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"5578:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5569:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_Patient_$1866_storage","typeString":"struct HMSRecords.Patient storage ref"}},"id":2204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5589:17:10","memberName":"authorizedDoctors","nodeType":"MemberAccess","referencedDeclaration":1861,"src":"5569:37:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5607:4:10","memberName":"push","nodeType":"MemberAccess","src":"5569:42:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5569:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2208,"nodeType":"ExpressionStatement","src":"5569:50:10"},{"expression":{"arguments":[{"id":2213,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"5657:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"baseExpression":{"id":2209,"name":"doctorPatients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"5629:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string storage ref[] storage ref)"}},"id":2211,"indexExpression":{"id":2210,"name":"doctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"5644:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5629:22:10","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5652:4:10","memberName":"push","nodeType":"MemberAccess","src":"5629:27:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$","typeString":"function (string storage ref[] storage pointer,string storage ref)"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5629:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2215,"nodeType":"ExpressionStatement","src":"5629:38:10"},{"eventCall":{"arguments":[{"id":2217,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"5708:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2218,"name":"doctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"5719:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2219,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5727:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5731:6:10","memberName":"sender","nodeType":"MemberAccess","src":"5727:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2216,"name":"DoctorAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5691:16:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$","typeString":"function (string memory,address,address)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5691:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2222,"nodeType":"EmitStatement","src":"5686:52:10"}]},"documentation":{"id":2162,"nodeType":"StructuredDocumentation","src":"5045:149:10","text":" @dev Authorize a doctor to access patient records\n @param patientId Patient identifier\n @param doctor Doctor's address"},"functionSelector":"26af21b0","id":2224,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2169,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"5305:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2170,"kind":"modifierInvocation","modifierName":{"id":2168,"name":"onlyRole","nameLocations":["5296:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5296:8:10"},"nodeType":"ModifierInvocation","src":"5296:20:10"},{"id":2172,"kind":"modifierInvocation","modifierName":{"id":2171,"name":"whenNotPaused","nameLocations":["5317:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":423,"src":"5317:13:10"},"nodeType":"ModifierInvocation","src":"5317:13:10"}],"name":"authorizeDoctor","nameLocation":"5208:15:10","nodeType":"FunctionDefinition","parameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"patientId","nameLocation":"5247:9:10","nodeType":"VariableDeclaration","scope":2224,"src":"5233:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2163,"name":"string","nodeType":"ElementaryTypeName","src":"5233:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2166,"mutability":"mutable","name":"doctor","nameLocation":"5274:6:10","nodeType":"VariableDeclaration","scope":2224,"src":"5266:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2165,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5223:63:10"},"returnParameters":{"id":2173,"nodeType":"ParameterList","parameters":[],"src":"5331:0:10"},"scope":2601,"src":"5199:546:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2363,"nodeType":"Block","src":"6035:1120:10","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2238,"name":"patients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"6053:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Patient_$1866_storage_$","typeString":"mapping(string memory => struct HMSRecords.Patient storage ref)"}},"id":2240,"indexExpression":{"id":2239,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"6062:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6053:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_Patient_$1866_storage","typeString":"struct HMSRecords.Patient storage ref"}},"id":2241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6073:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1865,"src":"6053:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50617469656e74206e6f7420666f756e64","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6083:19:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_79ce62d7220f73dea0dc2c9bb95d6143420225d311d28b04d8fae31c4aacf571","typeString":"literal_string \"Patient not found\""},"value":"Patient not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_79ce62d7220f73dea0dc2c9bb95d6143420225d311d28b04d8fae31c4aacf571","typeString":"literal_string \"Patient not found\""}],"id":2237,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6045:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6045:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2244,"nodeType":"ExpressionStatement","src":"6045:58:10"},{"expression":{"arguments":[{"arguments":[{"id":2247,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"6140:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2248,"name":"doctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"6151:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2246,"name":"isAuthorizedDoctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"6121:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (string memory,address) view returns (bool)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6121:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446f63746f72206e6f7420617574686f72697a6564","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6160:23:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9aaa89b137f2d33ca5a89427cbf46863211fd41651327985d96f133d4867fd05","typeString":"literal_string \"Doctor not authorized\""},"value":"Doctor not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9aaa89b137f2d33ca5a89427cbf46863211fd41651327985d96f133d4867fd05","typeString":"literal_string \"Doctor not authorized\""}],"id":2245,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6113:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6113:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2252,"nodeType":"ExpressionStatement","src":"6113:71:10"},{"assignments":[2257],"declarations":[{"constant":false,"id":2257,"mutability":"mutable","name":"authorizedDoctors","nameLocation":"6277:17:10","nodeType":"VariableDeclaration","scope":2363,"src":"6259:35:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2255,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2256,"nodeType":"ArrayTypeName","src":"6259:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2262,"initialValue":{"expression":{"baseExpression":{"id":2258,"name":"patients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"6297:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Patient_$1866_storage_$","typeString":"mapping(string memory => struct HMSRecords.Patient storage ref)"}},"id":2260,"indexExpression":{"id":2259,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"6306:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6297:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_Patient_$1866_storage","typeString":"struct HMSRecords.Patient storage ref"}},"id":2261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6317:17:10","memberName":"authorizedDoctors","nodeType":"MemberAccess","referencedDeclaration":1861,"src":"6297:37:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6259:75:10"},{"body":{"id":2298,"nodeType":"Block","src":"6396:227:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2274,"name":"authorizedDoctors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"6414:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":2276,"indexExpression":{"id":2275,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"6432:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6414:20:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2277,"name":"doctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"6438:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6414:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2297,"nodeType":"IfStatement","src":"6410:203:10","trueBody":{"id":2296,"nodeType":"Block","src":"6446:167:10","statements":[{"expression":{"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2279,"name":"authorizedDoctors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"6464:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":2281,"indexExpression":{"id":2280,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"6482:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6464:20:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2282,"name":"authorizedDoctors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"6487:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":2287,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2283,"name":"authorizedDoctors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"6505:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6523:6:10","memberName":"length","nodeType":"MemberAccess","src":"6505:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6532:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6505:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6487:47:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6464:70:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2289,"nodeType":"ExpressionStatement","src":"6464:70:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2290,"name":"authorizedDoctors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"6552:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6570:3:10","memberName":"pop","nodeType":"MemberAccess","src":"6552:21:10","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6552:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2294,"nodeType":"ExpressionStatement","src":"6552:23:10"},{"id":2295,"nodeType":"Break","src":"6593:5:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"6361:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2268,"name":"authorizedDoctors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"6365:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6383:6:10","memberName":"length","nodeType":"MemberAccess","src":"6365:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6361:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2299,"initializationExpression":{"assignments":[2264],"declarations":[{"constant":false,"id":2264,"mutability":"mutable","name":"i","nameLocation":"6354:1:10","nodeType":"VariableDeclaration","scope":2299,"src":"6349:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2263,"name":"uint","nodeType":"ElementaryTypeName","src":"6349:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2266,"initialValue":{"hexValue":"30","id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6358:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6349:10:10"},"loopExpression":{"expression":{"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6391:3:10","subExpression":{"id":2271,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"6391:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2273,"nodeType":"ExpressionStatement","src":"6391:3:10"},"nodeType":"ForStatement","src":"6344:279:10"},{"assignments":[2304],"declarations":[{"constant":false,"id":2304,"mutability":"mutable","name":"doctorPatientList","nameLocation":"6711:17:10","nodeType":"VariableDeclaration","scope":2363,"src":"6694:34:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2302,"name":"string","nodeType":"ElementaryTypeName","src":"6694:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2303,"nodeType":"ArrayTypeName","src":"6694:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2308,"initialValue":{"baseExpression":{"id":2305,"name":"doctorPatients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"6731:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string storage ref[] storage ref)"}},"id":2307,"indexExpression":{"id":2306,"name":"doctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"6746:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6731:22:10","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6694:59:10"},{"body":{"id":2354,"nodeType":"Block","src":"6815:266:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"baseExpression":{"id":2323,"name":"doctorPatientList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"6849:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string storage ref[] storage pointer"}},"id":2325,"indexExpression":{"id":2324,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"6867:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6849:20:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6843:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2321,"name":"bytes","nodeType":"ElementaryTypeName","src":"6843:5:10","typeDescriptions":{}}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6843:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2320,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6833:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6833:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2331,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"6891:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6885:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2329,"name":"bytes","nodeType":"ElementaryTypeName","src":"6885:5:10","typeDescriptions":{}}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6885:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2328,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6875:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6875:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6833:69:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2353,"nodeType":"IfStatement","src":"6829:242:10","trueBody":{"id":2352,"nodeType":"Block","src":"6904:167:10","statements":[{"expression":{"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2335,"name":"doctorPatientList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"6922:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string storage ref[] storage pointer"}},"id":2337,"indexExpression":{"id":2336,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"6940:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6922:20:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2338,"name":"doctorPatientList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"6945:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string storage ref[] storage pointer"}},"id":2343,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2339,"name":"doctorPatientList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"6963:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string storage ref[] storage pointer"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6981:6:10","memberName":"length","nodeType":"MemberAccess","src":"6963:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6990:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6963:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6945:47:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"6922:70:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2345,"nodeType":"ExpressionStatement","src":"6922:70:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2346,"name":"doctorPatientList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"7010:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string storage ref[] storage pointer"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7028:3:10","memberName":"pop","nodeType":"MemberAccess","src":"7010:21:10","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$","typeString":"function (string storage ref[] storage pointer)"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7010:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2350,"nodeType":"ExpressionStatement","src":"7010:23:10"},{"id":2351,"nodeType":"Break","src":"7051:5:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2313,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"6780:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2314,"name":"doctorPatientList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"6784:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string storage ref[] storage pointer"}},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6802:6:10","memberName":"length","nodeType":"MemberAccess","src":"6784:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6780:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2355,"initializationExpression":{"assignments":[2310],"declarations":[{"constant":false,"id":2310,"mutability":"mutable","name":"i","nameLocation":"6773:1:10","nodeType":"VariableDeclaration","scope":2355,"src":"6768:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint","nodeType":"ElementaryTypeName","src":"6768:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2312,"initialValue":{"hexValue":"30","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6777:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6768:10:10"},"loopExpression":{"expression":{"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6810:3:10","subExpression":{"id":2317,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"6810:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2319,"nodeType":"ExpressionStatement","src":"6810:3:10"},"nodeType":"ForStatement","src":"6763:318:10"},{"eventCall":{"arguments":[{"id":2357,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"7118:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2358,"name":"doctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"7129:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2359,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7137:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7141:6:10","memberName":"sender","nodeType":"MemberAccess","src":"7137:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2356,"name":"DoctorRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"7104:13:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$","typeString":"function (string memory,address,address)"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7104:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2362,"nodeType":"EmitStatement","src":"7099:49:10"}]},"documentation":{"id":2225,"nodeType":"StructuredDocumentation","src":"5755:146:10","text":" @dev Revoke doctor's access to patient records\n @param patientId Patient identifier\n @param doctor Doctor's address"},"functionSelector":"59078f08","id":2364,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2232,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"6009:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2233,"kind":"modifierInvocation","modifierName":{"id":2231,"name":"onlyRole","nameLocations":["6000:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"6000:8:10"},"nodeType":"ModifierInvocation","src":"6000:20:10"},{"id":2235,"kind":"modifierInvocation","modifierName":{"id":2234,"name":"whenNotPaused","nameLocations":["6021:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":423,"src":"6021:13:10"},"nodeType":"ModifierInvocation","src":"6021:13:10"}],"name":"revokeDoctor","nameLocation":"5915:12:10","nodeType":"FunctionDefinition","parameters":{"id":2230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2227,"mutability":"mutable","name":"patientId","nameLocation":"5951:9:10","nodeType":"VariableDeclaration","scope":2364,"src":"5937:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2226,"name":"string","nodeType":"ElementaryTypeName","src":"5937:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2229,"mutability":"mutable","name":"doctor","nameLocation":"5978:6:10","nodeType":"VariableDeclaration","scope":2364,"src":"5970:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2228,"name":"address","nodeType":"ElementaryTypeName","src":"5970:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5927:63:10"},"returnParameters":{"id":2236,"nodeType":"ParameterList","parameters":[],"src":"6035:0:10"},"scope":2601,"src":"5906:1249:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2408,"nodeType":"Block","src":"7479:278:10","statements":[{"assignments":[2378],"declarations":[{"constant":false,"id":2378,"mutability":"mutable","name":"authorizedDoctors","nameLocation":"7506:17:10","nodeType":"VariableDeclaration","scope":2408,"src":"7489:34:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2376,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2377,"nodeType":"ArrayTypeName","src":"7489:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2383,"initialValue":{"expression":{"baseExpression":{"id":2379,"name":"patients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"7526:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Patient_$1866_storage_$","typeString":"mapping(string memory => struct HMSRecords.Patient storage ref)"}},"id":2381,"indexExpression":{"id":2380,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"7535:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7526:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_Patient_$1866_storage","typeString":"struct HMSRecords.Patient storage ref"}},"id":2382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7546:17:10","memberName":"authorizedDoctors","nodeType":"MemberAccess","referencedDeclaration":1861,"src":"7526:37:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7489:74:10"},{"body":{"id":2404,"nodeType":"Block","src":"7625:104:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2395,"name":"authorizedDoctors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"7643:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2397,"indexExpression":{"id":2396,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"7661:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7643:20:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2398,"name":"doctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"7667:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7643:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2403,"nodeType":"IfStatement","src":"7639:80:10","trueBody":{"id":2402,"nodeType":"Block","src":"7675:44:10","statements":[{"expression":{"hexValue":"74727565","id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7700:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2373,"id":2401,"nodeType":"Return","src":"7693:11:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"7590:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2389,"name":"authorizedDoctors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"7594:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7612:6:10","memberName":"length","nodeType":"MemberAccess","src":"7594:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7590:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2405,"initializationExpression":{"assignments":[2385],"declarations":[{"constant":false,"id":2385,"mutability":"mutable","name":"i","nameLocation":"7583:1:10","nodeType":"VariableDeclaration","scope":2405,"src":"7578:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2384,"name":"uint","nodeType":"ElementaryTypeName","src":"7578:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2387,"initialValue":{"hexValue":"30","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7587:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7578:10:10"},"loopExpression":{"expression":{"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7620:3:10","subExpression":{"id":2392,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"7620:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2394,"nodeType":"ExpressionStatement","src":"7620:3:10"},"nodeType":"ForStatement","src":"7573:156:10"},{"expression":{"hexValue":"66616c7365","id":2406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7745:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2373,"id":2407,"nodeType":"Return","src":"7738:12:10"}]},"documentation":{"id":2365,"nodeType":"StructuredDocumentation","src":"7165:191:10","text":" @dev Check if a doctor is authorized for a patient\n @param patientId Patient identifier\n @param doctor Doctor's address\n @return bool Authorization status"},"functionSelector":"27531360","id":2409,"implemented":true,"kind":"function","modifiers":[],"name":"isAuthorizedDoctor","nameLocation":"7370:18:10","nodeType":"FunctionDefinition","parameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2367,"mutability":"mutable","name":"patientId","nameLocation":"7412:9:10","nodeType":"VariableDeclaration","scope":2409,"src":"7398:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2366,"name":"string","nodeType":"ElementaryTypeName","src":"7398:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2369,"mutability":"mutable","name":"doctor","nameLocation":"7439:6:10","nodeType":"VariableDeclaration","scope":2409,"src":"7431:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2368,"name":"address","nodeType":"ElementaryTypeName","src":"7431:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7388:63:10"},"returnParameters":{"id":2373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2409,"src":"7473:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2371,"name":"bool","nodeType":"ElementaryTypeName","src":"7473:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7472:6:10"},"scope":2601,"src":"7361:396:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2437,"nodeType":"Block","src":"8013:225:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2420,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"8052:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2421,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8064:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8068:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8064:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2419,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"8044:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8044:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2425,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"8111:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2426,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8122:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8126:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8122:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2424,"name":"isAuthorizedDoctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"8092:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (string memory,address) view returns (bool)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8092:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8044:89:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420746f2076696577207265636f726473","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8147:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab042a939c7a6283c5aad9fea927fc5aa866f7f3bff61adb7e7b2d840ffb37db","typeString":"literal_string \"Not authorized to view records\""},"value":"Not authorized to view records"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ab042a939c7a6283c5aad9fea927fc5aa866f7f3bff61adb7e7b2d840ffb37db","typeString":"literal_string \"Not authorized to view records\""}],"id":2418,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8023:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8023:166:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2432,"nodeType":"ExpressionStatement","src":"8023:166:10"},{"expression":{"baseExpression":{"id":2433,"name":"patientRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"8206:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(string memory => bytes32[] storage ref)"}},"id":2435,"indexExpression":{"id":2434,"name":"patientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"8221:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8206:25:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":2417,"id":2436,"nodeType":"Return","src":"8199:32:10"}]},"documentation":{"id":2410,"nodeType":"StructuredDocumentation","src":"7767:134:10","text":" @dev Get patient records\n @param patientId Patient identifier\n @return bytes32[] Array of record hashes"},"functionSelector":"5cd40af5","id":2438,"implemented":true,"kind":"function","modifiers":[],"name":"getPatientRecords","nameLocation":"7915:17:10","nodeType":"FunctionDefinition","parameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"patientId","nameLocation":"7956:9:10","nodeType":"VariableDeclaration","scope":2438,"src":"7942:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2411,"name":"string","nodeType":"ElementaryTypeName","src":"7942:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7932:39:10"},"returnParameters":{"id":2417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2438,"src":"7995:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7995:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2415,"nodeType":"ArrayTypeName","src":"7995:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7994:18:10"},"scope":2601,"src":"7906:332:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2465,"nodeType":"Block","src":"8478:209:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2449,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"8517:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2450,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8529:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8533:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8529:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2448,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"8509:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8509:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2453,"name":"doctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"8557:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2454,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8567:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8571:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8567:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8557:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8509:68:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420746f207669657720646f63746f722070617469656e7473","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8591:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_6646efd2195917deefc807954554698f53c47e3c5567aa1b197b96c1ad0240cf","typeString":"literal_string \"Not authorized to view doctor patients\""},"value":"Not authorized to view doctor patients"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6646efd2195917deefc807954554698f53c47e3c5567aa1b197b96c1ad0240cf","typeString":"literal_string \"Not authorized to view doctor patients\""}],"id":2447,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8488:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8488:153:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2460,"nodeType":"ExpressionStatement","src":"8488:153:10"},{"expression":{"baseExpression":{"id":2461,"name":"doctorPatients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"8658:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string storage ref[] storage ref)"}},"id":2463,"indexExpression":{"id":2462,"name":"doctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"8673:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8658:22:10","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"functionReturnParameters":2446,"id":2464,"nodeType":"Return","src":"8651:29:10"}]},"documentation":{"id":2439,"nodeType":"StructuredDocumentation","src":"8248:128:10","text":" @dev Get doctor's patients\n @param doctor Doctor's address\n @return string[] Array of patient IDs"},"functionSelector":"ba508467","id":2466,"implemented":true,"kind":"function","modifiers":[],"name":"getDoctorPatients","nameLocation":"8390:17:10","nodeType":"FunctionDefinition","parameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"doctor","nameLocation":"8425:6:10","nodeType":"VariableDeclaration","scope":2466,"src":"8417:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2440,"name":"address","nodeType":"ElementaryTypeName","src":"8417:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8407:30:10"},"returnParameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2466,"src":"8461:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2443,"name":"string","nodeType":"ElementaryTypeName","src":"8461:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2444,"nodeType":"ArrayTypeName","src":"8461:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"8460:17:10"},"scope":2601,"src":"8381:306:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2475,"nodeType":"Block","src":"8858:44:10","statements":[{"expression":{"expression":{"id":2472,"name":"allPatientIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"8875:13:10","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8889:6:10","memberName":"length","nodeType":"MemberAccess","src":"8875:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2471,"id":2474,"nodeType":"Return","src":"8868:27:10"}]},"documentation":{"id":2467,"nodeType":"StructuredDocumentation","src":"8697:96:10","text":" @dev Get total number of patients\n @return uint256 Total patients count"},"functionSelector":"f497e189","id":2476,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalPatients","nameLocation":"8807:16:10","nodeType":"FunctionDefinition","parameters":{"id":2468,"nodeType":"ParameterList","parameters":[],"src":"8823:2:10"},"returnParameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2476,"src":"8849:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"8849:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8848:9:10"},"scope":2601,"src":"8798:104:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2485,"nodeType":"Block","src":"9070:46:10","statements":[{"expression":{"expression":{"id":2482,"name":"allRecordHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"9087:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9103:6:10","memberName":"length","nodeType":"MemberAccess","src":"9087:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2481,"id":2484,"nodeType":"Return","src":"9080:29:10"}]},"documentation":{"id":2477,"nodeType":"StructuredDocumentation","src":"8912:94:10","text":" @dev Get total number of records\n @return uint256 Total records count"},"functionSelector":"0aeacb5e","id":2486,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalRecords","nameLocation":"9020:15:10","nodeType":"FunctionDefinition","parameters":{"id":2478,"nodeType":"ParameterList","parameters":[],"src":"9035:2:10"},"returnParameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2486,"src":"9061:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9060:9:10"},"scope":2601,"src":"9011:105:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2499,"nodeType":"Block","src":"9330:52:10","statements":[{"expression":{"expression":{"baseExpression":{"id":2494,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"9347:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MedicalRecord_$1854_storage_$","typeString":"mapping(bytes32 => struct HMSRecords.MedicalRecord storage ref)"}},"id":2496,"indexExpression":{"id":2495,"name":"recordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"9355:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9347:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$1854_storage","typeString":"struct HMSRecords.MedicalRecord storage ref"}},"id":2497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9367:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1853,"src":"9347:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2493,"id":2498,"nodeType":"Return","src":"9340:35:10"}]},"documentation":{"id":2487,"nodeType":"StructuredDocumentation","src":"9126:128:10","text":" @dev Verify a record hash exists\n @param recordHash Hash to verify\n @return bool Existence status"},"functionSelector":"4d408bcf","id":2500,"implemented":true,"kind":"function","modifiers":[],"name":"verifyRecord","nameLocation":"9268:12:10","nodeType":"FunctionDefinition","parameters":{"id":2490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2489,"mutability":"mutable","name":"recordHash","nameLocation":"9289:10:10","nodeType":"VariableDeclaration","scope":2500,"src":"9281:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9281:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9280:20:10"},"returnParameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2500,"src":"9324:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2491,"name":"bool","nodeType":"ElementaryTypeName","src":"9324:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9323:6:10"},"scope":2601,"src":"9259:123:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2547,"nodeType":"Block","src":"9625:372:10","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2510,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"9643:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MedicalRecord_$1854_storage_$","typeString":"mapping(bytes32 => struct HMSRecords.MedicalRecord storage ref)"}},"id":2512,"indexExpression":{"id":2511,"name":"recordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"9651:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9643:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$1854_storage","typeString":"struct HMSRecords.MedicalRecord storage ref"}},"id":2513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9663:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1853,"src":"9643:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265636f7264206e6f7420666f756e64","id":2514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9673:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a8ed45d00a83e492b4ab61ee8b2e636923fb87d2492039421aabce06b0b29cc","typeString":"literal_string \"Record not found\""},"value":"Record not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0a8ed45d00a83e492b4ab61ee8b2e636923fb87d2492039421aabce06b0b29cc","typeString":"literal_string \"Record not found\""}],"id":2509,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9635:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9635:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2516,"nodeType":"ExpressionStatement","src":"9635:57:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2519,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"9731:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2520,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9743:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9747:6:10","memberName":"sender","nodeType":"MemberAccess","src":"9743:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2518,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"9723:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9723:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"expression":{"baseExpression":{"id":2524,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"9790:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MedicalRecord_$1854_storage_$","typeString":"mapping(bytes32 => struct HMSRecords.MedicalRecord storage ref)"}},"id":2526,"indexExpression":{"id":2525,"name":"recordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"9798:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9790:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$1854_storage","typeString":"struct HMSRecords.MedicalRecord storage ref"}},"id":2527,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9810:9:10","memberName":"patientId","nodeType":"MemberAccess","referencedDeclaration":1843,"src":"9790:29:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":2528,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9821:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9825:6:10","memberName":"sender","nodeType":"MemberAccess","src":"9821:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2523,"name":"isAuthorizedDoctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"9771:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (string memory,address) view returns (bool)"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9771:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9723:109:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2532,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"9848:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MedicalRecord_$1854_storage_$","typeString":"mapping(bytes32 => struct HMSRecords.MedicalRecord storage ref)"}},"id":2534,"indexExpression":{"id":2533,"name":"recordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"9856:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9848:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$1854_storage","typeString":"struct HMSRecords.MedicalRecord storage ref"}},"id":2535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9868:12:10","memberName":"authorizedBy","nodeType":"MemberAccess","referencedDeclaration":1849,"src":"9848:32:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2536,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9884:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9888:6:10","memberName":"sender","nodeType":"MemberAccess","src":"9884:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9848:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9723:171:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420746f20766965772074686973207265636f7264","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9908:36:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c2bcce16aecbe05703a000c32d6c789923155bc4edb44224894bec7cb236557f","typeString":"literal_string \"Not authorized to view this record\""},"value":"Not authorized to view this record"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c2bcce16aecbe05703a000c32d6c789923155bc4edb44224894bec7cb236557f","typeString":"literal_string \"Not authorized to view this record\""}],"id":2517,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9702:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9702:252:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2542,"nodeType":"ExpressionStatement","src":"9702:252:10"},{"expression":{"baseExpression":{"id":2543,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"9971:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MedicalRecord_$1854_storage_$","typeString":"mapping(bytes32 => struct HMSRecords.MedicalRecord storage ref)"}},"id":2545,"indexExpression":{"id":2544,"name":"recordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"9979:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9971:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$1854_storage","typeString":"struct HMSRecords.MedicalRecord storage ref"}},"functionReturnParameters":2508,"id":2546,"nodeType":"Return","src":"9964:26:10"}]},"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"9392:130:10","text":" @dev Get record details\n @param recordHash Hash of the record\n @return MedicalRecord Record details"},"functionSelector":"213681cd","id":2548,"implemented":true,"kind":"function","modifiers":[],"name":"getRecord","nameLocation":"9536:9:10","nodeType":"FunctionDefinition","parameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"recordHash","nameLocation":"9563:10:10","nodeType":"VariableDeclaration","scope":2548,"src":"9555:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9555:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9545:34:10"},"returnParameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2548,"src":"9603:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$1854_memory_ptr","typeString":"struct HMSRecords.MedicalRecord"},"typeName":{"id":2506,"nodeType":"UserDefinedTypeName","pathNode":{"id":2505,"name":"MedicalRecord","nameLocations":["9603:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1854,"src":"9603:13:10"},"referencedDeclaration":1854,"src":"9603:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$1854_storage_ptr","typeString":"struct HMSRecords.MedicalRecord"}},"visibility":"internal"}],"src":"9602:22:10"},"scope":2601,"src":"9527:470:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2562,"nodeType":"Block","src":"10174:48:10","statements":[{"expression":{"arguments":[{"id":2558,"name":"DOCTOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"10195:11:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2559,"name":"doctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"10208:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2557,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"10184:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10184:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2561,"nodeType":"ExpressionStatement","src":"10184:31:10"}]},"documentation":{"id":2549,"nodeType":"StructuredDocumentation","src":"10007:91:10","text":" @dev Grant doctor role\n @param doctor Address to grant doctor role"},"functionSelector":"2f5635cc","id":2563,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2554,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"10162:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2555,"kind":"modifierInvocation","modifierName":{"id":2553,"name":"onlyRole","nameLocations":["10153:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"10153:8:10"},"nodeType":"ModifierInvocation","src":"10153:20:10"}],"name":"grantDoctorRole","nameLocation":"10112:15:10","nodeType":"FunctionDefinition","parameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"doctor","nameLocation":"10136:6:10","nodeType":"VariableDeclaration","scope":2563,"src":"10128:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2550,"name":"address","nodeType":"ElementaryTypeName","src":"10128:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10127:16:10"},"returnParameters":{"id":2556,"nodeType":"ParameterList","parameters":[],"src":"10174:0:10"},"scope":2601,"src":"10103:119:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2577,"nodeType":"Block","src":"10402:49:10","statements":[{"expression":{"arguments":[{"id":2573,"name":"DOCTOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"10424:11:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2574,"name":"doctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"10437:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2572,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"10412:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10412:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2576,"nodeType":"ExpressionStatement","src":"10412:32:10"}]},"documentation":{"id":2564,"nodeType":"StructuredDocumentation","src":"10232:93:10","text":" @dev Revoke doctor role\n @param doctor Address to revoke doctor role"},"functionSelector":"6bd6f34b","id":2578,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2569,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"10390:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2570,"kind":"modifierInvocation","modifierName":{"id":2568,"name":"onlyRole","nameLocations":["10381:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"10381:8:10"},"nodeType":"ModifierInvocation","src":"10381:20:10"}],"name":"revokeDoctorRole","nameLocation":"10339:16:10","nodeType":"FunctionDefinition","parameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"doctor","nameLocation":"10364:6:10","nodeType":"VariableDeclaration","scope":2578,"src":"10356:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2565,"name":"address","nodeType":"ElementaryTypeName","src":"10356:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10355:16:10"},"returnParameters":{"id":2571,"nodeType":"ParameterList","parameters":[],"src":"10402:0:10"},"scope":2601,"src":"10330:121:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2588,"nodeType":"Block","src":"10551:25:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2585,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"10561:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10561:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2587,"nodeType":"ExpressionStatement","src":"10561:8:10"}]},"documentation":{"id":2579,"nodeType":"StructuredDocumentation","src":"10461:38:10","text":" @dev Pause contract"},"functionSelector":"8456cb59","id":2589,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2582,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"10539:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2583,"kind":"modifierInvocation","modifierName":{"id":2581,"name":"onlyRole","nameLocations":["10530:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"10530:8:10"},"nodeType":"ModifierInvocation","src":"10530:20:10"}],"name":"pause","nameLocation":"10513:5:10","nodeType":"FunctionDefinition","parameters":{"id":2580,"nodeType":"ParameterList","parameters":[],"src":"10518:2:10"},"returnParameters":{"id":2584,"nodeType":"ParameterList","parameters":[],"src":"10551:0:10"},"scope":2601,"src":"10504:72:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2599,"nodeType":"Block","src":"10680:27:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2596,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"10690:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10690:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2598,"nodeType":"ExpressionStatement","src":"10690:10:10"}]},"documentation":{"id":2590,"nodeType":"StructuredDocumentation","src":"10586:40:10","text":" @dev Unpause contract"},"functionSelector":"3f4ba83a","id":2600,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2593,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"10668:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2594,"kind":"modifierInvocation","modifierName":{"id":2592,"name":"onlyRole","nameLocations":["10659:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"10659:8:10"},"nodeType":"ModifierInvocation","src":"10659:20:10"}],"name":"unpause","nameLocation":"10640:7:10","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[],"src":"10647:2:10"},"returnParameters":{"id":2595,"nodeType":"ParameterList","parameters":[],"src":"10680:0:10"},"scope":2601,"src":"10631:76:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2602,"src":"396:10313:10","usedErrors":[]}],"src":"32:10677:10"},"id":10}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011d4b54bc80c0b44d0162d73c9c1dba9b336560313d5935c1ed2a4804e8673e864736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xD4 0xB5 0x4B 0xC8 0xC SIGNEXTEND PREVRANDAO 0xD0 AND 0x2D PUSH20 0xC9C1DBA9B336560313D5935C1ED2A4804E8673E8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"220:2559:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011d4b54bc80c0b44d0162d73c9c1dba9b336560313d5935c1ed2a4804e8673e864736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xD4 0xB5 0x4B 0xC8 0xC SIGNEXTEND PREVRANDAO 0xD0 AND 0x2D PUSH20 0xC9C1DBA9B336560313D5935C1ED2A4804E8673E8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"220:2559:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e91d0b72d0ff009b3ea09e6b95963bbe902271bfde10f6c03cf48d240255864664736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SAR SIGNEXTEND PUSH19 0xD0FF009B3EA09E6B95963BBE902271BFDE10F6 0xC0 EXTCODECOPY DELEGATECALL DUP14 0x24 MUL SSTORE DUP7 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"202:12582:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e91d0b72d0ff009b3ea09e6b95963bbe902271bfde10f6c03cf48d240255864664736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SAR SIGNEXTEND PUSH19 0xD0FF009B3EA09E6B95963BBE902271BFDE10F6 0xC0 EXTCODECOPY DELEGATECALL DUP14 0x24 MUL SSTORE DUP7 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"202:12582:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088366b59ea99732082b3124288e8358f874708936e6768c5650b9be28fa19db664736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 CALLDATASIZE PUSH12 0x59EA99732082B3124288E835 DUP16 DUP8 SELFBALANCE ADDMOD SWAP4 PUSH15 0x6768C5650B9BE28FA19DB664736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"215:1047:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088366b59ea99732082b3124288e8358f874708936e6768c5650b9be28fa19db664736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 CALLDATASIZE PUSH12 0x59EA99732082B3124288E835 DUP16 DUP8 SELFBALANCE ADDMOD SWAP4 PUSH15 0x6768C5650B9BE28FA19DB664736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"215:1047:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/HMSRecords.sol":{"HMSRecords":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"patientId","type":"string"},{"indexed":true,"internalType":"address","name":"doctor","type":"address"},{"indexed":true,"internalType":"address","name":"authorizedBy","type":"address"}],"name":"DoctorAuthorized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"patientId","type":"string"},{"indexed":true,"internalType":"address","name":"doctor","type":"address"},{"indexed":true,"internalType":"address","name":"revokedBy","type":"address"}],"name":"DoctorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"patientId","type":"string"},{"indexed":false,"internalType":"bytes32","name":"identityHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"registeredBy","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"PatientRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"patientId","type":"string"},{"indexed":true,"internalType":"bytes32","name":"recordHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"authorizedBy","type":"address"},{"indexed":false,"internalType":"string","name":"recordType","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"RecordAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"recordHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"updatedBy","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"RecordUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOCTOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"patientId","type":"string"},{"internalType":"bytes32","name":"recordHash","type":"bytes32"},{"internalType":"string","name":"recordType","type":"string"}],"name":"addRecord","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allPatientIds","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allRecordHashes","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"patientId","type":"string"},{"internalType":"address","name":"doctor","type":"address"}],"name":"authorizeDoctor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"doctorPatients","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"doctor","type":"address"}],"name":"getDoctorPatients","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"patientId","type":"string"}],"name":"getPatientRecords","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"recordHash","type":"bytes32"}],"name":"getRecord","outputs":[{"components":[{"internalType":"string","name":"patientId","type":"string"},{"internalType":"bytes32","name":"recordHash","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"address","name":"authorizedBy","type":"address"},{"internalType":"string","name":"recordType","type":"string"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct HMSRecords.MedicalRecord","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalPatients","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalRecords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"doctor","type":"address"}],"name":"grantDoctorRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"patientId","type":"string"},{"internalType":"address","name":"doctor","type":"address"}],"name":"isAuthorizedDoctor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"patientRecords","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"patients","outputs":[{"internalType":"string","name":"patientId","type":"string"},{"internalType":"bytes32","name":"identityHash","type":"bytes32"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"records","outputs":[{"internalType":"string","name":"patientId","type":"string"},{"internalType":"bytes32","name":"recordHash","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"address","name":"authorizedBy","type":"address"},{"internalType":"string","name":"recordType","type":"string"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"patientId","type":"string"},{"internalType":"bytes32","name":"identityHash","type":"bytes32"}],"name":"registerPatient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"patientId","type":"string"},{"internalType":"address","name":"doctor","type":"address"}],"name":"revokeDoctor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"doctor","type":"address"}],"name":"revokeDoctorRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"recordHash","type":"bytes32"}],"name":"updateRecord","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"recordHash","type":"bytes32"}],"name":"verifyRecord","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1954":{"entryPoint":null,"id":1954,"parameterSlots":0,"returnSlots":0},"@_415":{"entryPoint":null,"id":415,"parameterSlots":0,"returnSlots":0},"@_515":{"entryPoint":null,"id":515,"parameterSlots":0,"returnSlots":0},"@_grantRole_283":{"entryPoint":95,"id":283,"parameterSlots":2,"returnSlots":0},"@_msgSender_573":{"entryPoint":null,"id":573,"parameterSlots":0,"returnSlots":1},"@hasRole_79":{"entryPoint":null,"id":79,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH3 0x2D PUSH1 0x0 CALLER PUSH3 0x5F JUMP JUMPDEST PUSH3 0x59 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH3 0x5F JUMP JUMPDEST PUSH3 0x100 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0xFC JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0xBB CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x29BE DUP1 PUSH3 0x110 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52366C21 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0xE41DB285 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xF497E189 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xFEC331F2 EQ PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xB8A751DF EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xBA508467 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0xC6009D84 EQ PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6BD6F34B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x6BD6F34B EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52366C21 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x59078F08 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x5CD40AF5 EQ PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27531360 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x4AC9E300 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x4D408BCF EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x508A9100 EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27531360 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x2F5635CC EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAEACB5E GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xAEACB5E EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x213681CD EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x26AF21B0 EQ PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1186D99 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x1E64725 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x7184900 EQ PUSH2 0x25B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21D PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x2132 JUMP JUMPDEST PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x26E PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x26E JUMP JUMPDEST PUSH2 0x297 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x215C JUMP JUMPDEST PUSH2 0x26E PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2293 JUMP JUMPDEST PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2293 JUMP JUMPDEST PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x208 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x2304 JUMP JUMPDEST PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0xDE9 JUMP JUMPDEST PUSH2 0x208 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x341 PUSH2 0x33C CALLDATASIZE PUSH1 0x4 PUSH2 0x231F JUMP JUMPDEST PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2349 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x35C CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x235C JUMP JUMPDEST PUSH2 0xF3F JUMP JUMPDEST PUSH2 0x341 PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x1230 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2293 JUMP JUMPDEST PUSH2 0x125B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x24B JUMP JUMPDEST PUSH2 0x3CB PUSH2 0x3C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x23C9 JUMP JUMPDEST PUSH2 0x158D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2406 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2304 JUMP JUMPDEST PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x16A1 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x416 CALLDATASIZE PUSH1 0x4 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0x244A JUMP JUMPDEST PUSH2 0x16EA JUMP JUMPDEST PUSH2 0x449 PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0x2304 JUMP JUMPDEST PUSH2 0x172A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x248F JUMP JUMPDEST PUSH2 0x469 PUSH2 0x464 CALLDATASIZE PUSH1 0x4 PUSH2 0x23C9 JUMP JUMPDEST PUSH2 0x189C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24F1 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x487 CALLDATASIZE PUSH1 0x4 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x195C JUMP JUMPDEST PUSH2 0x208 PUSH2 0x49A CALLDATASIZE PUSH1 0x4 PUSH2 0x244A JUMP JUMPDEST PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x26E JUMP JUMPDEST PUSH2 0x26E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2949 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4C4 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x149958DBDC99081B9BDD08199BDD5B99 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x535 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x16C1 JUMP JUMPDEST DUP1 PUSH2 0x559 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F207570646174652074686973207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x18DBDC99 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE CALLER SWAP1 DUP3 SWAP1 PUSH32 0x35E7B6F8E0CA02C830BFB02CE9E16FDA8E9EA880A052ABB6E6950140EED84A2D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x606 SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x632 SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x67F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x654 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x67F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x662 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 DUP8 ADD DUP1 SLOAD SWAP7 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 POP SWAP1 PUSH2 0x6B5 SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6E1 SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x72E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x703 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x72E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x711 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x5 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x772 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE DUP1 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x149958DBDC99081B9BDD08199BDD5B99 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x16C1 JUMP JUMPDEST DUP1 PUSH2 0x8DE JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x8DE SWAP2 SWAP1 PUSH2 0x85A SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x886 SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP CALLER PUSH2 0xCAC JUMP JUMPDEST DUP1 PUSH2 0x902 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x959 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F20766965772074686973207265636F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1C99 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x981 SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9AD SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x80 SWAP1 SWAP3 ADD SWAP2 PUSH2 0xA3E SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA6A SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAB7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA8C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAB7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA9A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x5 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xAEF DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0xAF7 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0xB39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x514 SWAP1 PUSH2 0x2578 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C696420646F63746F722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH2 0xB92 DUP4 DUP4 PUSH2 0xCAC JUMP JUMPDEST ISZERO PUSH2 0xBDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F63746F7220616C726561647920617574686F72697A656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBEF SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE DUP5 DUP4 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MSTORE PUSH1 0x6 DUP5 MSTORE SWAP2 DUP2 KECCAK256 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 ADD PUSH2 0xC54 DUP5 DUP3 PUSH2 0x25F1 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xC77 SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0x53EA77BAC257751BB36BF9BC6076F9E71751FC8F1F4CA1FC008B0A060F1343DB SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCBF SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 DUP4 MUL DUP6 ADD DUP4 ADD SWAP1 SWAP4 MSTORE DUP3 DUP5 MSTORE SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD1E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD00 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xD80 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD4D JUMPI PUSH2 0xD4D PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xD6E JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x772 JUMP JUMPDEST DUP1 PUSH2 0xD78 DUP2 PUSH2 0x26DD JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD28 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xDA6 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0xDB0 DUP4 DUP4 PUSH2 0x1BEE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xDCD DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0xDE5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2949 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x1BEE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xE59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST PUSH2 0xDE5 DUP3 DUP3 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xE7B DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0xE83 PUSH2 0x1CD7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xEA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 SLOAD PUSH2 0xEBE SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEEA SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF37 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF0C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF37 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF1A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0xF47 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF57 SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0xF89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x514 SWAP1 PUSH2 0x2578 JUMP JUMPDEST DUP2 PUSH2 0xFD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265636F726420686173682063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH2 0xFEE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x16C1 JUMP JUMPDEST DUP1 PUSH2 0x100C JUMPI POP PUSH2 0x100C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2949 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x16C1 JUMP JUMPDEST DUP1 PUSH2 0x101C JUMPI POP PUSH2 0x101C DUP4 CALLER PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x1068 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F20616464207265636F726473000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5265636F726420616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE TIMESTAMP DUP3 DUP5 ADD MSTORE CALLER PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x110C SWAP1 DUP3 PUSH2 0x25F1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SWAP1 PUSH2 0x115B SWAP1 DUP3 PUSH2 0x25F1 JUMP JUMPDEST POP PUSH1 0xA0 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x5 SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1185 SWAP1 DUP6 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE SWAP3 DUP3 KECCAK256 ADD DUP6 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE SWAP1 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP4 SWAP1 SSTORE CALLER SWAP1 DUP4 SWAP1 PUSH2 0x11EA SWAP1 DUP7 SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0x716F9D7E35C51954F900C6C9CF9ED807431A0CA5BFF577E9C0D144DD5623BABC DUP5 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1223 SWAP3 SWAP2 SWAP1 PUSH2 0x26F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0xEBE SWAP1 PUSH2 0x2522 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1273 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x127B PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x40 MLOAD PUSH2 0x128B SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x12BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x514 SWAP1 PUSH2 0x2578 JUMP JUMPDEST PUSH2 0x12C7 DUP4 DUP4 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x130B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x111BD8DD1BDC881B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x131D SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x2 ADD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x1439 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1358 JUMPI PUSH2 0x1358 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1427 JUMPI DUP2 SLOAD DUP3 SWAP1 PUSH2 0x1382 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2718 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1392 JUMPI PUSH2 0x1392 PUSH2 0x26B1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13C2 JUMPI PUSH2 0x13C2 PUSH2 0x26B1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 DUP1 SLOAD DUP1 PUSH2 0x1400 JUMPI PUSH2 0x1400 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0x1439 JUMP JUMPDEST DUP1 PUSH2 0x1431 DUP2 PUSH2 0x26DD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1333 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x1533 JUMPI DUP6 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1477 JUMPI PUSH2 0x1477 PUSH2 0x26B1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x148E SWAP2 SWAP1 PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x1521 JUMPI DUP2 SLOAD DUP3 SWAP1 PUSH2 0x14AB SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2718 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x14BB JUMPI PUSH2 0x14BB PUSH2 0x26B1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x14D7 JUMPI PUSH2 0x14D7 PUSH2 0x26B1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 DUP2 PUSH2 0x14ED SWAP2 SWAP1 PUSH2 0x27B7 JUMP JUMPDEST POP DUP2 DUP1 SLOAD DUP1 PUSH2 0x14FE JUMPI PUSH2 0x14FE PUSH2 0x272B JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x151A SWAP2 SWAP1 PUSH2 0x1FBD JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1533 JUMP JUMPDEST DUP1 PUSH2 0x152B DUP2 PUSH2 0x26DD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1454 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x40 MLOAD PUSH2 0x1556 SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0x313D03951FF63181E699C784850C99173EA0426EA96118739CD232756CB8DC08 SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15A7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x16C1 JUMP JUMPDEST DUP1 PUSH2 0x15B7 JUMPI POP PUSH2 0x15B7 DUP3 CALLER PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x1603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F2076696577207265636F7264730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1613 SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP1 SLOAD DUP1 DUP4 MUL DUP6 ADD DUP4 ADD SWAP1 SWAP4 MSTORE DUP3 DUP5 MSTORE SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1665 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1651 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1689 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0xDE5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2949 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x16B9 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0xE83 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP2 DUP5 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x5 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 DUP6 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x1715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1744 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x16C1 JUMP JUMPDEST DUP1 PUSH2 0x1757 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ JUMPDEST PUSH2 0x17B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F207669657720646F63746F72207061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7469656E7473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP4 SWAP1 SWAP3 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1891 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x1804 SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1830 SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x187D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1852 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x187D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1860 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x17E5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x3 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP2 SWAP1 PUSH2 0x18C2 SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18EE SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x193B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1910 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x193B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x191E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 POP PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1977 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0xDB0 DUP4 DUP4 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1999 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x19A1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT PUSH2 0x19F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50617469656E742049442063616E6E6F7420626520656D707479000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A02 SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1A65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50617469656E7420616C72656164792072656769737465726564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE DUP3 MLOAD PUSH1 0x0 DUP2 MSTORE SWAP1 DUP2 ADD DUP4 MSTORE DUP2 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x3 SWAP1 PUSH2 0x1AA6 SWAP1 DUP7 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x1AC3 SWAP1 DUP3 PUSH2 0x25F1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x1AE6 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD PUSH2 0x1B47 DUP5 DUP3 PUSH2 0x25F1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH2 0x1B58 SWAP1 DUP6 SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP6 DUP4 MSTORE TIMESTAMP PUSH1 0x20 DUP5 ADD MSTORE SWAP2 PUSH32 0xCA7C439AC98AB508692C283175E70B79C56058DD05DA29469976AADC904692F5 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1BE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE83 DUP2 CALLER PUSH2 0x1D66 JUMP JUMPDEST PUSH2 0x1BF8 DUP3 DUP3 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0xDE5 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1C2E CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1C7C DUP3 DUP3 PUSH2 0x16C1 JUMP JUMPDEST ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1CDF PUSH2 0x1DBF JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1D31 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1D0C CALLER SWAP1 JUMP JUMPDEST PUSH2 0x1D70 DUP3 DUP3 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0xDE5 JUMPI PUSH2 0x1D7D DUP2 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x1D88 DUP4 PUSH1 0x20 PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D99 SWAP3 SWAP2 SWAP1 PUSH2 0x2892 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x514 SWAP2 PUSH1 0x4 ADD PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x1BE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x772 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1E29 DUP4 PUSH1 0x2 PUSH2 0x2907 JUMP JUMPDEST PUSH2 0x1E34 SWAP1 PUSH1 0x2 PUSH2 0x291E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E4C JUMPI PUSH2 0x1E4C PUSH2 0x21D4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E76 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1E91 JUMPI PUSH2 0x1E91 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1EC0 JUMPI PUSH2 0x1EC0 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1EE4 DUP5 PUSH1 0x2 PUSH2 0x2907 JUMP JUMPDEST PUSH2 0x1EEF SWAP1 PUSH1 0x1 PUSH2 0x291E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F67 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1F23 JUMPI PUSH2 0x1F23 PUSH2 0x26B1 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F39 JUMPI PUSH2 0x1F39 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1F60 DUP2 PUSH2 0x2931 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EF2 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1FB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x1FC9 SWAP1 PUSH2 0x2522 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1FD9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xE83 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x204C JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x204C JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2017 JUMP JUMPDEST POP PUSH2 0x2058 SWAP3 SWAP2 POP PUSH2 0x205C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2058 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x205D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2083 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20A5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x208D JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x20C6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x208A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x20ED PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x20AE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x40 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x60 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x211C DUP2 DUP7 PUSH2 0x20AE JUMP JUMPDEST SWAP2 POP POP DUP3 ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1FB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH1 0xC0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2178 PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x20AE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x21BB DUP3 DUP3 PUSH2 0x20AE JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA0 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2216 JUMPI PUSH2 0x2216 PUSH2 0x21D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x223E JUMPI PUSH2 0x223E PUSH2 0x21D4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x2257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x228E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22C9 DUP6 DUP3 DUP7 ADD PUSH2 0x21EA JUMP JUMPDEST SWAP3 POP POP PUSH2 0x22D8 PUSH1 0x20 DUP5 ADD PUSH2 0x2277 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x22D8 PUSH1 0x20 DUP5 ADD PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FB6 DUP3 PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x233B DUP4 PUSH2 0x2277 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1FB6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20AE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2395 DUP8 DUP4 DUP9 ADD PUSH2 0x21EA JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x23B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23BF DUP7 DUP3 DUP8 ADD PUSH2 0x21EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23FE DUP5 DUP3 DUP6 ADD PUSH2 0x21EA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x243E JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2422 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x245D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2480 DUP6 DUP3 DUP7 ADD PUSH2 0x21EA JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x24E4 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x24D2 DUP6 DUP4 MLOAD PUSH2 0x20AE JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x24B6 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2504 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x20AE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP PUSH1 0x40 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2536 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2556 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x256E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x208A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x14185D1A595B9D081B9BDD08199BDD5B99 PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xDB0 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x25CA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25E9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x25D6 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x260B JUMPI PUSH2 0x260B PUSH2 0x21D4 JUMP JUMPDEST PUSH2 0x261F DUP2 PUSH2 0x2619 DUP5 SLOAD PUSH2 0x2522 JUMP JUMPDEST DUP5 PUSH2 0x25A3 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2654 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x263C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2683 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2664 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x26A1 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x26EF JUMPI PUSH2 0x26EF PUSH2 0x26C7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2709 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x20AE JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x772 JUMPI PUSH2 0x772 PUSH2 0x26C7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD PUSH2 0x274F DUP2 PUSH2 0x2522 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x2767 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x277C JUMPI PUSH2 0x27AB JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x27AB JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x27A2 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x2789 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x27C2 JUMPI POP POP JUMP JUMPDEST PUSH2 0x27CC DUP3 SLOAD PUSH2 0x2522 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27E4 JUMPI PUSH2 0x27E4 PUSH2 0x21D4 JUMP JUMPDEST PUSH2 0x27F2 DUP2 PUSH2 0x2619 DUP5 SLOAD PUSH2 0x2522 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2826 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x280E JUMPI POP DUP5 DUP3 ADD SLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x288B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP5 AND SWAP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2860 JUMPI DUP3 DUP7 ADD SLOAD DUP3 SSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x2840 JUMP JUMPDEST POP DUP6 DUP4 LT ISZERO PUSH2 0x287E JUMPI DUP2 DUP6 ADD SLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP PUSH1 0x1 DUP4 PUSH1 0x1 SHL ADD DUP5 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x28CA DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x208A JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x28FB DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x208A JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x772 JUMPI PUSH2 0x772 PUSH2 0x26C7 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x772 JUMPI PUSH2 0x772 PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2940 JUMPI PUSH2 0x2940 PUSH2 0x26C7 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID EXP CALL 0xDA 0xC7 0xDE LOG2 REVERT PUSH32 0x7738119CEC7DF099DFAD49AA9D2E7D17BA6B60F63AE7411FA49807205CE4D355 MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA26469706673582212201965B0FFCB7BC84A5551D59B INVALID 0x22 DUP5 LOG3 CALLDATALOAD PUSH3 0x99169A 0x5F PUSH18 0xCBF1C321A5C5B2913564736F6C6343000813 STOP CALLER ","sourceMap":"396:10313:10:-:0;;;2197:117;;;;;;;;;-1:-1:-1;1716:1:3;1821:22;;996:7:2;:15;;-1:-1:-1;;996:15:2;;;2221:42:10;1006:5:2;2252:10:10;2221;:42::i;:::-;2273:34;571:23;2296:10;2273;:34::i;:::-;396:10313;;7587:233:0;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:0;;;;;;;;;:36;;-1:-1:-1;;7708:36:0;7740:4;7708:36;;;7790:12;719:10:4;;640:96;7790:12:0;-1:-1:-1;;;;;7763:40:0;7781:7;-1:-1:-1;;;;;7763:40:0;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;396:10313:10:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ADMIN_ROLE_1841":{"entryPoint":null,"id":1841,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_27":{"entryPoint":null,"id":27,"parameterSlots":0,"returnSlots":0},"@DOCTOR_ROLE_1836":{"entryPoint":null,"id":1836,"parameterSlots":0,"returnSlots":0},"@_checkRole_131":{"entryPoint":7526,"id":131,"parameterSlots":2,"returnSlots":0},"@_checkRole_92":{"entryPoint":7140,"id":92,"parameterSlots":1,"returnSlots":0},"@_grantRole_283":{"entryPoint":7150,"id":283,"parameterSlots":2,"returnSlots":0},"@_msgSender_573":{"entryPoint":null,"id":573,"parameterSlots":0,"returnSlots":1},"@_pause_479":{"entryPoint":7465,"id":479,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_452":{"entryPoint":7068,"id":452,"parameterSlots":0,"returnSlots":0},"@_requirePaused_463":{"entryPoint":7615,"id":463,"parameterSlots":0,"returnSlots":0},"@_revokeRole_314":{"entryPoint":7282,"id":314,"parameterSlots":2,"returnSlots":0},"@_unpause_495":{"entryPoint":7383,"id":495,"parameterSlots":0,"returnSlots":0},"@addRecord_2119":{"entryPoint":3903,"id":2119,"parameterSlots":3,"returnSlots":0},"@allPatientIds_1889":{"entryPoint":4656,"id":1889,"parameterSlots":0,"returnSlots":0},"@allRecordHashes_1892":{"entryPoint":1912,"id":1892,"parameterSlots":0,"returnSlots":0},"@authorizeDoctor_2224":{"entryPoint":2775,"id":2224,"parameterSlots":2,"returnSlots":0},"@doctorPatients_1886":{"entryPoint":3718,"id":1886,"parameterSlots":0,"returnSlots":0},"@getDoctorPatients_2466":{"entryPoint":5930,"id":2466,"parameterSlots":1,"returnSlots":1},"@getPatientRecords_2438":{"entryPoint":5517,"id":2438,"parameterSlots":1,"returnSlots":1},"@getRecord_2548":{"entryPoint":1945,"id":2548,"parameterSlots":1,"returnSlots":1},"@getRoleAdmin_146":{"entryPoint":null,"id":146,"parameterSlots":1,"returnSlots":1},"@getTotalPatients_2476":{"entryPoint":null,"id":2476,"parameterSlots":0,"returnSlots":1},"@getTotalRecords_2486":{"entryPoint":null,"id":2486,"parameterSlots":0,"returnSlots":1},"@grantDoctorRole_2563":{"entryPoint":3509,"id":2563,"parameterSlots":1,"returnSlots":0},"@grantRole_166":{"entryPoint":3467,"id":166,"parameterSlots":2,"returnSlots":0},"@hasRole_79":{"entryPoint":5825,"id":79,"parameterSlots":2,"returnSlots":1},"@isAuthorizedDoctor_2409":{"entryPoint":3244,"id":2409,"parameterSlots":2,"returnSlots":1},"@patientRecords_1881":{"entryPoint":5866,"id":1881,"parameterSlots":0,"returnSlots":0},"@patients_1871":{"entryPoint":6300,"id":1871,"parameterSlots":0,"returnSlots":0},"@pause_2589":{"entryPoint":5793,"id":2589,"parameterSlots":0,"returnSlots":0},"@paused_440":{"entryPoint":null,"id":440,"parameterSlots":0,"returnSlots":1},"@records_1876":{"entryPoint":1515,"id":1876,"parameterSlots":0,"returnSlots":0},"@registerPatient_2020":{"entryPoint":6529,"id":2020,"parameterSlots":2,"returnSlots":0},"@renounceRole_209":{"entryPoint":3561,"id":209,"parameterSlots":2,"returnSlots":0},"@revokeDoctorRole_2578":{"entryPoint":5745,"id":2578,"parameterSlots":1,"returnSlots":0},"@revokeDoctor_2364":{"entryPoint":4699,"id":2364,"parameterSlots":2,"returnSlots":0},"@revokeRole_186":{"entryPoint":6492,"id":186,"parameterSlots":2,"returnSlots":0},"@supportsInterface_60":{"entryPoint":1857,"id":60,"parameterSlots":1,"returnSlots":1},"@supportsInterface_835":{"entryPoint":null,"id":835,"parameterSlots":1,"returnSlots":1},"@toHexString_766":{"entryPoint":7706,"id":766,"parameterSlots":2,"returnSlots":1},"@toHexString_786":{"entryPoint":7688,"id":786,"parameterSlots":1,"returnSlots":1},"@unpause_2600":{"entryPoint":3683,"id":2600,"parameterSlots":0,"returnSlots":0},"@updateRecord_2161":{"entryPoint":1212,"id":2161,"parameterSlots":1,"returnSlots":0},"@verifyRecord_2500":{"entryPoint":null,"id":2500,"parameterSlots":1,"returnSlots":1},"abi_decode_address":{"entryPoint":8823,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":8682,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8964,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8991,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":8305,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":8929,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":8498,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":9161,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_address":{"entryPoint":8851,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_bytes32t_string_memory_ptr":{"entryPoint":9052,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_string_memory_ptrt_uint256":{"entryPoint":9290,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":8366,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10049,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9564,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10386,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9222,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9359,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9033,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_bytes32_t_uint256_t_address_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bytes32_t_uint256_t_address_t_string_memory_ptr_t_bool__fromStack_reversed":{"entryPoint":8410,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_bytes32_t_uint256_t_bool__to_t_string_memory_ptr_t_bytes32_t_uint256_t_bool__fromStack_reversed":{"entryPoint":9457,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":9974,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_07c1c635d65e6af8656a934f42e338eb58f1c610b9d5735313ff1b71d7e23625__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0a8ed45d00a83e492b4ab61ee8b2e636923fb87d2492039421aabce06b0b29cc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_28bdf382440fa4116bdda25bcfef0045a4b02ece70872c990eb37af47b6a5a6f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_28e1e9afd51a158c04b777f0ff1418890681aa2dcfc4468bbbe06c954ae8f930__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_39964dd4ab745112952693f060791e679669e0677a04eb4aa71bca4732419ad0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6646efd2195917deefc807954554698f53c47e3c5567aa1b197b96c1ad0240cf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7880436d3be123a72f6eaf76b42ade9cc7ddea4b1232a581fa6f1bb5299c8057__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_79ce62d7220f73dea0dc2c9bb95d6143420225d311d28b04d8fae31c4aacf571__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9592,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9aaa89b137f2d33ca5a89427cbf46863211fd41651327985d96f133d4867fd05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ab042a939c7a6283c5aad9fea927fc5aa866f7f3bff61adb7e7b2d840ffb37db__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bf5e6d02bf80a51bf9006bf64f7534c5650a0026feea9a9f345bd4684adae9c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c2bcce16aecbe05703a000c32d6c789923155bc4edb44224894bec7cb236557f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c93a18ddae6e1b292f548b4b4fbb7daafa6cf30048bc047db044c6a8f6b36ee0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_MedicalRecord_$1854_memory_ptr__to_t_struct$_MedicalRecord_$1854_memory_ptr__fromStack_reversed":{"entryPoint":8540,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10526,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":10503,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":10008,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":9635,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":9713,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_storage_ptr_to_t_string_storage":{"entryPoint":10167,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":8330,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":10545,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":9506,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":9949,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9927,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":10027,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":9905,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8660,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23752:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:110:11","statements":[{"body":{"nodeType":"YulBlock","src":"130:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"139:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"142:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:11"},"nodeType":"YulFunctionCall","src":"132:12:11"},"nodeType":"YulExpressionStatement","src":"132:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:11"},"nodeType":"YulFunctionCall","src":"101:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:11"},"nodeType":"YulFunctionCall","src":"97:32:11"},"nodeType":"YulIf","src":"94:52:11"},{"nodeType":"YulAssignment","src":"155:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"178:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"165:12:11"},"nodeType":"YulFunctionCall","src":"165:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"155:6:11"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:11","type":""}],"src":"14:180:11"},{"body":{"nodeType":"YulBlock","src":"265:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"275:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"369:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"374:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:11"},"nodeType":"YulFunctionCall","src":"365:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"388:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"393:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"384:3:11"},"nodeType":"YulFunctionCall","src":"384:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"378:5:11"},"nodeType":"YulFunctionCall","src":"378:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:11"},"nodeType":"YulFunctionCall","src":"358:39:11"},"nodeType":"YulExpressionStatement","src":"358:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:11"},"nodeType":"YulFunctionCall","src":"302:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:11","statements":[{"nodeType":"YulAssignment","src":"318:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"330:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:11"},"nodeType":"YulFunctionCall","src":"323:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:11","statements":[]},"src":"294:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"427:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"432:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"423:3:11"},"nodeType":"YulFunctionCall","src":"423:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"441:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"416:6:11"},"nodeType":"YulFunctionCall","src":"416:27:11"},"nodeType":"YulExpressionStatement","src":"416:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"243:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"248:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"253:6:11","type":""}],"src":"199:250:11"},{"body":{"nodeType":"YulBlock","src":"504:221:11","statements":[{"nodeType":"YulVariableDeclaration","src":"514:26:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"534:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"528:5:11"},"nodeType":"YulFunctionCall","src":"528:12:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"518:6:11","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"556:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"561:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"549:6:11"},"nodeType":"YulFunctionCall","src":"549:19:11"},"nodeType":"YulExpressionStatement","src":"549:19:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"616:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"623:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"612:3:11"},"nodeType":"YulFunctionCall","src":"612:16:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"634:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"639:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"630:3:11"},"nodeType":"YulFunctionCall","src":"630:14:11"},{"name":"length","nodeType":"YulIdentifier","src":"646:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"577:34:11"},"nodeType":"YulFunctionCall","src":"577:76:11"},"nodeType":"YulExpressionStatement","src":"577:76:11"},{"nodeType":"YulAssignment","src":"662:57:11","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"677:3:11"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"690:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"698:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"686:3:11"},"nodeType":"YulFunctionCall","src":"686:15:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"707:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"703:3:11"},"nodeType":"YulFunctionCall","src":"703:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"682:3:11"},"nodeType":"YulFunctionCall","src":"682:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"673:3:11"},"nodeType":"YulFunctionCall","src":"673:39:11"},{"kind":"number","nodeType":"YulLiteral","src":"714:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"669:3:11"},"nodeType":"YulFunctionCall","src":"669:50:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"662:3:11"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"481:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"488:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"496:3:11","type":""}],"src":"454:271:11"},{"body":{"nodeType":"YulBlock","src":"1005:432:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1022:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1033:3:11","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1015:6:11"},"nodeType":"YulFunctionCall","src":"1015:22:11"},"nodeType":"YulExpressionStatement","src":"1015:22:11"},{"nodeType":"YulVariableDeclaration","src":"1046:60:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1078:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1090:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1101:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1086:3:11"},"nodeType":"YulFunctionCall","src":"1086:19:11"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1060:17:11"},"nodeType":"YulFunctionCall","src":"1060:46:11"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"1050:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1126:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1137:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1122:3:11"},"nodeType":"YulFunctionCall","src":"1122:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"1142:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1115:6:11"},"nodeType":"YulFunctionCall","src":"1115:34:11"},"nodeType":"YulExpressionStatement","src":"1115:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1169:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1180:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1165:3:11"},"nodeType":"YulFunctionCall","src":"1165:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"1185:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1158:6:11"},"nodeType":"YulFunctionCall","src":"1158:34:11"},"nodeType":"YulExpressionStatement","src":"1158:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1212:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1223:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1208:3:11"},"nodeType":"YulFunctionCall","src":"1208:18:11"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"1232:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1248:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1253:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1244:3:11"},"nodeType":"YulFunctionCall","src":"1244:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"1257:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1240:3:11"},"nodeType":"YulFunctionCall","src":"1240:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1228:3:11"},"nodeType":"YulFunctionCall","src":"1228:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1201:6:11"},"nodeType":"YulFunctionCall","src":"1201:60:11"},"nodeType":"YulExpressionStatement","src":"1201:60:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1281:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1292:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1277:3:11"},"nodeType":"YulFunctionCall","src":"1277:19:11"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"1302:6:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1298:3:11"},"nodeType":"YulFunctionCall","src":"1298:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1270:6:11"},"nodeType":"YulFunctionCall","src":"1270:51:11"},"nodeType":"YulExpressionStatement","src":"1270:51:11"},{"nodeType":"YulAssignment","src":"1330:41:11","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1356:6:11"},{"name":"tail_1","nodeType":"YulIdentifier","src":"1364:6:11"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1338:17:11"},"nodeType":"YulFunctionCall","src":"1338:33:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1330:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1391:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1402:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1387:3:11"},"nodeType":"YulFunctionCall","src":"1387:19:11"},{"arguments":[{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"1422:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1415:6:11"},"nodeType":"YulFunctionCall","src":"1415:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1408:6:11"},"nodeType":"YulFunctionCall","src":"1408:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1380:6:11"},"nodeType":"YulFunctionCall","src":"1380:51:11"},"nodeType":"YulExpressionStatement","src":"1380:51:11"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_bytes32_t_uint256_t_address_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bytes32_t_uint256_t_address_t_string_memory_ptr_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"934:9:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"945:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"953:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"961:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"969:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"977:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"985:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"996:4:11","type":""}],"src":"730:707:11"},{"body":{"nodeType":"YulBlock","src":"1511:217:11","statements":[{"body":{"nodeType":"YulBlock","src":"1557:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1566:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1569:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1559:6:11"},"nodeType":"YulFunctionCall","src":"1559:12:11"},"nodeType":"YulExpressionStatement","src":"1559:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1532:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1541:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1528:3:11"},"nodeType":"YulFunctionCall","src":"1528:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1553:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1524:3:11"},"nodeType":"YulFunctionCall","src":"1524:32:11"},"nodeType":"YulIf","src":"1521:52:11"},{"nodeType":"YulVariableDeclaration","src":"1582:36:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1608:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1595:12:11"},"nodeType":"YulFunctionCall","src":"1595:23:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1586:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1682:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1691:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1694:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1684:6:11"},"nodeType":"YulFunctionCall","src":"1684:12:11"},"nodeType":"YulExpressionStatement","src":"1684:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1640:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1651:5:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1662:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1667:10:11","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1658:3:11"},"nodeType":"YulFunctionCall","src":"1658:20:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1647:3:11"},"nodeType":"YulFunctionCall","src":"1647:32:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1637:2:11"},"nodeType":"YulFunctionCall","src":"1637:43:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1630:6:11"},"nodeType":"YulFunctionCall","src":"1630:51:11"},"nodeType":"YulIf","src":"1627:71:11"},{"nodeType":"YulAssignment","src":"1707:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"1717:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1707:6:11"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1477:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1488:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1500:6:11","type":""}],"src":"1442:286:11"},{"body":{"nodeType":"YulBlock","src":"1828:92:11","statements":[{"nodeType":"YulAssignment","src":"1838:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1850:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1861:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1846:3:11"},"nodeType":"YulFunctionCall","src":"1846:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1838:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1880:9:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1905:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1898:6:11"},"nodeType":"YulFunctionCall","src":"1898:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1891:6:11"},"nodeType":"YulFunctionCall","src":"1891:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1873:6:11"},"nodeType":"YulFunctionCall","src":"1873:41:11"},"nodeType":"YulExpressionStatement","src":"1873:41:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1797:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1808:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1819:4:11","type":""}],"src":"1733:187:11"},{"body":{"nodeType":"YulBlock","src":"1995:110:11","statements":[{"body":{"nodeType":"YulBlock","src":"2041:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2043:6:11"},"nodeType":"YulFunctionCall","src":"2043:12:11"},"nodeType":"YulExpressionStatement","src":"2043:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2016:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2025:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2012:3:11"},"nodeType":"YulFunctionCall","src":"2012:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2037:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2008:3:11"},"nodeType":"YulFunctionCall","src":"2008:32:11"},"nodeType":"YulIf","src":"2005:52:11"},{"nodeType":"YulAssignment","src":"2066:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2089:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2076:12:11"},"nodeType":"YulFunctionCall","src":"2076:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2066:6:11"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1961:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1972:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1984:6:11","type":""}],"src":"1925:180:11"},{"body":{"nodeType":"YulBlock","src":"2211:76:11","statements":[{"nodeType":"YulAssignment","src":"2221:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2233:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2244:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2229:3:11"},"nodeType":"YulFunctionCall","src":"2229:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2221:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2263:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"2274:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2256:6:11"},"nodeType":"YulFunctionCall","src":"2256:25:11"},"nodeType":"YulExpressionStatement","src":"2256:25:11"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2180:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2191:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2202:4:11","type":""}],"src":"2110:177:11"},{"body":{"nodeType":"YulBlock","src":"2393:76:11","statements":[{"nodeType":"YulAssignment","src":"2403:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2415:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2426:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2411:3:11"},"nodeType":"YulFunctionCall","src":"2411:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2403:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2445:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"2456:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2438:6:11"},"nodeType":"YulFunctionCall","src":"2438:25:11"},"nodeType":"YulExpressionStatement","src":"2438:25:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2362:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2373:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2384:4:11","type":""}],"src":"2292:177:11"},{"body":{"nodeType":"YulBlock","src":"2637:692:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2654:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2665:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2647:6:11"},"nodeType":"YulFunctionCall","src":"2647:21:11"},"nodeType":"YulExpressionStatement","src":"2647:21:11"},{"nodeType":"YulVariableDeclaration","src":"2677:33:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2703:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2697:5:11"},"nodeType":"YulFunctionCall","src":"2697:13:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"2681:12:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2730:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2741:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2726:3:11"},"nodeType":"YulFunctionCall","src":"2726:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"2746:4:11","type":"","value":"0xc0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2719:6:11"},"nodeType":"YulFunctionCall","src":"2719:32:11"},"nodeType":"YulExpressionStatement","src":"2719:32:11"},{"nodeType":"YulVariableDeclaration","src":"2760:66:11","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"2792:12:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2810:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2821:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2806:3:11"},"nodeType":"YulFunctionCall","src":"2806:19:11"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2774:17:11"},"nodeType":"YulFunctionCall","src":"2774:52:11"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"2764:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2846:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2857:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2842:3:11"},"nodeType":"YulFunctionCall","src":"2842:18:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2872:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2880:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2868:3:11"},"nodeType":"YulFunctionCall","src":"2868:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2862:5:11"},"nodeType":"YulFunctionCall","src":"2862:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2835:6:11"},"nodeType":"YulFunctionCall","src":"2835:50:11"},"nodeType":"YulExpressionStatement","src":"2835:50:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2905:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2916:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2901:3:11"},"nodeType":"YulFunctionCall","src":"2901:18:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2931:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2939:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2927:3:11"},"nodeType":"YulFunctionCall","src":"2927:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2921:5:11"},"nodeType":"YulFunctionCall","src":"2921:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2894:6:11"},"nodeType":"YulFunctionCall","src":"2894:50:11"},"nodeType":"YulExpressionStatement","src":"2894:50:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2964:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2975:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2960:3:11"},"nodeType":"YulFunctionCall","src":"2960:19:11"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2995:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3003:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2991:3:11"},"nodeType":"YulFunctionCall","src":"2991:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2985:5:11"},"nodeType":"YulFunctionCall","src":"2985:22:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3017:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3022:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3013:3:11"},"nodeType":"YulFunctionCall","src":"3013:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"3026:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3009:3:11"},"nodeType":"YulFunctionCall","src":"3009:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2981:3:11"},"nodeType":"YulFunctionCall","src":"2981:48:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2953:6:11"},"nodeType":"YulFunctionCall","src":"2953:77:11"},"nodeType":"YulExpressionStatement","src":"2953:77:11"},{"nodeType":"YulVariableDeclaration","src":"3039:45:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3071:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3079:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3067:3:11"},"nodeType":"YulFunctionCall","src":"3067:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3061:5:11"},"nodeType":"YulFunctionCall","src":"3061:23:11"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"3043:14:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3104:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3115:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3100:3:11"},"nodeType":"YulFunctionCall","src":"3100:19:11"},{"arguments":[{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3129:6:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3137:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3125:3:11"},"nodeType":"YulFunctionCall","src":"3125:22:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3153:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3149:3:11"},"nodeType":"YulFunctionCall","src":"3149:7:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3121:3:11"},"nodeType":"YulFunctionCall","src":"3121:36:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3093:6:11"},"nodeType":"YulFunctionCall","src":"3093:65:11"},"nodeType":"YulExpressionStatement","src":"3093:65:11"},{"nodeType":"YulVariableDeclaration","src":"3167:55:11","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"3199:14:11"},{"name":"tail_1","nodeType":"YulIdentifier","src":"3215:6:11"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3181:17:11"},"nodeType":"YulFunctionCall","src":"3181:41:11"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"3171:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3242:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3253:4:11","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3238:3:11"},"nodeType":"YulFunctionCall","src":"3238:20:11"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3284:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3292:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3280:3:11"},"nodeType":"YulFunctionCall","src":"3280:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3274:5:11"},"nodeType":"YulFunctionCall","src":"3274:23:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3267:6:11"},"nodeType":"YulFunctionCall","src":"3267:31:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3260:6:11"},"nodeType":"YulFunctionCall","src":"3260:39:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3231:6:11"},"nodeType":"YulFunctionCall","src":"3231:69:11"},"nodeType":"YulExpressionStatement","src":"3231:69:11"},{"nodeType":"YulAssignment","src":"3309:14:11","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"3317:6:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3309:4:11"}]}]},"name":"abi_encode_tuple_t_struct$_MedicalRecord_$1854_memory_ptr__to_t_struct$_MedicalRecord_$1854_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2606:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2617:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2628:4:11","type":""}],"src":"2474:855:11"},{"body":{"nodeType":"YulBlock","src":"3366:95:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3383:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3390:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3395:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3386:3:11"},"nodeType":"YulFunctionCall","src":"3386:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3376:6:11"},"nodeType":"YulFunctionCall","src":"3376:31:11"},"nodeType":"YulExpressionStatement","src":"3376:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3423:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3426:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3416:6:11"},"nodeType":"YulFunctionCall","src":"3416:15:11"},"nodeType":"YulExpressionStatement","src":"3416:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3447:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3450:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3440:6:11"},"nodeType":"YulFunctionCall","src":"3440:15:11"},"nodeType":"YulExpressionStatement","src":"3440:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3334:127:11"},{"body":{"nodeType":"YulBlock","src":"3519:666:11","statements":[{"body":{"nodeType":"YulBlock","src":"3568:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3577:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3580:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3570:6:11"},"nodeType":"YulFunctionCall","src":"3570:12:11"},"nodeType":"YulExpressionStatement","src":"3570:12:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3547:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3555:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3543:3:11"},"nodeType":"YulFunctionCall","src":"3543:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"3562:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3539:3:11"},"nodeType":"YulFunctionCall","src":"3539:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3532:6:11"},"nodeType":"YulFunctionCall","src":"3532:35:11"},"nodeType":"YulIf","src":"3529:55:11"},{"nodeType":"YulVariableDeclaration","src":"3593:30:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3616:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3603:12:11"},"nodeType":"YulFunctionCall","src":"3603:20:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3597:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3632:28:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3642:18:11","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3636:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3683:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3685:16:11"},"nodeType":"YulFunctionCall","src":"3685:18:11"},"nodeType":"YulExpressionStatement","src":"3685:18:11"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3675:2:11"},{"name":"_2","nodeType":"YulIdentifier","src":"3679:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3672:2:11"},"nodeType":"YulFunctionCall","src":"3672:10:11"},"nodeType":"YulIf","src":"3669:36:11"},{"nodeType":"YulVariableDeclaration","src":"3714:17:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3728:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3724:3:11"},"nodeType":"YulFunctionCall","src":"3724:7:11"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3718:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3740:23:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3760:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3754:5:11"},"nodeType":"YulFunctionCall","src":"3754:9:11"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3744:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3772:71:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3794:6:11"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3818:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"3822:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3814:3:11"},"nodeType":"YulFunctionCall","src":"3814:13:11"},{"name":"_3","nodeType":"YulIdentifier","src":"3829:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3810:3:11"},"nodeType":"YulFunctionCall","src":"3810:22:11"},{"kind":"number","nodeType":"YulLiteral","src":"3834:2:11","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3806:3:11"},"nodeType":"YulFunctionCall","src":"3806:31:11"},{"name":"_3","nodeType":"YulIdentifier","src":"3839:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3802:3:11"},"nodeType":"YulFunctionCall","src":"3802:40:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3790:3:11"},"nodeType":"YulFunctionCall","src":"3790:53:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3776:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3902:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3904:16:11"},"nodeType":"YulFunctionCall","src":"3904:18:11"},"nodeType":"YulExpressionStatement","src":"3904:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3861:10:11"},{"name":"_2","nodeType":"YulIdentifier","src":"3873:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3858:2:11"},"nodeType":"YulFunctionCall","src":"3858:18:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3881:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3893:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3878:2:11"},"nodeType":"YulFunctionCall","src":"3878:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3855:2:11"},"nodeType":"YulFunctionCall","src":"3855:46:11"},"nodeType":"YulIf","src":"3852:72:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3940:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3944:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3933:6:11"},"nodeType":"YulFunctionCall","src":"3933:22:11"},"nodeType":"YulExpressionStatement","src":"3933:22:11"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3971:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"3979:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3964:6:11"},"nodeType":"YulFunctionCall","src":"3964:18:11"},"nodeType":"YulExpressionStatement","src":"3964:18:11"},{"body":{"nodeType":"YulBlock","src":"4030:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4039:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4042:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4032:6:11"},"nodeType":"YulFunctionCall","src":"4032:12:11"},"nodeType":"YulExpressionStatement","src":"4032:12:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4005:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"4013:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4001:3:11"},"nodeType":"YulFunctionCall","src":"4001:15:11"},{"kind":"number","nodeType":"YulLiteral","src":"4018:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3997:3:11"},"nodeType":"YulFunctionCall","src":"3997:26:11"},{"name":"end","nodeType":"YulIdentifier","src":"4025:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3994:2:11"},"nodeType":"YulFunctionCall","src":"3994:35:11"},"nodeType":"YulIf","src":"3991:55:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4072:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4080:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4068:3:11"},"nodeType":"YulFunctionCall","src":"4068:17:11"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4091:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4099:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4087:3:11"},"nodeType":"YulFunctionCall","src":"4087:17:11"},{"name":"_1","nodeType":"YulIdentifier","src":"4106:2:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4055:12:11"},"nodeType":"YulFunctionCall","src":"4055:54:11"},"nodeType":"YulExpressionStatement","src":"4055:54:11"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4133:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"4141:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4129:3:11"},"nodeType":"YulFunctionCall","src":"4129:15:11"},{"kind":"number","nodeType":"YulLiteral","src":"4146:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4125:3:11"},"nodeType":"YulFunctionCall","src":"4125:26:11"},{"kind":"number","nodeType":"YulLiteral","src":"4153:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4118:6:11"},"nodeType":"YulFunctionCall","src":"4118:37:11"},"nodeType":"YulExpressionStatement","src":"4118:37:11"},{"nodeType":"YulAssignment","src":"4164:15:11","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4173:6:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4164:5:11"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3493:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"3501:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3509:5:11","type":""}],"src":"3466:719:11"},{"body":{"nodeType":"YulBlock","src":"4239:124:11","statements":[{"nodeType":"YulAssignment","src":"4249:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4271:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4258:12:11"},"nodeType":"YulFunctionCall","src":"4258:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4249:5:11"}]},{"body":{"nodeType":"YulBlock","src":"4341:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4350:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4353:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4343:6:11"},"nodeType":"YulFunctionCall","src":"4343:12:11"},"nodeType":"YulExpressionStatement","src":"4343:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4300:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4311:5:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4326:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4331:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4322:3:11"},"nodeType":"YulFunctionCall","src":"4322:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"4335:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4318:3:11"},"nodeType":"YulFunctionCall","src":"4318:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4307:3:11"},"nodeType":"YulFunctionCall","src":"4307:31:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4297:2:11"},"nodeType":"YulFunctionCall","src":"4297:42:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4290:6:11"},"nodeType":"YulFunctionCall","src":"4290:50:11"},"nodeType":"YulIf","src":"4287:70:11"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4218:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4229:5:11","type":""}],"src":"4190:173:11"},{"body":{"nodeType":"YulBlock","src":"4465:299:11","statements":[{"body":{"nodeType":"YulBlock","src":"4511:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4520:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4523:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4513:6:11"},"nodeType":"YulFunctionCall","src":"4513:12:11"},"nodeType":"YulExpressionStatement","src":"4513:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4486:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4495:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4482:3:11"},"nodeType":"YulFunctionCall","src":"4482:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4507:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4478:3:11"},"nodeType":"YulFunctionCall","src":"4478:32:11"},"nodeType":"YulIf","src":"4475:52:11"},{"nodeType":"YulVariableDeclaration","src":"4536:37:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4563:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4550:12:11"},"nodeType":"YulFunctionCall","src":"4550:23:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4540:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4616:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4625:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4628:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4618:6:11"},"nodeType":"YulFunctionCall","src":"4618:12:11"},"nodeType":"YulExpressionStatement","src":"4618:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4588:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4596:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4585:2:11"},"nodeType":"YulFunctionCall","src":"4585:30:11"},"nodeType":"YulIf","src":"4582:50:11"},{"nodeType":"YulAssignment","src":"4641:60:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4673:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4684:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4669:3:11"},"nodeType":"YulFunctionCall","src":"4669:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4693:7:11"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"4651:17:11"},"nodeType":"YulFunctionCall","src":"4651:50:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4641:6:11"}]},{"nodeType":"YulAssignment","src":"4710:48:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4743:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4754:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4739:3:11"},"nodeType":"YulFunctionCall","src":"4739:18:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4720:18:11"},"nodeType":"YulFunctionCall","src":"4720:38:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4710:6:11"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4423:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4434:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4446:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4454:6:11","type":""}],"src":"4368:396:11"},{"body":{"nodeType":"YulBlock","src":"4856:167:11","statements":[{"body":{"nodeType":"YulBlock","src":"4902:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4911:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4914:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4904:6:11"},"nodeType":"YulFunctionCall","src":"4904:12:11"},"nodeType":"YulExpressionStatement","src":"4904:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4877:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4886:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4873:3:11"},"nodeType":"YulFunctionCall","src":"4873:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4898:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4869:3:11"},"nodeType":"YulFunctionCall","src":"4869:32:11"},"nodeType":"YulIf","src":"4866:52:11"},{"nodeType":"YulAssignment","src":"4927:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4950:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4937:12:11"},"nodeType":"YulFunctionCall","src":"4937:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4927:6:11"}]},{"nodeType":"YulAssignment","src":"4969:48:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5002:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5013:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4998:3:11"},"nodeType":"YulFunctionCall","src":"4998:18:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4979:18:11"},"nodeType":"YulFunctionCall","src":"4979:38:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4969:6:11"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4814:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4825:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4837:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4845:6:11","type":""}],"src":"4769:254:11"},{"body":{"nodeType":"YulBlock","src":"5098:116:11","statements":[{"body":{"nodeType":"YulBlock","src":"5144:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5153:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5156:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5146:6:11"},"nodeType":"YulFunctionCall","src":"5146:12:11"},"nodeType":"YulExpressionStatement","src":"5146:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5119:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5128:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5115:3:11"},"nodeType":"YulFunctionCall","src":"5115:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5140:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5111:3:11"},"nodeType":"YulFunctionCall","src":"5111:32:11"},"nodeType":"YulIf","src":"5108:52:11"},{"nodeType":"YulAssignment","src":"5169:39:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5198:9:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5179:18:11"},"nodeType":"YulFunctionCall","src":"5179:29:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5169:6:11"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5064:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5075:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5087:6:11","type":""}],"src":"5028:186:11"},{"body":{"nodeType":"YulBlock","src":"5306:167:11","statements":[{"body":{"nodeType":"YulBlock","src":"5352:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5361:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5364:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5354:6:11"},"nodeType":"YulFunctionCall","src":"5354:12:11"},"nodeType":"YulExpressionStatement","src":"5354:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5327:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5336:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5323:3:11"},"nodeType":"YulFunctionCall","src":"5323:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5348:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5319:3:11"},"nodeType":"YulFunctionCall","src":"5319:32:11"},"nodeType":"YulIf","src":"5316:52:11"},{"nodeType":"YulAssignment","src":"5377:39:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5406:9:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5387:18:11"},"nodeType":"YulFunctionCall","src":"5387:29:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5377:6:11"}]},{"nodeType":"YulAssignment","src":"5425:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5452:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5463:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5448:3:11"},"nodeType":"YulFunctionCall","src":"5448:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5435:12:11"},"nodeType":"YulFunctionCall","src":"5435:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5425:6:11"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5264:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5275:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5287:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5295:6:11","type":""}],"src":"5219:254:11"},{"body":{"nodeType":"YulBlock","src":"5599:99:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5616:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5627:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5609:6:11"},"nodeType":"YulFunctionCall","src":"5609:21:11"},"nodeType":"YulExpressionStatement","src":"5609:21:11"},{"nodeType":"YulAssignment","src":"5639:53:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5665:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5677:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5688:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5673:3:11"},"nodeType":"YulFunctionCall","src":"5673:18:11"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"5647:17:11"},"nodeType":"YulFunctionCall","src":"5647:45:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5639:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5568:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5579:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5590:4:11","type":""}],"src":"5478:220:11"},{"body":{"nodeType":"YulBlock","src":"5827:487:11","statements":[{"body":{"nodeType":"YulBlock","src":"5873:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5882:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5885:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5875:6:11"},"nodeType":"YulFunctionCall","src":"5875:12:11"},"nodeType":"YulExpressionStatement","src":"5875:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5848:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5857:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5844:3:11"},"nodeType":"YulFunctionCall","src":"5844:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5869:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5840:3:11"},"nodeType":"YulFunctionCall","src":"5840:32:11"},"nodeType":"YulIf","src":"5837:52:11"},{"nodeType":"YulVariableDeclaration","src":"5898:37:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5925:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5912:12:11"},"nodeType":"YulFunctionCall","src":"5912:23:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5902:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5944:28:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5954:18:11","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5948:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"5999:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6008:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6011:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6001:6:11"},"nodeType":"YulFunctionCall","src":"6001:12:11"},"nodeType":"YulExpressionStatement","src":"6001:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5987:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"5995:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5984:2:11"},"nodeType":"YulFunctionCall","src":"5984:14:11"},"nodeType":"YulIf","src":"5981:34:11"},{"nodeType":"YulAssignment","src":"6024:60:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6056:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6067:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6052:3:11"},"nodeType":"YulFunctionCall","src":"6052:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6076:7:11"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"6034:17:11"},"nodeType":"YulFunctionCall","src":"6034:50:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6024:6:11"}]},{"nodeType":"YulAssignment","src":"6093:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6120:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6116:3:11"},"nodeType":"YulFunctionCall","src":"6116:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6103:12:11"},"nodeType":"YulFunctionCall","src":"6103:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6093:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"6144:48:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6177:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6188:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6173:3:11"},"nodeType":"YulFunctionCall","src":"6173:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6160:12:11"},"nodeType":"YulFunctionCall","src":"6160:32:11"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"6148:8:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6221:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6230:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6233:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6223:6:11"},"nodeType":"YulFunctionCall","src":"6223:12:11"},"nodeType":"YulExpressionStatement","src":"6223:12:11"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"6207:8:11"},{"name":"_1","nodeType":"YulIdentifier","src":"6217:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6204:2:11"},"nodeType":"YulFunctionCall","src":"6204:16:11"},"nodeType":"YulIf","src":"6201:36:11"},{"nodeType":"YulAssignment","src":"6246:62:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6278:9:11"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6289:8:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6274:3:11"},"nodeType":"YulFunctionCall","src":"6274:24:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6300:7:11"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"6256:17:11"},"nodeType":"YulFunctionCall","src":"6256:52:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6246:6:11"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_bytes32t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5777:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5788:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5800:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5808:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5816:6:11","type":""}],"src":"5703:611:11"},{"body":{"nodeType":"YulBlock","src":"6399:242:11","statements":[{"body":{"nodeType":"YulBlock","src":"6445:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6454:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6457:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6447:6:11"},"nodeType":"YulFunctionCall","src":"6447:12:11"},"nodeType":"YulExpressionStatement","src":"6447:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6420:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6429:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6416:3:11"},"nodeType":"YulFunctionCall","src":"6416:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"6441:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6412:3:11"},"nodeType":"YulFunctionCall","src":"6412:32:11"},"nodeType":"YulIf","src":"6409:52:11"},{"nodeType":"YulVariableDeclaration","src":"6470:37:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6497:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6484:12:11"},"nodeType":"YulFunctionCall","src":"6484:23:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6474:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6550:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6559:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6562:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6552:6:11"},"nodeType":"YulFunctionCall","src":"6552:12:11"},"nodeType":"YulExpressionStatement","src":"6552:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6522:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6530:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6519:2:11"},"nodeType":"YulFunctionCall","src":"6519:30:11"},"nodeType":"YulIf","src":"6516:50:11"},{"nodeType":"YulAssignment","src":"6575:60:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6607:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6618:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6603:3:11"},"nodeType":"YulFunctionCall","src":"6603:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6627:7:11"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"6585:17:11"},"nodeType":"YulFunctionCall","src":"6585:50:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6575:6:11"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6365:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6376:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6388:6:11","type":""}],"src":"6319:322:11"},{"body":{"nodeType":"YulBlock","src":"6797:481:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6807:12:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6817:2:11","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6811:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6828:32:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6846:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"6857:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6842:3:11"},"nodeType":"YulFunctionCall","src":"6842:18:11"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"6832:6:11","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6876:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"6887:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6869:6:11"},"nodeType":"YulFunctionCall","src":"6869:21:11"},"nodeType":"YulExpressionStatement","src":"6869:21:11"},{"nodeType":"YulVariableDeclaration","src":"6899:17:11","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"6910:6:11"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"6903:3:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6925:27:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6945:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6939:5:11"},"nodeType":"YulFunctionCall","src":"6939:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6929:6:11","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"6968:6:11"},{"name":"length","nodeType":"YulIdentifier","src":"6976:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6961:6:11"},"nodeType":"YulFunctionCall","src":"6961:22:11"},"nodeType":"YulExpressionStatement","src":"6961:22:11"},{"nodeType":"YulAssignment","src":"6992:25:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7003:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7014:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6999:3:11"},"nodeType":"YulFunctionCall","src":"6999:18:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6992:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"7026:29:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7044:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"7052:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7040:3:11"},"nodeType":"YulFunctionCall","src":"7040:15:11"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7030:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7064:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7073:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7068:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"7132:120:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7153:3:11"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7164:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7158:5:11"},"nodeType":"YulFunctionCall","src":"7158:13:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7146:6:11"},"nodeType":"YulFunctionCall","src":"7146:26:11"},"nodeType":"YulExpressionStatement","src":"7146:26:11"},{"nodeType":"YulAssignment","src":"7185:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7196:3:11"},{"name":"_1","nodeType":"YulIdentifier","src":"7201:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7192:3:11"},"nodeType":"YulFunctionCall","src":"7192:12:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7185:3:11"}]},{"nodeType":"YulAssignment","src":"7217:25:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7231:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"7239:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7227:3:11"},"nodeType":"YulFunctionCall","src":"7227:15:11"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7217:6:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7094:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"7097:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7091:2:11"},"nodeType":"YulFunctionCall","src":"7091:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7105:18:11","statements":[{"nodeType":"YulAssignment","src":"7107:14:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7116:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"7119:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7112:3:11"},"nodeType":"YulFunctionCall","src":"7112:9:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7107:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"7087:3:11","statements":[]},"src":"7083:169:11"},{"nodeType":"YulAssignment","src":"7261:11:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"7269:3:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7261:4:11"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6766:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6777:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6788:4:11","type":""}],"src":"6646:632:11"},{"body":{"nodeType":"YulBlock","src":"7380:293:11","statements":[{"body":{"nodeType":"YulBlock","src":"7426:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7435:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7438:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7428:6:11"},"nodeType":"YulFunctionCall","src":"7428:12:11"},"nodeType":"YulExpressionStatement","src":"7428:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7401:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7410:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7397:3:11"},"nodeType":"YulFunctionCall","src":"7397:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"7422:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7393:3:11"},"nodeType":"YulFunctionCall","src":"7393:32:11"},"nodeType":"YulIf","src":"7390:52:11"},{"nodeType":"YulVariableDeclaration","src":"7451:37:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7478:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7465:12:11"},"nodeType":"YulFunctionCall","src":"7465:23:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7455:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"7531:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7540:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7543:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7533:6:11"},"nodeType":"YulFunctionCall","src":"7533:12:11"},"nodeType":"YulExpressionStatement","src":"7533:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7503:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7511:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7500:2:11"},"nodeType":"YulFunctionCall","src":"7500:30:11"},"nodeType":"YulIf","src":"7497:50:11"},{"nodeType":"YulAssignment","src":"7556:60:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7588:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7599:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7584:3:11"},"nodeType":"YulFunctionCall","src":"7584:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7608:7:11"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"7566:17:11"},"nodeType":"YulFunctionCall","src":"7566:50:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7556:6:11"}]},{"nodeType":"YulAssignment","src":"7625:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7652:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7663:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7648:3:11"},"nodeType":"YulFunctionCall","src":"7648:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7635:12:11"},"nodeType":"YulFunctionCall","src":"7635:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7625:6:11"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7338:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7349:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7361:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7369:6:11","type":""}],"src":"7283:390:11"},{"body":{"nodeType":"YulBlock","src":"7849:632:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7859:12:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7869:2:11","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7863:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7880:32:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7898:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"7909:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7894:3:11"},"nodeType":"YulFunctionCall","src":"7894:18:11"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"7884:6:11","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7928:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"7939:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7921:6:11"},"nodeType":"YulFunctionCall","src":"7921:21:11"},"nodeType":"YulExpressionStatement","src":"7921:21:11"},{"nodeType":"YulVariableDeclaration","src":"7951:17:11","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"7962:6:11"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"7955:3:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7977:27:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7997:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7991:5:11"},"nodeType":"YulFunctionCall","src":"7991:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7981:6:11","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"8020:6:11"},{"name":"length","nodeType":"YulIdentifier","src":"8028:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8013:6:11"},"nodeType":"YulFunctionCall","src":"8013:22:11"},"nodeType":"YulExpressionStatement","src":"8013:22:11"},{"nodeType":"YulAssignment","src":"8044:25:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8055:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8066:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8051:3:11"},"nodeType":"YulFunctionCall","src":"8051:18:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8044:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"8078:53:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8100:9:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8115:1:11","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"8118:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8111:3:11"},"nodeType":"YulFunctionCall","src":"8111:14:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8096:3:11"},"nodeType":"YulFunctionCall","src":"8096:30:11"},{"kind":"number","nodeType":"YulLiteral","src":"8128:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8092:3:11"},"nodeType":"YulFunctionCall","src":"8092:39:11"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"8082:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8140:29:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8158:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"8166:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8154:3:11"},"nodeType":"YulFunctionCall","src":"8154:15:11"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"8144:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8178:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8187:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8182:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"8246:206:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8267:3:11"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"8280:6:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8288:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8276:3:11"},"nodeType":"YulFunctionCall","src":"8276:22:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8304:2:11","type":"","value":"63"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8300:3:11"},"nodeType":"YulFunctionCall","src":"8300:7:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8272:3:11"},"nodeType":"YulFunctionCall","src":"8272:36:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8260:6:11"},"nodeType":"YulFunctionCall","src":"8260:49:11"},"nodeType":"YulExpressionStatement","src":"8260:49:11"},{"nodeType":"YulAssignment","src":"8322:50:11","value":{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8356:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8350:5:11"},"nodeType":"YulFunctionCall","src":"8350:13:11"},{"name":"tail_2","nodeType":"YulIdentifier","src":"8365:6:11"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"8332:17:11"},"nodeType":"YulFunctionCall","src":"8332:40:11"},"variableNames":[{"name":"tail_2","nodeType":"YulIdentifier","src":"8322:6:11"}]},{"nodeType":"YulAssignment","src":"8385:25:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8399:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"8407:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8395:3:11"},"nodeType":"YulFunctionCall","src":"8395:15:11"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8385:6:11"}]},{"nodeType":"YulAssignment","src":"8423:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8434:3:11"},{"name":"_1","nodeType":"YulIdentifier","src":"8439:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8430:3:11"},"nodeType":"YulFunctionCall","src":"8430:12:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8423:3:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8208:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"8211:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8205:2:11"},"nodeType":"YulFunctionCall","src":"8205:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8219:18:11","statements":[{"nodeType":"YulAssignment","src":"8221:14:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8230:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"8233:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8226:3:11"},"nodeType":"YulFunctionCall","src":"8226:9:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8221:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"8201:3:11","statements":[]},"src":"8197:255:11"},{"nodeType":"YulAssignment","src":"8461:14:11","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"8469:6:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8461:4:11"}]}]},"name":"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7818:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7829:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7840:4:11","type":""}],"src":"7678:803:11"},{"body":{"nodeType":"YulBlock","src":"8685:246:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8702:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8713:3:11","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8695:6:11"},"nodeType":"YulFunctionCall","src":"8695:22:11"},"nodeType":"YulExpressionStatement","src":"8695:22:11"},{"nodeType":"YulAssignment","src":"8726:54:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8752:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8764:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8775:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8760:3:11"},"nodeType":"YulFunctionCall","src":"8760:19:11"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"8734:17:11"},"nodeType":"YulFunctionCall","src":"8734:46:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8726:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8800:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8811:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8796:3:11"},"nodeType":"YulFunctionCall","src":"8796:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"8816:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8789:6:11"},"nodeType":"YulFunctionCall","src":"8789:34:11"},"nodeType":"YulExpressionStatement","src":"8789:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8843:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8854:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8839:3:11"},"nodeType":"YulFunctionCall","src":"8839:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"8859:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8832:6:11"},"nodeType":"YulFunctionCall","src":"8832:34:11"},"nodeType":"YulExpressionStatement","src":"8832:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8886:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8897:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8882:3:11"},"nodeType":"YulFunctionCall","src":"8882:18:11"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"8916:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8909:6:11"},"nodeType":"YulFunctionCall","src":"8909:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8902:6:11"},"nodeType":"YulFunctionCall","src":"8902:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8875:6:11"},"nodeType":"YulFunctionCall","src":"8875:50:11"},"nodeType":"YulExpressionStatement","src":"8875:50:11"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_bytes32_t_uint256_t_bool__to_t_string_memory_ptr_t_bytes32_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8630:9:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8641:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8649:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8657:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8665:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8676:4:11","type":""}],"src":"8486:445:11"},{"body":{"nodeType":"YulBlock","src":"9033:293:11","statements":[{"body":{"nodeType":"YulBlock","src":"9079:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9088:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9091:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9081:6:11"},"nodeType":"YulFunctionCall","src":"9081:12:11"},"nodeType":"YulExpressionStatement","src":"9081:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9054:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9063:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9050:3:11"},"nodeType":"YulFunctionCall","src":"9050:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"9075:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9046:3:11"},"nodeType":"YulFunctionCall","src":"9046:32:11"},"nodeType":"YulIf","src":"9043:52:11"},{"nodeType":"YulVariableDeclaration","src":"9104:37:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9131:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9118:12:11"},"nodeType":"YulFunctionCall","src":"9118:23:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9108:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"9184:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9193:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9196:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9186:6:11"},"nodeType":"YulFunctionCall","src":"9186:12:11"},"nodeType":"YulExpressionStatement","src":"9186:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9156:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9164:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9153:2:11"},"nodeType":"YulFunctionCall","src":"9153:30:11"},"nodeType":"YulIf","src":"9150:50:11"},{"nodeType":"YulAssignment","src":"9209:60:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9241:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"9252:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9237:3:11"},"nodeType":"YulFunctionCall","src":"9237:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9261:7:11"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"9219:17:11"},"nodeType":"YulFunctionCall","src":"9219:50:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9209:6:11"}]},{"nodeType":"YulAssignment","src":"9278:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9305:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9316:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:11"},"nodeType":"YulFunctionCall","src":"9301:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9288:12:11"},"nodeType":"YulFunctionCall","src":"9288:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9278:6:11"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8991:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9002:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9014:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9022:6:11","type":""}],"src":"8936:390:11"},{"body":{"nodeType":"YulBlock","src":"9505:166:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9522:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9533:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9515:6:11"},"nodeType":"YulFunctionCall","src":"9515:21:11"},"nodeType":"YulExpressionStatement","src":"9515:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9556:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9567:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9552:3:11"},"nodeType":"YulFunctionCall","src":"9552:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"9572:2:11","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9545:6:11"},"nodeType":"YulFunctionCall","src":"9545:30:11"},"nodeType":"YulExpressionStatement","src":"9545:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9595:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9606:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9591:3:11"},"nodeType":"YulFunctionCall","src":"9591:18:11"},{"hexValue":"5265636f7264206e6f7420666f756e64","kind":"string","nodeType":"YulLiteral","src":"9611:18:11","type":"","value":"Record not found"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9584:6:11"},"nodeType":"YulFunctionCall","src":"9584:46:11"},"nodeType":"YulExpressionStatement","src":"9584:46:11"},{"nodeType":"YulAssignment","src":"9639:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9651:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9662:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9647:3:11"},"nodeType":"YulFunctionCall","src":"9647:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9639:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0a8ed45d00a83e492b4ab61ee8b2e636923fb87d2492039421aabce06b0b29cc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9482:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9496:4:11","type":""}],"src":"9331:340:11"},{"body":{"nodeType":"YulBlock","src":"9850:226:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9867:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9878:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9860:6:11"},"nodeType":"YulFunctionCall","src":"9860:21:11"},"nodeType":"YulExpressionStatement","src":"9860:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9901:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9912:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9897:3:11"},"nodeType":"YulFunctionCall","src":"9897:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"9917:2:11","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9890:6:11"},"nodeType":"YulFunctionCall","src":"9890:30:11"},"nodeType":"YulExpressionStatement","src":"9890:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9940:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9951:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9936:3:11"},"nodeType":"YulFunctionCall","src":"9936:18:11"},{"hexValue":"4e6f7420617574686f72697a656420746f207570646174652074686973207265","kind":"string","nodeType":"YulLiteral","src":"9956:34:11","type":"","value":"Not authorized to update this re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9929:6:11"},"nodeType":"YulFunctionCall","src":"9929:62:11"},"nodeType":"YulExpressionStatement","src":"9929:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10011:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10022:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10007:3:11"},"nodeType":"YulFunctionCall","src":"10007:18:11"},{"hexValue":"636f7264","kind":"string","nodeType":"YulLiteral","src":"10027:6:11","type":"","value":"cord"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10000:6:11"},"nodeType":"YulFunctionCall","src":"10000:34:11"},"nodeType":"YulExpressionStatement","src":"10000:34:11"},{"nodeType":"YulAssignment","src":"10043:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10055:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10066:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10051:3:11"},"nodeType":"YulFunctionCall","src":"10051:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10043:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c93a18ddae6e1b292f548b4b4fbb7daafa6cf30048bc047db044c6a8f6b36ee0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9827:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9841:4:11","type":""}],"src":"9676:400:11"},{"body":{"nodeType":"YulBlock","src":"10136:325:11","statements":[{"nodeType":"YulAssignment","src":"10146:22:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10160:1:11","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"10163:4:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10156:3:11"},"nodeType":"YulFunctionCall","src":"10156:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10146:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"10177:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10207:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"10213:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10203:3:11"},"nodeType":"YulFunctionCall","src":"10203:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10181:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"10254:31:11","statements":[{"nodeType":"YulAssignment","src":"10256:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10270:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10278:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10266:3:11"},"nodeType":"YulFunctionCall","src":"10266:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10256:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10234:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10227:6:11"},"nodeType":"YulFunctionCall","src":"10227:26:11"},"nodeType":"YulIf","src":"10224:61:11"},{"body":{"nodeType":"YulBlock","src":"10344:111:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10365:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10372:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10377:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10368:3:11"},"nodeType":"YulFunctionCall","src":"10368:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10358:6:11"},"nodeType":"YulFunctionCall","src":"10358:31:11"},"nodeType":"YulExpressionStatement","src":"10358:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10409:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10412:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10402:6:11"},"nodeType":"YulFunctionCall","src":"10402:15:11"},"nodeType":"YulExpressionStatement","src":"10402:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10437:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10440:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10430:6:11"},"nodeType":"YulFunctionCall","src":"10430:15:11"},"nodeType":"YulExpressionStatement","src":"10430:15:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10300:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10323:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10331:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10320:2:11"},"nodeType":"YulFunctionCall","src":"10320:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10297:2:11"},"nodeType":"YulFunctionCall","src":"10297:38:11"},"nodeType":"YulIf","src":"10294:161:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10116:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10125:6:11","type":""}],"src":"10081:380:11"},{"body":{"nodeType":"YulBlock","src":"10640:224:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10657:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10668:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10650:6:11"},"nodeType":"YulFunctionCall","src":"10650:21:11"},"nodeType":"YulExpressionStatement","src":"10650:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10691:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10702:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10687:3:11"},"nodeType":"YulFunctionCall","src":"10687:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"10707:2:11","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10680:6:11"},"nodeType":"YulFunctionCall","src":"10680:30:11"},"nodeType":"YulExpressionStatement","src":"10680:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10730:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10741:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10726:3:11"},"nodeType":"YulFunctionCall","src":"10726:18:11"},{"hexValue":"4e6f7420617574686f72697a656420746f20766965772074686973207265636f","kind":"string","nodeType":"YulLiteral","src":"10746:34:11","type":"","value":"Not authorized to view this reco"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10719:6:11"},"nodeType":"YulFunctionCall","src":"10719:62:11"},"nodeType":"YulExpressionStatement","src":"10719:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10801:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10812:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10797:3:11"},"nodeType":"YulFunctionCall","src":"10797:18:11"},{"hexValue":"7264","kind":"string","nodeType":"YulLiteral","src":"10817:4:11","type":"","value":"rd"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10790:6:11"},"nodeType":"YulFunctionCall","src":"10790:32:11"},"nodeType":"YulExpressionStatement","src":"10790:32:11"},{"nodeType":"YulAssignment","src":"10831:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10843:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10854:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10839:3:11"},"nodeType":"YulFunctionCall","src":"10839:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10831:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c2bcce16aecbe05703a000c32d6c789923155bc4edb44224894bec7cb236557f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10617:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10631:4:11","type":""}],"src":"10466:398:11"},{"body":{"nodeType":"YulBlock","src":"11008:150:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11018:27:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11038:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11032:5:11"},"nodeType":"YulFunctionCall","src":"11032:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11022:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11093:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11101:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11089:3:11"},"nodeType":"YulFunctionCall","src":"11089:17:11"},{"name":"pos","nodeType":"YulIdentifier","src":"11108:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"11113:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11054:34:11"},"nodeType":"YulFunctionCall","src":"11054:66:11"},"nodeType":"YulExpressionStatement","src":"11054:66:11"},{"nodeType":"YulAssignment","src":"11129:23:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11140:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"11145:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11136:3:11"},"nodeType":"YulFunctionCall","src":"11136:16:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11129:3:11"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10984:3:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10989:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11000:3:11","type":""}],"src":"10869:289:11"},{"body":{"nodeType":"YulBlock","src":"11337:167:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11354:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11365:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11347:6:11"},"nodeType":"YulFunctionCall","src":"11347:21:11"},"nodeType":"YulExpressionStatement","src":"11347:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11388:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11399:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11384:3:11"},"nodeType":"YulFunctionCall","src":"11384:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"11404:2:11","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11377:6:11"},"nodeType":"YulFunctionCall","src":"11377:30:11"},"nodeType":"YulExpressionStatement","src":"11377:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11427:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11438:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11423:3:11"},"nodeType":"YulFunctionCall","src":"11423:18:11"},{"hexValue":"50617469656e74206e6f7420666f756e64","kind":"string","nodeType":"YulLiteral","src":"11443:19:11","type":"","value":"Patient not found"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11416:6:11"},"nodeType":"YulFunctionCall","src":"11416:47:11"},"nodeType":"YulExpressionStatement","src":"11416:47:11"},{"nodeType":"YulAssignment","src":"11472:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11484:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11495:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11480:3:11"},"nodeType":"YulFunctionCall","src":"11480:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11472:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_79ce62d7220f73dea0dc2c9bb95d6143420225d311d28b04d8fae31c4aacf571__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11314:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11328:4:11","type":""}],"src":"11163:341:11"},{"body":{"nodeType":"YulBlock","src":"11683:172:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11700:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11711:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11693:6:11"},"nodeType":"YulFunctionCall","src":"11693:21:11"},"nodeType":"YulExpressionStatement","src":"11693:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11734:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11745:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11730:3:11"},"nodeType":"YulFunctionCall","src":"11730:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"11750:2:11","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11723:6:11"},"nodeType":"YulFunctionCall","src":"11723:30:11"},"nodeType":"YulExpressionStatement","src":"11723:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11773:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11784:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11769:3:11"},"nodeType":"YulFunctionCall","src":"11769:18:11"},{"hexValue":"496e76616c696420646f63746f722061646472657373","kind":"string","nodeType":"YulLiteral","src":"11789:24:11","type":"","value":"Invalid doctor address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11762:6:11"},"nodeType":"YulFunctionCall","src":"11762:52:11"},"nodeType":"YulExpressionStatement","src":"11762:52:11"},{"nodeType":"YulAssignment","src":"11823:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11835:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11846:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11831:3:11"},"nodeType":"YulFunctionCall","src":"11831:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11823:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_28e1e9afd51a158c04b777f0ff1418890681aa2dcfc4468bbbe06c954ae8f930__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11660:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11674:4:11","type":""}],"src":"11509:346:11"},{"body":{"nodeType":"YulBlock","src":"12034:175:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12051:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12062:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12044:6:11"},"nodeType":"YulFunctionCall","src":"12044:21:11"},"nodeType":"YulExpressionStatement","src":"12044:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12085:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12096:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12081:3:11"},"nodeType":"YulFunctionCall","src":"12081:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"12101:2:11","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12074:6:11"},"nodeType":"YulFunctionCall","src":"12074:30:11"},"nodeType":"YulExpressionStatement","src":"12074:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12124:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12135:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12120:3:11"},"nodeType":"YulFunctionCall","src":"12120:18:11"},{"hexValue":"446f63746f7220616c726561647920617574686f72697a6564","kind":"string","nodeType":"YulLiteral","src":"12140:27:11","type":"","value":"Doctor already authorized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12113:6:11"},"nodeType":"YulFunctionCall","src":"12113:55:11"},"nodeType":"YulExpressionStatement","src":"12113:55:11"},{"nodeType":"YulAssignment","src":"12177:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12189:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12200:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12185:3:11"},"nodeType":"YulFunctionCall","src":"12185:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12177:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_bf5e6d02bf80a51bf9006bf64f7534c5650a0026feea9a9f345bd4684adae9c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12011:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12025:4:11","type":""}],"src":"11860:349:11"},{"body":{"nodeType":"YulBlock","src":"12270:65:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12287:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"12290:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12280:6:11"},"nodeType":"YulFunctionCall","src":"12280:14:11"},"nodeType":"YulExpressionStatement","src":"12280:14:11"},{"nodeType":"YulAssignment","src":"12303:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12321:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12324:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"12311:9:11"},"nodeType":"YulFunctionCall","src":"12311:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12303:4:11"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12253:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12261:4:11","type":""}],"src":"12214:121:11"},{"body":{"nodeType":"YulBlock","src":"12421:464:11","statements":[{"body":{"nodeType":"YulBlock","src":"12454:425:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12468:11:11","value":{"kind":"number","nodeType":"YulLiteral","src":"12478:1:11","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12472:2:11","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"12499:2:11"},{"name":"array","nodeType":"YulIdentifier","src":"12503:5:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12492:6:11"},"nodeType":"YulFunctionCall","src":"12492:17:11"},"nodeType":"YulExpressionStatement","src":"12492:17:11"},{"nodeType":"YulVariableDeclaration","src":"12522:31:11","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"12544:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"12548:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"12534:9:11"},"nodeType":"YulFunctionCall","src":"12534:19:11"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"12526:4:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12566:57:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12589:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12599:1:11","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"12606:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"12618:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12602:3:11"},"nodeType":"YulFunctionCall","src":"12602:19:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12595:3:11"},"nodeType":"YulFunctionCall","src":"12595:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12585:3:11"},"nodeType":"YulFunctionCall","src":"12585:38:11"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"12570:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"12660:23:11","statements":[{"nodeType":"YulAssignment","src":"12662:19:11","value":{"name":"data","nodeType":"YulIdentifier","src":"12677:4:11"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"12662:11:11"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"12642:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"12654:4:11","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12639:2:11"},"nodeType":"YulFunctionCall","src":"12639:20:11"},"nodeType":"YulIf","src":"12636:47:11"},{"nodeType":"YulVariableDeclaration","src":"12696:41:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12710:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12720:1:11","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"12727:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12732:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12723:3:11"},"nodeType":"YulFunctionCall","src":"12723:12:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12716:3:11"},"nodeType":"YulFunctionCall","src":"12716:20:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12706:3:11"},"nodeType":"YulFunctionCall","src":"12706:31:11"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"12700:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12750:24:11","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"12763:11:11"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"12754:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"12848:21:11","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"12857:5:11"},{"name":"_1","nodeType":"YulIdentifier","src":"12864:2:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12850:6:11"},"nodeType":"YulFunctionCall","src":"12850:17:11"},"nodeType":"YulExpressionStatement","src":"12850:17:11"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"12798:5:11"},{"name":"_2","nodeType":"YulIdentifier","src":"12805:2:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12795:2:11"},"nodeType":"YulFunctionCall","src":"12795:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12809:26:11","statements":[{"nodeType":"YulAssignment","src":"12811:22:11","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"12824:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"12831:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12820:3:11"},"nodeType":"YulFunctionCall","src":"12820:13:11"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"12811:5:11"}]}]},"pre":{"nodeType":"YulBlock","src":"12791:3:11","statements":[]},"src":"12787:82:11"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"12437:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12442:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12434:2:11"},"nodeType":"YulFunctionCall","src":"12434:11:11"},"nodeType":"YulIf","src":"12431:448:11"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"12393:5:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"12400:3:11","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"12405:10:11","type":""}],"src":"12340:545:11"},{"body":{"nodeType":"YulBlock","src":"12975:81:11","statements":[{"nodeType":"YulAssignment","src":"12985:65:11","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13000:4:11"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13018:1:11","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"13021:3:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13014:3:11"},"nodeType":"YulFunctionCall","src":"13014:11:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13031:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13027:3:11"},"nodeType":"YulFunctionCall","src":"13027:6:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13010:3:11"},"nodeType":"YulFunctionCall","src":"13010:24:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13006:3:11"},"nodeType":"YulFunctionCall","src":"13006:29:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12996:3:11"},"nodeType":"YulFunctionCall","src":"12996:40:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13042:1:11","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"13045:3:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13038:3:11"},"nodeType":"YulFunctionCall","src":"13038:11:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"12993:2:11"},"nodeType":"YulFunctionCall","src":"12993:57:11"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"12985:4:11"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12952:4:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"12958:3:11","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"12966:4:11","type":""}],"src":"12890:166:11"},{"body":{"nodeType":"YulBlock","src":"13157:1256:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13167:24:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13187:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13181:5:11"},"nodeType":"YulFunctionCall","src":"13181:10:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"13171:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"13234:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13236:16:11"},"nodeType":"YulFunctionCall","src":"13236:18:11"},"nodeType":"YulExpressionStatement","src":"13236:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13206:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13214:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13203:2:11"},"nodeType":"YulFunctionCall","src":"13203:30:11"},"nodeType":"YulIf","src":"13200:56:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13309:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13347:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"13341:5:11"},"nodeType":"YulFunctionCall","src":"13341:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"13315:25:11"},"nodeType":"YulFunctionCall","src":"13315:38:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"13355:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"13265:43:11"},"nodeType":"YulFunctionCall","src":"13265:97:11"},"nodeType":"YulExpressionStatement","src":"13265:97:11"},{"nodeType":"YulVariableDeclaration","src":"13371:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"13388:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"13375:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13398:23:11","value":{"kind":"number","nodeType":"YulLiteral","src":"13417:4:11","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"13402:11:11","type":""}]},{"nodeType":"YulAssignment","src":"13430:24:11","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"13443:11:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"13430:9:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"13500:656:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13514:35:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13533:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13545:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13541:3:11"},"nodeType":"YulFunctionCall","src":"13541:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13529:3:11"},"nodeType":"YulFunctionCall","src":"13529:20:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"13518:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13562:49:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13606:4:11"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"13576:29:11"},"nodeType":"YulFunctionCall","src":"13576:35:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"13566:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13624:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"13633:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13628:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"13711:172:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13736:6:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13754:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13759:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13750:3:11"},"nodeType":"YulFunctionCall","src":"13750:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13744:5:11"},"nodeType":"YulFunctionCall","src":"13744:26:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13729:6:11"},"nodeType":"YulFunctionCall","src":"13729:42:11"},"nodeType":"YulExpressionStatement","src":"13729:42:11"},{"nodeType":"YulAssignment","src":"13788:24:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13802:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13810:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13798:3:11"},"nodeType":"YulFunctionCall","src":"13798:14:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13788:6:11"}]},{"nodeType":"YulAssignment","src":"13829:40:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"13846:9:11"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"13857:11:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13842:3:11"},"nodeType":"YulFunctionCall","src":"13842:27:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"13829:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13658:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"13661:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13655:2:11"},"nodeType":"YulFunctionCall","src":"13655:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13670:28:11","statements":[{"nodeType":"YulAssignment","src":"13672:24:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13681:1:11"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"13684:11:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13677:3:11"},"nodeType":"YulFunctionCall","src":"13677:19:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13672:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"13651:3:11","statements":[]},"src":"13647:236:11"},{"body":{"nodeType":"YulBlock","src":"13931:166:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13949:43:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13976:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13981:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13972:3:11"},"nodeType":"YulFunctionCall","src":"13972:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13966:5:11"},"nodeType":"YulFunctionCall","src":"13966:26:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"13953:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14016:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"14028:9:11"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14055:1:11","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"14058:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14051:3:11"},"nodeType":"YulFunctionCall","src":"14051:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"14067:3:11","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14047:3:11"},"nodeType":"YulFunctionCall","src":"14047:24:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14077:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14073:3:11"},"nodeType":"YulFunctionCall","src":"14073:6:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14043:3:11"},"nodeType":"YulFunctionCall","src":"14043:37:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14039:3:11"},"nodeType":"YulFunctionCall","src":"14039:42:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14024:3:11"},"nodeType":"YulFunctionCall","src":"14024:58:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14009:6:11"},"nodeType":"YulFunctionCall","src":"14009:74:11"},"nodeType":"YulExpressionStatement","src":"14009:74:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"13902:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"13911:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13899:2:11"},"nodeType":"YulFunctionCall","src":"13899:19:11"},"nodeType":"YulIf","src":"13896:201:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14117:4:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14131:1:11","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"14134:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14127:3:11"},"nodeType":"YulFunctionCall","src":"14127:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"14143:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14123:3:11"},"nodeType":"YulFunctionCall","src":"14123:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14110:6:11"},"nodeType":"YulFunctionCall","src":"14110:36:11"},"nodeType":"YulExpressionStatement","src":"14110:36:11"}]},"nodeType":"YulCase","src":"13493:663:11","value":{"kind":"number","nodeType":"YulLiteral","src":"13498:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"14173:234:11","statements":[{"nodeType":"YulVariableDeclaration","src":"14187:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"14200:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"14191:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"14236:67:11","statements":[{"nodeType":"YulAssignment","src":"14254:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14273:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"14278:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14269:3:11"},"nodeType":"YulFunctionCall","src":"14269:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14263:5:11"},"nodeType":"YulFunctionCall","src":"14263:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14254:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"14217:6:11"},"nodeType":"YulIf","src":"14214:89:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14323:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14382:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"14389:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"14329:52:11"},"nodeType":"YulFunctionCall","src":"14329:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14316:6:11"},"nodeType":"YulFunctionCall","src":"14316:81:11"},"nodeType":"YulExpressionStatement","src":"14316:81:11"}]},"nodeType":"YulCase","src":"14165:242:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13473:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13470:2:11"},"nodeType":"YulFunctionCall","src":"13470:14:11"},"nodeType":"YulSwitch","src":"13463:944:11"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"13142:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"13148:3:11","type":""}],"src":"13061:1352:11"},{"body":{"nodeType":"YulBlock","src":"14450:95:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14467:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14474:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14479:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14470:3:11"},"nodeType":"YulFunctionCall","src":"14470:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14460:6:11"},"nodeType":"YulFunctionCall","src":"14460:31:11"},"nodeType":"YulExpressionStatement","src":"14460:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14507:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14510:4:11","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14500:6:11"},"nodeType":"YulFunctionCall","src":"14500:15:11"},"nodeType":"YulExpressionStatement","src":"14500:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14531:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14534:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14524:6:11"},"nodeType":"YulFunctionCall","src":"14524:15:11"},"nodeType":"YulExpressionStatement","src":"14524:15:11"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"14418:127:11"},{"body":{"nodeType":"YulBlock","src":"14582:95:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14599:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14606:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14611:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14602:3:11"},"nodeType":"YulFunctionCall","src":"14602:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14592:6:11"},"nodeType":"YulFunctionCall","src":"14592:31:11"},"nodeType":"YulExpressionStatement","src":"14592:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14639:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14642:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14632:6:11"},"nodeType":"YulFunctionCall","src":"14632:15:11"},"nodeType":"YulExpressionStatement","src":"14632:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14663:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14666:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14656:6:11"},"nodeType":"YulFunctionCall","src":"14656:15:11"},"nodeType":"YulExpressionStatement","src":"14656:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14550:127:11"},{"body":{"nodeType":"YulBlock","src":"14729:88:11","statements":[{"body":{"nodeType":"YulBlock","src":"14760:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14762:16:11"},"nodeType":"YulFunctionCall","src":"14762:18:11"},"nodeType":"YulExpressionStatement","src":"14762:18:11"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14745:5:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14756:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14752:3:11"},"nodeType":"YulFunctionCall","src":"14752:6:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14742:2:11"},"nodeType":"YulFunctionCall","src":"14742:17:11"},"nodeType":"YulIf","src":"14739:43:11"},{"nodeType":"YulAssignment","src":"14791:20:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14802:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"14809:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14798:3:11"},"nodeType":"YulFunctionCall","src":"14798:13:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14791:3:11"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14711:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"14721:3:11","type":""}],"src":"14682:135:11"},{"body":{"nodeType":"YulBlock","src":"14996:237:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15013:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15024:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15006:6:11"},"nodeType":"YulFunctionCall","src":"15006:21:11"},"nodeType":"YulExpressionStatement","src":"15006:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15047:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15058:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15043:3:11"},"nodeType":"YulFunctionCall","src":"15043:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"15063:2:11","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15036:6:11"},"nodeType":"YulFunctionCall","src":"15036:30:11"},"nodeType":"YulExpressionStatement","src":"15036:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15086:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15097:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15082:3:11"},"nodeType":"YulFunctionCall","src":"15082:18:11"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"15102:34:11","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15075:6:11"},"nodeType":"YulFunctionCall","src":"15075:62:11"},"nodeType":"YulExpressionStatement","src":"15075:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15157:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15168:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15153:3:11"},"nodeType":"YulFunctionCall","src":"15153:18:11"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"15173:17:11","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15146:6:11"},"nodeType":"YulFunctionCall","src":"15146:45:11"},"nodeType":"YulExpressionStatement","src":"15146:45:11"},{"nodeType":"YulAssignment","src":"15200:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15212:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15223:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15208:3:11"},"nodeType":"YulFunctionCall","src":"15208:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15200:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14973:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14987:4:11","type":""}],"src":"14822:411:11"},{"body":{"nodeType":"YulBlock","src":"15412:177:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15429:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15440:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15422:6:11"},"nodeType":"YulFunctionCall","src":"15422:21:11"},"nodeType":"YulExpressionStatement","src":"15422:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15463:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15474:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15459:3:11"},"nodeType":"YulFunctionCall","src":"15459:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"15479:2:11","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15452:6:11"},"nodeType":"YulFunctionCall","src":"15452:30:11"},"nodeType":"YulExpressionStatement","src":"15452:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15502:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15513:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15498:3:11"},"nodeType":"YulFunctionCall","src":"15498:18:11"},{"hexValue":"5265636f726420686173682063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"15518:29:11","type":"","value":"Record hash cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15491:6:11"},"nodeType":"YulFunctionCall","src":"15491:57:11"},"nodeType":"YulExpressionStatement","src":"15491:57:11"},{"nodeType":"YulAssignment","src":"15557:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15569:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15580:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15565:3:11"},"nodeType":"YulFunctionCall","src":"15565:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15557:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_07c1c635d65e6af8656a934f42e338eb58f1c610b9d5735313ff1b71d7e23625__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15389:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15403:4:11","type":""}],"src":"15238:351:11"},{"body":{"nodeType":"YulBlock","src":"15768:179:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15785:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15796:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15778:6:11"},"nodeType":"YulFunctionCall","src":"15778:21:11"},"nodeType":"YulExpressionStatement","src":"15778:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15819:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15830:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15815:3:11"},"nodeType":"YulFunctionCall","src":"15815:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"15835:2:11","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15808:6:11"},"nodeType":"YulFunctionCall","src":"15808:30:11"},"nodeType":"YulExpressionStatement","src":"15808:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15858:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15869:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15854:3:11"},"nodeType":"YulFunctionCall","src":"15854:18:11"},{"hexValue":"4e6f7420617574686f72697a656420746f20616464207265636f726473","kind":"string","nodeType":"YulLiteral","src":"15874:31:11","type":"","value":"Not authorized to add records"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15847:6:11"},"nodeType":"YulFunctionCall","src":"15847:59:11"},"nodeType":"YulExpressionStatement","src":"15847:59:11"},{"nodeType":"YulAssignment","src":"15915:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15927:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15938:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15923:3:11"},"nodeType":"YulFunctionCall","src":"15923:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15915:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_7880436d3be123a72f6eaf76b42ade9cc7ddea4b1232a581fa6f1bb5299c8057__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15745:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15759:4:11","type":""}],"src":"15594:353:11"},{"body":{"nodeType":"YulBlock","src":"16126:171:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16143:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16154:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16136:6:11"},"nodeType":"YulFunctionCall","src":"16136:21:11"},"nodeType":"YulExpressionStatement","src":"16136:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16177:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16188:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16173:3:11"},"nodeType":"YulFunctionCall","src":"16173:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"16193:2:11","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16166:6:11"},"nodeType":"YulFunctionCall","src":"16166:30:11"},"nodeType":"YulExpressionStatement","src":"16166:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16216:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16227:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16212:3:11"},"nodeType":"YulFunctionCall","src":"16212:18:11"},{"hexValue":"5265636f726420616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"16232:23:11","type":"","value":"Record already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16205:6:11"},"nodeType":"YulFunctionCall","src":"16205:51:11"},"nodeType":"YulExpressionStatement","src":"16205:51:11"},{"nodeType":"YulAssignment","src":"16265:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16277:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16288:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16273:3:11"},"nodeType":"YulFunctionCall","src":"16273:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16265:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16103:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16117:4:11","type":""}],"src":"15952:345:11"},{"body":{"nodeType":"YulBlock","src":"16451:142:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16468:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16479:2:11","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16461:6:11"},"nodeType":"YulFunctionCall","src":"16461:21:11"},"nodeType":"YulExpressionStatement","src":"16461:21:11"},{"nodeType":"YulAssignment","src":"16491:53:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16517:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16529:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16540:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16525:3:11"},"nodeType":"YulFunctionCall","src":"16525:18:11"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"16499:17:11"},"nodeType":"YulFunctionCall","src":"16499:45:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16491:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16564:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16575:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16560:3:11"},"nodeType":"YulFunctionCall","src":"16560:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"16580:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16553:6:11"},"nodeType":"YulFunctionCall","src":"16553:34:11"},"nodeType":"YulExpressionStatement","src":"16553:34:11"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16412:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16423:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16431:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16442:4:11","type":""}],"src":"16302:291:11"},{"body":{"nodeType":"YulBlock","src":"16772:171:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16789:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16800:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16782:6:11"},"nodeType":"YulFunctionCall","src":"16782:21:11"},"nodeType":"YulExpressionStatement","src":"16782:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16823:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16834:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16819:3:11"},"nodeType":"YulFunctionCall","src":"16819:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"16839:2:11","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16812:6:11"},"nodeType":"YulFunctionCall","src":"16812:30:11"},"nodeType":"YulExpressionStatement","src":"16812:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16862:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16873:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16858:3:11"},"nodeType":"YulFunctionCall","src":"16858:18:11"},{"hexValue":"446f63746f72206e6f7420617574686f72697a6564","kind":"string","nodeType":"YulLiteral","src":"16878:23:11","type":"","value":"Doctor not authorized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16851:6:11"},"nodeType":"YulFunctionCall","src":"16851:51:11"},"nodeType":"YulExpressionStatement","src":"16851:51:11"},{"nodeType":"YulAssignment","src":"16911:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16923:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16934:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16919:3:11"},"nodeType":"YulFunctionCall","src":"16919:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16911:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_9aaa89b137f2d33ca5a89427cbf46863211fd41651327985d96f133d4867fd05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16749:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16763:4:11","type":""}],"src":"16598:345:11"},{"body":{"nodeType":"YulBlock","src":"16997:79:11","statements":[{"nodeType":"YulAssignment","src":"17007:17:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17019:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"17022:1:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17015:3:11"},"nodeType":"YulFunctionCall","src":"17015:9:11"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"17007:4:11"}]},{"body":{"nodeType":"YulBlock","src":"17048:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17050:16:11"},"nodeType":"YulFunctionCall","src":"17050:18:11"},"nodeType":"YulExpressionStatement","src":"17050:18:11"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"17039:4:11"},{"name":"x","nodeType":"YulIdentifier","src":"17045:1:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17036:2:11"},"nodeType":"YulFunctionCall","src":"17036:11:11"},"nodeType":"YulIf","src":"17033:37:11"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16979:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"16982:1:11","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"16988:4:11","type":""}],"src":"16948:128:11"},{"body":{"nodeType":"YulBlock","src":"17113:95:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17130:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17137:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"17142:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17133:3:11"},"nodeType":"YulFunctionCall","src":"17133:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17123:6:11"},"nodeType":"YulFunctionCall","src":"17123:31:11"},"nodeType":"YulExpressionStatement","src":"17123:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17170:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17173:4:11","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17163:6:11"},"nodeType":"YulFunctionCall","src":"17163:15:11"},"nodeType":"YulExpressionStatement","src":"17163:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17197:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17187:6:11"},"nodeType":"YulFunctionCall","src":"17187:15:11"},"nodeType":"YulExpressionStatement","src":"17187:15:11"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"17081:127:11"},{"body":{"nodeType":"YulBlock","src":"17351:706:11","statements":[{"nodeType":"YulVariableDeclaration","src":"17361:12:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17372:1:11","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"17365:3:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17382:30:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17405:6:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"17399:5:11"},"nodeType":"YulFunctionCall","src":"17399:13:11"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"17386:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17421:50:11","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"17461:9:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"17435:25:11"},"nodeType":"YulFunctionCall","src":"17435:36:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17425:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17480:11:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17490:1:11","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"17484:2:11","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"17541:126:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17562:3:11"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"17571:9:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17586:3:11","type":"","value":"255"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17582:3:11"},"nodeType":"YulFunctionCall","src":"17582:8:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17567:3:11"},"nodeType":"YulFunctionCall","src":"17567:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17555:6:11"},"nodeType":"YulFunctionCall","src":"17555:37:11"},"nodeType":"YulExpressionStatement","src":"17555:37:11"},{"nodeType":"YulAssignment","src":"17605:52:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17616:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17625:6:11"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17647:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17640:6:11"},"nodeType":"YulFunctionCall","src":"17640:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17633:6:11"},"nodeType":"YulFunctionCall","src":"17633:22:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17621:3:11"},"nodeType":"YulFunctionCall","src":"17621:35:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17612:3:11"},"nodeType":"YulFunctionCall","src":"17612:45:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17605:3:11"}]}]},"nodeType":"YulCase","src":"17534:133:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17539:1:11","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"17683:349:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17704:1:11","type":"","value":"0"},{"name":"value0","nodeType":"YulIdentifier","src":"17707:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17697:6:11"},"nodeType":"YulFunctionCall","src":"17697:17:11"},"nodeType":"YulExpressionStatement","src":"17697:17:11"},{"nodeType":"YulVariableDeclaration","src":"17727:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17737:4:11","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"17731:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17754:31:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17779:1:11","type":"","value":"0"},{"name":"_2","nodeType":"YulIdentifier","src":"17782:2:11"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17769:9:11"},"nodeType":"YulFunctionCall","src":"17769:16:11"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"17758:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17798:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17807:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17802:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"17875:111:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17904:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"17909:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17900:3:11"},"nodeType":"YulFunctionCall","src":"17900:11:11"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"17919:7:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"17913:5:11"},"nodeType":"YulFunctionCall","src":"17913:14:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17893:6:11"},"nodeType":"YulFunctionCall","src":"17893:35:11"},"nodeType":"YulExpressionStatement","src":"17893:35:11"},{"nodeType":"YulAssignment","src":"17945:27:11","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"17960:7:11"},{"name":"_1","nodeType":"YulIdentifier","src":"17969:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17956:3:11"},"nodeType":"YulFunctionCall","src":"17956:16:11"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"17945:7:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17832:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"17835:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17829:2:11"},"nodeType":"YulFunctionCall","src":"17829:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17843:19:11","statements":[{"nodeType":"YulAssignment","src":"17845:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17854:1:11"},{"name":"_2","nodeType":"YulIdentifier","src":"17857:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17850:3:11"},"nodeType":"YulFunctionCall","src":"17850:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17845:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"17825:3:11","statements":[]},"src":"17821:165:11"},{"nodeType":"YulAssignment","src":"17999:23:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18010:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"18015:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18006:3:11"},"nodeType":"YulFunctionCall","src":"18006:16:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17999:3:11"}]}]},"nodeType":"YulCase","src":"17676:356:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17681:1:11","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"17511:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"17522:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17507:3:11"},"nodeType":"YulFunctionCall","src":"17507:18:11"},"nodeType":"YulSwitch","src":"17500:532:11"},{"nodeType":"YulAssignment","src":"18041:10:11","value":{"name":"ret","nodeType":"YulIdentifier","src":"18048:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18041:3:11"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17327:3:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17332:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17343:3:11","type":""}],"src":"17213:844:11"},{"body":{"nodeType":"YulBlock","src":"18159:1338:11","statements":[{"body":{"nodeType":"YulBlock","src":"18186:9:11","statements":[{"nodeType":"YulLeave","src":"18188:5:11"}]},"condition":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18175:4:11"},{"name":"src","nodeType":"YulIdentifier","src":"18181:3:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18172:2:11"},"nodeType":"YulFunctionCall","src":"18172:13:11"},"nodeType":"YulIf","src":"18169:26:11"},{"nodeType":"YulVariableDeclaration","src":"18204:51:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18250:3:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18244:5:11"},"nodeType":"YulFunctionCall","src":"18244:10:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"18218:25:11"},"nodeType":"YulFunctionCall","src":"18218:37:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"18208:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"18298:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18300:16:11"},"nodeType":"YulFunctionCall","src":"18300:18:11"},"nodeType":"YulExpressionStatement","src":"18300:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"18270:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18278:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18267:2:11"},"nodeType":"YulFunctionCall","src":"18267:30:11"},"nodeType":"YulIf","src":"18264:56:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18373:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18411:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18405:5:11"},"nodeType":"YulFunctionCall","src":"18405:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"18379:25:11"},"nodeType":"YulFunctionCall","src":"18379:38:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"18419:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"18329:43:11"},"nodeType":"YulFunctionCall","src":"18329:97:11"},"nodeType":"YulExpressionStatement","src":"18329:97:11"},{"nodeType":"YulVariableDeclaration","src":"18435:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"18452:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"18439:9:11","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"18499:741:11","statements":[{"nodeType":"YulVariableDeclaration","src":"18513:35:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"18532:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18544:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18540:3:11"},"nodeType":"YulFunctionCall","src":"18540:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18528:3:11"},"nodeType":"YulFunctionCall","src":"18528:20:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"18517:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18561:47:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18604:3:11"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"18574:29:11"},"nodeType":"YulFunctionCall","src":"18574:34:11"},"variables":[{"name":"src_1","nodeType":"YulTypedName","src":"18565:5:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18621:49:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18665:4:11"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"18635:29:11"},"nodeType":"YulFunctionCall","src":"18635:35:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"18625:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18683:18:11","value":{"name":"srcOffset","nodeType":"YulIdentifier","src":"18692:9:11"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18687:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"18771:194:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18796:6:11"},{"arguments":[{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"18814:5:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"18821:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18810:3:11"},"nodeType":"YulFunctionCall","src":"18810:21:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18804:5:11"},"nodeType":"YulFunctionCall","src":"18804:28:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18789:6:11"},"nodeType":"YulFunctionCall","src":"18789:44:11"},"nodeType":"YulExpressionStatement","src":"18789:44:11"},{"nodeType":"YulVariableDeclaration","src":"18850:11:11","value":{"kind":"number","nodeType":"YulLiteral","src":"18860:1:11","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18854:2:11","type":""}]},{"nodeType":"YulAssignment","src":"18878:25:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18892:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"18900:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18888:3:11"},"nodeType":"YulFunctionCall","src":"18888:15:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18878:6:11"}]},{"nodeType":"YulAssignment","src":"18920:31:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"18937:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"18948:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18933:3:11"},"nodeType":"YulFunctionCall","src":"18933:18:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"18920:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18725:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"18728:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18722:2:11"},"nodeType":"YulFunctionCall","src":"18722:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18737:21:11","statements":[{"nodeType":"YulAssignment","src":"18739:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18748:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"18751:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18744:3:11"},"nodeType":"YulFunctionCall","src":"18744:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18739:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"18718:3:11","statements":[]},"src":"18714:251:11"},{"body":{"nodeType":"YulBlock","src":"19013:168:11","statements":[{"nodeType":"YulVariableDeclaration","src":"19031:45:11","value":{"arguments":[{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"19058:5:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19065:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19054:3:11"},"nodeType":"YulFunctionCall","src":"19054:21:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"19048:5:11"},"nodeType":"YulFunctionCall","src":"19048:28:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"19035:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19100:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"19112:9:11"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19139:1:11","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"19142:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19135:3:11"},"nodeType":"YulFunctionCall","src":"19135:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"19151:3:11","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19131:3:11"},"nodeType":"YulFunctionCall","src":"19131:24:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19161:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19157:3:11"},"nodeType":"YulFunctionCall","src":"19157:6:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19127:3:11"},"nodeType":"YulFunctionCall","src":"19127:37:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19123:3:11"},"nodeType":"YulFunctionCall","src":"19123:42:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19108:3:11"},"nodeType":"YulFunctionCall","src":"19108:58:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19093:6:11"},"nodeType":"YulFunctionCall","src":"19093:74:11"},"nodeType":"YulExpressionStatement","src":"19093:74:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"18984:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"18993:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18981:2:11"},"nodeType":"YulFunctionCall","src":"18981:19:11"},"nodeType":"YulIf","src":"18978:203:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19201:4:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19215:1:11","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"19218:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19211:3:11"},"nodeType":"YulFunctionCall","src":"19211:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"19227:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19207:3:11"},"nodeType":"YulFunctionCall","src":"19207:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19194:6:11"},"nodeType":"YulFunctionCall","src":"19194:36:11"},"nodeType":"YulExpressionStatement","src":"19194:36:11"}]},"nodeType":"YulCase","src":"18492:748:11","value":{"kind":"number","nodeType":"YulLiteral","src":"18497:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"19257:234:11","statements":[{"nodeType":"YulVariableDeclaration","src":"19271:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"19284:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"19275:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"19320:67:11","statements":[{"nodeType":"YulAssignment","src":"19338:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19357:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19362:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19353:3:11"},"nodeType":"YulFunctionCall","src":"19353:19:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"19347:5:11"},"nodeType":"YulFunctionCall","src":"19347:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19338:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"19301:6:11"},"nodeType":"YulIf","src":"19298:89:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19407:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19466:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"19473:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"19413:52:11"},"nodeType":"YulFunctionCall","src":"19413:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19400:6:11"},"nodeType":"YulFunctionCall","src":"19400:81:11"},"nodeType":"YulExpressionStatement","src":"19400:81:11"}]},"nodeType":"YulCase","src":"19249:242:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"18472:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18480:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18469:2:11"},"nodeType":"YulFunctionCall","src":"18469:14:11"},"nodeType":"YulSwitch","src":"18462:1029:11"}]},"name":"copy_byte_array_to_storage_from_t_string_storage_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"18144:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"18150:3:11","type":""}],"src":"18062:1435:11"},{"body":{"nodeType":"YulBlock","src":"19676:180:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19693:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19704:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19686:6:11"},"nodeType":"YulFunctionCall","src":"19686:21:11"},"nodeType":"YulExpressionStatement","src":"19686:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19727:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19738:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19723:3:11"},"nodeType":"YulFunctionCall","src":"19723:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"19743:2:11","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19716:6:11"},"nodeType":"YulFunctionCall","src":"19716:30:11"},"nodeType":"YulExpressionStatement","src":"19716:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19766:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19777:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19762:3:11"},"nodeType":"YulFunctionCall","src":"19762:18:11"},{"hexValue":"4e6f7420617574686f72697a656420746f2076696577207265636f726473","kind":"string","nodeType":"YulLiteral","src":"19782:32:11","type":"","value":"Not authorized to view records"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19755:6:11"},"nodeType":"YulFunctionCall","src":"19755:60:11"},"nodeType":"YulExpressionStatement","src":"19755:60:11"},{"nodeType":"YulAssignment","src":"19824:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19836:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19847:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19832:3:11"},"nodeType":"YulFunctionCall","src":"19832:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19824:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_ab042a939c7a6283c5aad9fea927fc5aa866f7f3bff61adb7e7b2d840ffb37db__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19653:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19667:4:11","type":""}],"src":"19502:354:11"},{"body":{"nodeType":"YulBlock","src":"20035:228:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20052:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20063:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20045:6:11"},"nodeType":"YulFunctionCall","src":"20045:21:11"},"nodeType":"YulExpressionStatement","src":"20045:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20086:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20097:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20082:3:11"},"nodeType":"YulFunctionCall","src":"20082:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"20102:2:11","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20075:6:11"},"nodeType":"YulFunctionCall","src":"20075:30:11"},"nodeType":"YulExpressionStatement","src":"20075:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20125:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20136:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20121:3:11"},"nodeType":"YulFunctionCall","src":"20121:18:11"},{"hexValue":"4e6f7420617574686f72697a656420746f207669657720646f63746f72207061","kind":"string","nodeType":"YulLiteral","src":"20141:34:11","type":"","value":"Not authorized to view doctor pa"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20114:6:11"},"nodeType":"YulFunctionCall","src":"20114:62:11"},"nodeType":"YulExpressionStatement","src":"20114:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20196:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20207:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20192:3:11"},"nodeType":"YulFunctionCall","src":"20192:18:11"},{"hexValue":"7469656e7473","kind":"string","nodeType":"YulLiteral","src":"20212:8:11","type":"","value":"tients"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20185:6:11"},"nodeType":"YulFunctionCall","src":"20185:36:11"},"nodeType":"YulExpressionStatement","src":"20185:36:11"},{"nodeType":"YulAssignment","src":"20230:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20242:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20253:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20238:3:11"},"nodeType":"YulFunctionCall","src":"20238:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20230:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_6646efd2195917deefc807954554698f53c47e3c5567aa1b197b96c1ad0240cf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20012:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20026:4:11","type":""}],"src":"19861:402:11"},{"body":{"nodeType":"YulBlock","src":"20442:176:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20459:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20470:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20452:6:11"},"nodeType":"YulFunctionCall","src":"20452:21:11"},"nodeType":"YulExpressionStatement","src":"20452:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20493:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20504:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20489:3:11"},"nodeType":"YulFunctionCall","src":"20489:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"20509:2:11","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20482:6:11"},"nodeType":"YulFunctionCall","src":"20482:30:11"},"nodeType":"YulExpressionStatement","src":"20482:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20532:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20543:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20528:3:11"},"nodeType":"YulFunctionCall","src":"20528:18:11"},{"hexValue":"50617469656e742049442063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"20548:28:11","type":"","value":"Patient ID cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20521:6:11"},"nodeType":"YulFunctionCall","src":"20521:56:11"},"nodeType":"YulExpressionStatement","src":"20521:56:11"},{"nodeType":"YulAssignment","src":"20586:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20598:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20609:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20594:3:11"},"nodeType":"YulFunctionCall","src":"20594:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20586:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_28bdf382440fa4116bdda25bcfef0045a4b02ece70872c990eb37af47b6a5a6f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20419:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20433:4:11","type":""}],"src":"20268:350:11"},{"body":{"nodeType":"YulBlock","src":"20797:176:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20814:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20825:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20807:6:11"},"nodeType":"YulFunctionCall","src":"20807:21:11"},"nodeType":"YulExpressionStatement","src":"20807:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20848:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20859:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20844:3:11"},"nodeType":"YulFunctionCall","src":"20844:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"20864:2:11","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20837:6:11"},"nodeType":"YulFunctionCall","src":"20837:30:11"},"nodeType":"YulExpressionStatement","src":"20837:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20887:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20898:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20883:3:11"},"nodeType":"YulFunctionCall","src":"20883:18:11"},{"hexValue":"50617469656e7420616c72656164792072656769737465726564","kind":"string","nodeType":"YulLiteral","src":"20903:28:11","type":"","value":"Patient already registered"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20876:6:11"},"nodeType":"YulFunctionCall","src":"20876:56:11"},"nodeType":"YulExpressionStatement","src":"20876:56:11"},{"nodeType":"YulAssignment","src":"20941:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20953:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20964:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20949:3:11"},"nodeType":"YulFunctionCall","src":"20949:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20941:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_39964dd4ab745112952693f060791e679669e0677a04eb4aa71bca4732419ad0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20774:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20788:4:11","type":""}],"src":"20623:350:11"},{"body":{"nodeType":"YulBlock","src":"21107:119:11","statements":[{"nodeType":"YulAssignment","src":"21117:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21129:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21140:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21125:3:11"},"nodeType":"YulFunctionCall","src":"21125:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21117:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21159:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"21170:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21152:6:11"},"nodeType":"YulFunctionCall","src":"21152:25:11"},"nodeType":"YulExpressionStatement","src":"21152:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21197:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21208:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21193:3:11"},"nodeType":"YulFunctionCall","src":"21193:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"21213:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21186:6:11"},"nodeType":"YulFunctionCall","src":"21186:34:11"},"nodeType":"YulExpressionStatement","src":"21186:34:11"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21068:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21079:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21087:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21098:4:11","type":""}],"src":"20978:248:11"},{"body":{"nodeType":"YulBlock","src":"21405:166:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21422:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21433:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21415:6:11"},"nodeType":"YulFunctionCall","src":"21415:21:11"},"nodeType":"YulExpressionStatement","src":"21415:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21456:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21467:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21452:3:11"},"nodeType":"YulFunctionCall","src":"21452:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"21472:2:11","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21445:6:11"},"nodeType":"YulFunctionCall","src":"21445:30:11"},"nodeType":"YulExpressionStatement","src":"21445:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21495:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21506:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21491:3:11"},"nodeType":"YulFunctionCall","src":"21491:18:11"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"21511:18:11","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21484:6:11"},"nodeType":"YulFunctionCall","src":"21484:46:11"},"nodeType":"YulExpressionStatement","src":"21484:46:11"},{"nodeType":"YulAssignment","src":"21539:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21551:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21562:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21547:3:11"},"nodeType":"YulFunctionCall","src":"21547:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21539:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21382:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21396:4:11","type":""}],"src":"21231:340:11"},{"body":{"nodeType":"YulBlock","src":"21677:102:11","statements":[{"nodeType":"YulAssignment","src":"21687:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21699:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21710:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21695:3:11"},"nodeType":"YulFunctionCall","src":"21695:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21687:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21729:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21744:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21760:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"21765:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21756:3:11"},"nodeType":"YulFunctionCall","src":"21756:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"21769:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21752:3:11"},"nodeType":"YulFunctionCall","src":"21752:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21740:3:11"},"nodeType":"YulFunctionCall","src":"21740:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21722:6:11"},"nodeType":"YulFunctionCall","src":"21722:51:11"},"nodeType":"YulExpressionStatement","src":"21722:51:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21646:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21657:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21668:4:11","type":""}],"src":"21576:203:11"},{"body":{"nodeType":"YulBlock","src":"22173:423:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22190:3:11"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"22195:25:11","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22183:6:11"},"nodeType":"YulFunctionCall","src":"22183:38:11"},"nodeType":"YulExpressionStatement","src":"22183:38:11"},{"nodeType":"YulVariableDeclaration","src":"22230:27:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22250:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22244:5:11"},"nodeType":"YulFunctionCall","src":"22244:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22234:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22305:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"22313:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22301:3:11"},"nodeType":"YulFunctionCall","src":"22301:17:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22324:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"22329:2:11","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22320:3:11"},"nodeType":"YulFunctionCall","src":"22320:12:11"},{"name":"length","nodeType":"YulIdentifier","src":"22334:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"22266:34:11"},"nodeType":"YulFunctionCall","src":"22266:75:11"},"nodeType":"YulExpressionStatement","src":"22266:75:11"},{"nodeType":"YulVariableDeclaration","src":"22350:26:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22364:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"22369:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22360:3:11"},"nodeType":"YulFunctionCall","src":"22360:16:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22354:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22396:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"22400:2:11","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22392:3:11"},"nodeType":"YulFunctionCall","src":"22392:11:11"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"22405:19:11","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22385:6:11"},"nodeType":"YulFunctionCall","src":"22385:40:11"},"nodeType":"YulExpressionStatement","src":"22385:40:11"},{"nodeType":"YulVariableDeclaration","src":"22434:29:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22456:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22450:5:11"},"nodeType":"YulFunctionCall","src":"22450:13:11"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"22438:8:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22511:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"22519:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22507:3:11"},"nodeType":"YulFunctionCall","src":"22507:17:11"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22530:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"22534:2:11","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22526:3:11"},"nodeType":"YulFunctionCall","src":"22526:11:11"},{"name":"length_1","nodeType":"YulIdentifier","src":"22539:8:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"22472:34:11"},"nodeType":"YulFunctionCall","src":"22472:76:11"},"nodeType":"YulExpressionStatement","src":"22472:76:11"},{"nodeType":"YulAssignment","src":"22557:33:11","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22572:2:11"},{"name":"length_1","nodeType":"YulIdentifier","src":"22576:8:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22568:3:11"},"nodeType":"YulFunctionCall","src":"22568:17:11"},{"kind":"number","nodeType":"YulLiteral","src":"22587:2:11","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22564:3:11"},"nodeType":"YulFunctionCall","src":"22564:26:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22557:3:11"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22141:3:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22146:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22154:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22165:3:11","type":""}],"src":"21784:812:11"},{"body":{"nodeType":"YulBlock","src":"22775:170:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22792:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22803:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22785:6:11"},"nodeType":"YulFunctionCall","src":"22785:21:11"},"nodeType":"YulExpressionStatement","src":"22785:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22826:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22837:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22822:3:11"},"nodeType":"YulFunctionCall","src":"22822:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"22842:2:11","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22815:6:11"},"nodeType":"YulFunctionCall","src":"22815:30:11"},"nodeType":"YulExpressionStatement","src":"22815:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22865:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22876:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22861:3:11"},"nodeType":"YulFunctionCall","src":"22861:18:11"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"22881:22:11","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22854:6:11"},"nodeType":"YulFunctionCall","src":"22854:50:11"},"nodeType":"YulExpressionStatement","src":"22854:50:11"},{"nodeType":"YulAssignment","src":"22913:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22925:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22936:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22921:3:11"},"nodeType":"YulFunctionCall","src":"22921:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22913:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22752:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22766:4:11","type":""}],"src":"22601:344:11"},{"body":{"nodeType":"YulBlock","src":"23002:116:11","statements":[{"nodeType":"YulAssignment","src":"23012:20:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23027:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"23030:1:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23023:3:11"},"nodeType":"YulFunctionCall","src":"23023:9:11"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"23012:7:11"}]},{"body":{"nodeType":"YulBlock","src":"23090:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23092:16:11"},"nodeType":"YulFunctionCall","src":"23092:18:11"},"nodeType":"YulExpressionStatement","src":"23092:18:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23061:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23054:6:11"},"nodeType":"YulFunctionCall","src":"23054:9:11"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23068:1:11"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"23075:7:11"},{"name":"x","nodeType":"YulIdentifier","src":"23084:1:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23071:3:11"},"nodeType":"YulFunctionCall","src":"23071:15:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23065:2:11"},"nodeType":"YulFunctionCall","src":"23065:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"23051:2:11"},"nodeType":"YulFunctionCall","src":"23051:37:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23044:6:11"},"nodeType":"YulFunctionCall","src":"23044:45:11"},"nodeType":"YulIf","src":"23041:71:11"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22981:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"22984:1:11","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"22990:7:11","type":""}],"src":"22950:168:11"},{"body":{"nodeType":"YulBlock","src":"23171:77:11","statements":[{"nodeType":"YulAssignment","src":"23181:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23192:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"23195:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23188:3:11"},"nodeType":"YulFunctionCall","src":"23188:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"23181:3:11"}]},{"body":{"nodeType":"YulBlock","src":"23220:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23222:16:11"},"nodeType":"YulFunctionCall","src":"23222:18:11"},"nodeType":"YulExpressionStatement","src":"23222:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23212:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"23215:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23209:2:11"},"nodeType":"YulFunctionCall","src":"23209:10:11"},"nodeType":"YulIf","src":"23206:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23154:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"23157:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"23163:3:11","type":""}],"src":"23123:125:11"},{"body":{"nodeType":"YulBlock","src":"23300:89:11","statements":[{"body":{"nodeType":"YulBlock","src":"23327:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23329:16:11"},"nodeType":"YulFunctionCall","src":"23329:18:11"},"nodeType":"YulExpressionStatement","src":"23329:18:11"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23320:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23313:6:11"},"nodeType":"YulFunctionCall","src":"23313:13:11"},"nodeType":"YulIf","src":"23310:39:11"},{"nodeType":"YulAssignment","src":"23358:25:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23369:5:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23380:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23376:3:11"},"nodeType":"YulFunctionCall","src":"23376:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23365:3:11"},"nodeType":"YulFunctionCall","src":"23365:18:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23358:3:11"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23282:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23292:3:11","type":""}],"src":"23253:136:11"},{"body":{"nodeType":"YulBlock","src":"23568:182:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23585:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23596:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23578:6:11"},"nodeType":"YulFunctionCall","src":"23578:21:11"},"nodeType":"YulExpressionStatement","src":"23578:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23619:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23630:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23615:3:11"},"nodeType":"YulFunctionCall","src":"23615:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"23635:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23608:6:11"},"nodeType":"YulFunctionCall","src":"23608:30:11"},"nodeType":"YulExpressionStatement","src":"23608:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23658:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23669:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23654:3:11"},"nodeType":"YulFunctionCall","src":"23654:18:11"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"23674:34:11","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23647:6:11"},"nodeType":"YulFunctionCall","src":"23647:62:11"},"nodeType":"YulExpressionStatement","src":"23647:62:11"},{"nodeType":"YulAssignment","src":"23718:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23730:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23741:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23726:3:11"},"nodeType":"YulFunctionCall","src":"23726:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23718:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23545:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23559:4:11","type":""}],"src":"23394:356:11"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_bytes32_t_uint256_t_address_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bytes32_t_uint256_t_address_t_string_memory_ptr_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 192)\n        let tail_1 := abi_encode_string(value0, add(headStart, 192))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), sub(tail_1, headStart))\n        tail := abi_encode_string(value4, tail_1)\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_struct$_MedicalRecord_$1854_memory_ptr__to_t_struct$_MedicalRecord_$1854_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let memberValue0 := mload(value0)\n        mstore(add(headStart, 32), 0xc0)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 224))\n        mstore(add(headStart, 64), mload(add(value0, 32)))\n        mstore(add(headStart, 96), mload(add(value0, 64)))\n        mstore(add(headStart, 128), and(mload(add(value0, 96)), sub(shl(160, 1), 1)))\n        let memberValue0_1 := mload(add(value0, 128))\n        mstore(add(headStart, 160), add(sub(tail_1, headStart), not(31)))\n        let tail_2 := abi_encode_string(memberValue0_1, tail_1)\n        mstore(add(headStart, 0xc0), iszero(iszero(mload(add(value0, 160)))))\n        tail := tail_2\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_bytes32t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, shl(5, length)), 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            tail_2 := abi_encode_string(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_bytes32_t_uint256_t_bool__to_t_string_memory_ptr_t_bytes32_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        tail := abi_encode_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_0a8ed45d00a83e492b4ab61ee8b2e636923fb87d2492039421aabce06b0b29cc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Record not found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c93a18ddae6e1b292f548b4b4fbb7daafa6cf30048bc047db044c6a8f6b36ee0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Not authorized to update this re\")\n        mstore(add(headStart, 96), \"cord\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_c2bcce16aecbe05703a000c32d6c789923155bc4edb44224894bec7cb236557f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Not authorized to view this reco\")\n        mstore(add(headStart, 96), \"rd\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_79ce62d7220f73dea0dc2c9bb95d6143420225d311d28b04d8fae31c4aacf571__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Patient not found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_28e1e9afd51a158c04b777f0ff1418890681aa2dcfc4468bbbe06c954ae8f930__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid doctor address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bf5e6d02bf80a51bf9006bf64f7534c5650a0026feea9a9f345bd4684adae9c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Doctor already authorized\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_07c1c635d65e6af8656a934f42e338eb58f1c610b9d5735313ff1b71d7e23625__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Record hash cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7880436d3be123a72f6eaf76b42ade9cc7ddea4b1232a581fa6f1bb5299c8057__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Not authorized to add records\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Record already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9aaa89b137f2d33ca5a89427cbf46863211fd41651327985d96f133d4867fd05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Doctor not authorized\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, _1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, _2)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function copy_byte_array_to_storage_from_t_string_storage_ptr_to_t_string_storage(slot, src)\n    {\n        if eq(slot, src) { leave }\n        let newLen := extract_byte_array_length(sload(src))\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let src_1 := array_dataslot_string_storage(src)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, sload(add(src_1, srcOffset)))\n                let _1 := 1\n                dstPtr := add(dstPtr, _1)\n                srcOffset := add(srcOffset, _1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := sload(add(src_1, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := sload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_ab042a939c7a6283c5aad9fea927fc5aa866f7f3bff61adb7e7b2d840ffb37db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Not authorized to view records\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6646efd2195917deefc807954554698f53c47e3c5567aa1b197b96c1ad0240cf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Not authorized to view doctor pa\")\n        mstore(add(headStart, 96), \"tients\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_28bdf382440fa4116bdda25bcfef0045a4b02ece70872c990eb37af47b6a5a6f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Patient ID cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_39964dd4ab745112952693f060791e679669e0677a04eb4aa71bca4732419ad0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Patient already registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101f05760003560e01c806352366c211161010f578063a217fddf116100a2578063d547741f11610071578063d547741f14610479578063e41db2851461048c578063f497e1891461049f578063fec331f2146104a757600080fd5b8063a217fddf1461041b578063b8a751df14610423578063ba50846714610436578063c6009d841461045657600080fd5b80636bd6f34b116100de5780636bd6f34b146103d857806375b238fc146103eb5780638456cb591461040057806391d148541461040857600080fd5b806352366c211461038757806359078f081461039a5780635c975abb146103ad5780635cd40af5146103b857600080fd5b806327531360116101875780633f4ba83a116101565780633f4ba83a146103265780634ac9e3001461032e5780634d408bcf1461034e578063508a91001461037457600080fd5b806327531360146102da5780632f2ff15d146102ed5780632f5635cc1461030057806336568abe1461031357600080fd5b80630aeacb5e116101c35780630aeacb5e1461027c578063213681cd14610284578063248a9ca3146102a457806326af21b0146102c757600080fd5b806301186d99146101f557806301e647251461020a57806301ffc9a714610238578063071849001461025b575b600080fd5b610208610203366004612071565b6104bc565b005b61021d610218366004612071565b6105eb565b60405161022f969594939291906120da565b60405180910390f35b61024b610246366004612132565b610741565b604051901515815260200161022f565b61026e610269366004612071565b610778565b60405190815260200161022f565b60085461026e565b610297610292366004612071565b610799565b60405161022f919061215c565b61026e6102b2366004612071565b60009081526020819052604090206001015490565b6102086102d5366004612293565b610ad7565b61024b6102e8366004612293565b610cac565b6102086102fb3660046122e1565b610d8b565b61020861030e366004612304565b610db5565b6102086103213660046122e1565b610de9565b610208610e63565b61034161033c36600461231f565b610e86565b60405161022f9190612349565b61024b61035c366004612071565b60009081526004602052604090206005015460ff1690565b61020861038236600461235c565b610f3f565b610341610395366004612071565b611230565b6102086103a8366004612293565b61125b565b60025460ff1661024b565b6103cb6103c63660046123c9565b61158d565b60405161022f9190612406565b6102086103e6366004612304565b611671565b61026e60008051602061296983398151915281565b6102086116a1565b61024b6104163660046122e1565b6116c1565b61026e600081565b61026e61043136600461244a565b6116ea565b610449610444366004612304565b61172a565b60405161022f919061248f565b6104696104643660046123c9565b61189c565b60405161022f94939291906124f1565b6102086104873660046122e1565b61195c565b61020861049a36600461244a565b611981565b60075461026e565b61026e60008051602061294983398151915281565b6104c4611b9c565b60008181526004602052604090206005015460ff1661051d5760405162461bcd60e51b815260206004820152601060248201526f149958dbdc99081b9bdd08199bdd5b9960821b60448201526064015b60405180910390fd5b610535600080516020612969833981519152336116c1565b8061055957506000818152600460205260409020600301546001600160a01b031633145b6105b15760405162461bcd60e51b8152602060048201526024808201527f4e6f7420617574686f72697a656420746f20757064617465207468697320726560448201526318dbdc9960e21b6064820152608401610514565b604051428152339082907f35e7b6f8e0ca02c830bfb02ce9e16fda8e9ea880a052abb6e6950140eed84a2d9060200160405180910390a350565b60046020526000908152604090208054819061060690612522565b80601f016020809104026020016040519081016040528092919081815260200182805461063290612522565b801561067f5780601f106106545761010080835404028352916020019161067f565b820191906000526020600020905b81548152906001019060200180831161066257829003601f168201915b505050600184015460028501546003860154600487018054969793969295506001600160a01b039091169350906106b590612522565b80601f01602080910402602001604051908101604052809291908181526020018280546106e190612522565b801561072e5780601f106107035761010080835404028352916020019161072e565b820191906000526020600020905b81548152906001019060200180831161071157829003601f168201915b5050506005909301549192505060ff1686565b60006001600160e01b03198216637965db0b60e01b148061077257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6008818154811061078857600080fd5b600091825260209091200154905081565b6040805160c0810182526060808252600060208301819052928201839052808201839052608082015260a081019190915260008281526004602052604090206005015460ff1661081e5760405162461bcd60e51b815260206004820152601060248201526f149958dbdc99081b9bdd08199bdd5b9960821b6044820152606401610514565b610836600080516020612969833981519152336116c1565b806108de5750600082815260046020526040902080546108de919061085a90612522565b80601f016020809104026020016040519081016040528092919081815260200182805461088690612522565b80156108d35780601f106108a8576101008083540402835291602001916108d3565b820191906000526020600020905b8154815290600101906020018083116108b657829003601f168201915b505050505033610cac565b8061090257506000828152600460205260409020600301546001600160a01b031633145b6109595760405162461bcd60e51b815260206004820152602260248201527f4e6f7420617574686f72697a656420746f20766965772074686973207265636f6044820152611c9960f21b6064820152608401610514565b60008281526004602052604090819020815160c0810190925280548290829061098190612522565b80601f01602080910402602001604051908101604052809291908181526020018280546109ad90612522565b80156109fa5780601f106109cf576101008083540402835291602001916109fa565b820191906000526020600020905b8154815290600101906020018083116109dd57829003601f168201915b5050509183525050600182015460208201526002820154604082015260038201546001600160a01b03166060820152600482018054608090920191610a3e90612522565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6a90612522565b8015610ab75780601f10610a8c57610100808354040283529160200191610ab7565b820191906000526020600020905b815481529060010190602001808311610a9a57829003601f168201915b50505091835250506005919091015460ff16151560209091015292915050565b600080516020612969833981519152610aef81611be4565b610af7611b9c565b600383604051610b07919061255c565b9081526040519081900360200190206004015460ff16610b395760405162461bcd60e51b815260040161051490612578565b6001600160a01b038216610b885760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420646f63746f72206164647265737360501b6044820152606401610514565b610b928383610cac565b15610bdf5760405162461bcd60e51b815260206004820152601960248201527f446f63746f7220616c726561647920617574686f72697a6564000000000000006044820152606401610514565b600383604051610bef919061255c565b9081526040805160209281900383019020600201805460018082018355600092835284832090910180546001600160a01b0319166001600160a01b0388169081179091558252600684529181208054928301815581529190912001610c5484826125f1565b50336001600160a01b0316826001600160a01b031684604051610c77919061255c565b604051908190038120907f53ea77bac257751bb36bf9bc6076f9e71751fc8f1f4ca1fc008b0a060f1343db90600090a4505050565b600080600384604051610cbf919061255c565b9081526040805191829003602090810183206002018054808302850183019093528284529190830182828015610d1e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d00575b5050505050905060005b8151811015610d8057836001600160a01b0316828281518110610d4d57610d4d6126b1565b60200260200101516001600160a01b031603610d6e57600192505050610772565b80610d78816126dd565b915050610d28565b506000949350505050565b600082815260208190526040902060010154610da681611be4565b610db08383611bee565b505050565b600080516020612969833981519152610dcd81611be4565b610de560008051602061294983398151915283611bee565b5050565b6001600160a01b0381163314610e595760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610514565b610de58282611c72565b600080516020612969833981519152610e7b81611be4565b610e83611cd7565b50565b60066020528160005260406000208181548110610ea257600080fd5b90600052602060002001600091509150508054610ebe90612522565b80601f0160208091040260200160405190810160405280929190818152602001828054610eea90612522565b8015610f375780601f10610f0c57610100808354040283529160200191610f37565b820191906000526020600020905b815481529060010190602001808311610f1a57829003601f168201915b505050505081565b610f47611b9c565b600383604051610f57919061255c565b9081526040519081900360200190206004015460ff16610f895760405162461bcd60e51b815260040161051490612578565b81610fd65760405162461bcd60e51b815260206004820152601b60248201527f5265636f726420686173682063616e6e6f7420626520656d70747900000000006044820152606401610514565b610fee600080516020612969833981519152336116c1565b8061100c575061100c600080516020612949833981519152336116c1565b8061101c575061101c8333610cac565b6110685760405162461bcd60e51b815260206004820152601d60248201527f4e6f7420617574686f72697a656420746f20616464207265636f7264730000006044820152606401610514565b60008281526004602052604090206005015460ff16156110c25760405162461bcd60e51b81526020600482015260156024820152745265636f726420616c72656164792065786973747360581b6044820152606401610514565b6040805160c0810182528481526020808201859052428284015233606083015260808201849052600160a083015260008581526004909152919091208151819061110c90826125f1565b50602082015160018201556040820151600282015560608201516003820180546001600160a01b0319166001600160a01b039092169190911790556080820151600482019061115b90826125f1565b5060a091909101516005918201805460ff191691151591909117905560405161118590859061255c565b908152604051908190036020908101822080546001818101835560009283529282200185905560088054928301815590527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301839055339083906111ea90869061255c565b60405180910390207f716f9d7e35c51954f900c6c9cf9ed807431a0ca5bff577e9c0d144dd5623babc84426040516112239291906126f6565b60405180910390a4505050565b6007818154811061124057600080fd5b906000526020600020016000915090508054610ebe90612522565b60008051602061296983398151915261127381611be4565b61127b611b9c565b60038360405161128b919061255c565b9081526040519081900360200190206004015460ff166112bd5760405162461bcd60e51b815260040161051490612578565b6112c78383610cac565b61130b5760405162461bcd60e51b8152602060048201526015602482015274111bd8dd1bdc881b9bdd08185d5d1a1bdc9a5e9959605a1b6044820152606401610514565b600060038460405161131d919061255c565b9081526020016040518091039020600201905060005b815481101561143957836001600160a01b0316828281548110611358576113586126b1565b6000918252602090912001546001600160a01b031603611427578154829061138290600190612718565b81548110611392576113926126b1565b9060005260206000200160009054906101000a90046001600160a01b03168282815481106113c2576113c26126b1565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550818054806114005761140061272b565b600082815260209020810160001990810180546001600160a01b0319169055019055611439565b80611431816126dd565b915050611333565b506001600160a01b0383166000908152600660205260408120905b8154811015611533578580519060200120828281548110611477576114776126b1565b9060005260206000200160405161148e9190612741565b60405180910390200361152157815482906114ab90600190612718565b815481106114bb576114bb6126b1565b906000526020600020018282815481106114d7576114d76126b1565b9060005260206000200190816114ed91906127b7565b50818054806114fe576114fe61272b565b60019003818190600052602060002001600061151a9190611fbd565b9055611533565b8061152b816126dd565b915050611454565b50336001600160a01b0316846001600160a01b031686604051611556919061255c565b604051908190038120907f313d03951ff63181e699c784850c99173ea0426ea96118739cd232756cb8dc0890600090a45050505050565b60606115a7600080516020612969833981519152336116c1565b806115b757506115b78233610cac565b6116035760405162461bcd60e51b815260206004820152601e60248201527f4e6f7420617574686f72697a656420746f2076696577207265636f72647300006044820152606401610514565b600582604051611613919061255c565b908152604080519182900360209081018320805480830285018301909352828452919083018282801561166557602002820191906000526020600020905b815481526020019060010190808311611651575b50505050509050919050565b60008051602061296983398151915261168981611be4565b610de560008051602061294983398151915283611c72565b6000805160206129698339815191526116b981611be4565b610e83611d29565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b8151602081840181018051600582529282019185019190912091905280548290811061171557600080fd5b90600052602060002001600091509150505481565b6060611744600080516020612969833981519152336116c1565b8061175757506001600160a01b03821633145b6117b25760405162461bcd60e51b815260206004820152602660248201527f4e6f7420617574686f72697a656420746f207669657720646f63746f722070616044820152657469656e747360d01b6064820152608401610514565b6001600160a01b038216600090815260066020908152604080832080548251818502810185019093528083529193909284015b8282101561189157838290600052602060002001805461180490612522565b80601f016020809104026020016040519081016040528092919081815260200182805461183090612522565b801561187d5780601f106118525761010080835404028352916020019161187d565b820191906000526020600020905b81548152906001019060200180831161186057829003601f168201915b5050505050815260200190600101906117e5565b505050509050919050565b80516020818301810180516003825292820191909301209152805481906118c290612522565b80601f01602080910402602001604051908101604052809291908181526020018280546118ee90612522565b801561193b5780601f106119105761010080835404028352916020019161193b565b820191906000526020600020905b81548152906001019060200180831161191e57829003601f168201915b50505050600183015460038401546004909401549293909290915060ff1684565b60008281526020819052604090206001015461197781611be4565b610db08383611c72565b60008051602061296983398151915261199981611be4565b6119a1611b9c565b60008351116119f25760405162461bcd60e51b815260206004820152601a60248201527f50617469656e742049442063616e6e6f7420626520656d7074790000000000006044820152606401610514565b600383604051611a02919061255c565b9081526040519081900360200190206004015460ff1615611a655760405162461bcd60e51b815260206004820152601a60248201527f50617469656e7420616c726561647920726567697374657265640000000000006044820152606401610514565b6040805160a0810182528481526020808201859052825160008152908101835281830152426060820152600160808201529051600390611aa690869061255c565b90815260405190819003602001902081518190611ac390826125f1565b50602082810151600183015560408301518051611ae69260028501920190611ff7565b50606082015160038201556080909101516004909101805460ff1916911515919091179055600780546001810182556000919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801611b4784826125f1565b506040513390611b5890859061255c565b60408051918290038220858352426020840152917fca7c439ac98ab508692c283175e70b79c56058dd05da29469976aadc904692f5910160405180910390a3505050565b60025460ff1615611be25760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610514565b565b610e838133611d66565b611bf882826116c1565b610de5576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055611c2e3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b611c7c82826116c1565b15610de5576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b611cdf611dbf565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b611d31611b9c565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611d0c3390565b611d7082826116c1565b610de557611d7d81611e08565b611d88836020611e1a565b604051602001611d99929190612892565b60408051601f198184030181529082905262461bcd60e51b825261051491600401612349565b60025460ff16611be25760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610514565b60606107726001600160a01b03831660145b60606000611e29836002612907565b611e3490600261291e565b67ffffffffffffffff811115611e4c57611e4c6121d4565b6040519080825280601f01601f191660200182016040528015611e76576020820181803683370190505b509050600360fc1b81600081518110611e9157611e916126b1565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611ec057611ec06126b1565b60200101906001600160f81b031916908160001a9053506000611ee4846002612907565b611eef90600161291e565b90505b6001811115611f67576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611f2357611f236126b1565b1a60f81b828281518110611f3957611f396126b1565b60200101906001600160f81b031916908160001a90535060049490941c93611f6081612931565b9050611ef2565b508315611fb65760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610514565b9392505050565b508054611fc990612522565b6000825580601f10611fd9575050565b601f016020900490600052602060002090810190610e83919061205c565b82805482825590600052602060002090810192821561204c579160200282015b8281111561204c57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612017565b5061205892915061205c565b5090565b5b80821115612058576000815560010161205d565b60006020828403121561208357600080fd5b5035919050565b60005b838110156120a557818101518382015260200161208d565b50506000910152565b600081518084526120c681602086016020860161208a565b601f01601f19169290920160200192915050565b60c0815260006120ed60c08301896120ae565b60208301889052604083018790526001600160a01b0386166060840152828103608084015261211c81866120ae565b91505082151560a0830152979650505050505050565b60006020828403121561214457600080fd5b81356001600160e01b031981168114611fb657600080fd5b602081526000825160c0602084015261217860e08401826120ae565b9050602084015160408401526040840151606084015260018060a01b0360608501511660808401526080840151601f198483030160a08501526121bb82826120ae565b91505060a0840151151560c08401528091505092915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126121fb57600080fd5b813567ffffffffffffffff80821115612216576122166121d4565b604051601f8301601f19908116603f0116810190828211818310171561223e5761223e6121d4565b8160405283815286602085880101111561225757600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356001600160a01b038116811461228e57600080fd5b919050565b600080604083850312156122a657600080fd5b823567ffffffffffffffff8111156122bd57600080fd5b6122c9858286016121ea565b9250506122d860208401612277565b90509250929050565b600080604083850312156122f457600080fd5b823591506122d860208401612277565b60006020828403121561231657600080fd5b611fb682612277565b6000806040838503121561233257600080fd5b61233b83612277565b946020939093013593505050565b602081526000611fb660208301846120ae565b60008060006060848603121561237157600080fd5b833567ffffffffffffffff8082111561238957600080fd5b612395878388016121ea565b94506020860135935060408601359150808211156123b257600080fd5b506123bf868287016121ea565b9150509250925092565b6000602082840312156123db57600080fd5b813567ffffffffffffffff8111156123f257600080fd5b6123fe848285016121ea565b949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561243e57835183529284019291840191600101612422565b50909695505050505050565b6000806040838503121561245d57600080fd5b823567ffffffffffffffff81111561247457600080fd5b612480858286016121ea565b95602094909401359450505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156124e457603f198886030184526124d28583516120ae565b945092850192908501906001016124b6565b5092979650505050505050565b60808152600061250460808301876120ae565b60208301959095525060408101929092521515606090910152919050565b600181811c9082168061253657607f821691505b60208210810361255657634e487b7160e01b600052602260045260246000fd5b50919050565b6000825161256e81846020870161208a565b9190910192915050565b60208082526011908201527014185d1a595b9d081b9bdd08199bdd5b99607a1b604082015260600190565b601f821115610db057600081815260208120601f850160051c810160208610156125ca5750805b601f850160051c820191505b818110156125e9578281556001016125d6565b505050505050565b815167ffffffffffffffff81111561260b5761260b6121d4565b61261f816126198454612522565b846125a3565b602080601f831160018114612654576000841561263c5750858301515b600019600386901b1c1916600185901b1785556125e9565b600085815260208120601f198616915b8281101561268357888601518255948401946001909101908401612664565b50858210156126a15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016126ef576126ef6126c7565b5060010190565b60408152600061270960408301856120ae565b90508260208301529392505050565b81810381811115610772576107726126c7565b634e487b7160e01b600052603160045260246000fd5b600080835461274f81612522565b60018281168015612767576001811461277c576127ab565b60ff19841687528215158302870194506127ab565b8760005260208060002060005b858110156127a25781548a820152908401908201612789565b50505082870194505b50929695505050505050565b8181036127c2575050565b6127cc8254612522565b67ffffffffffffffff8111156127e4576127e46121d4565b6127f2816126198454612522565b6000601f821160018114612826576000831561280e5750848201545b600019600385901b1c1916600184901b17845561288b565b600085815260209020601f19841690600086815260209020845b838110156128605782860154825560019586019590910190602001612840565b508583101561287e5781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516128ca81601785016020880161208a565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516128fb81602884016020880161208a565b01602801949350505050565b8082028115828204841417610772576107726126c7565b80820180821115610772576107726126c7565b600081612940576129406126c7565b50600019019056fe0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a26469706673582212201965b0ffcb7bc84a5551d59bfe2284a3356299169a5f71cbf1c321a5c5b2913564736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52366C21 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0xE41DB285 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xF497E189 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xFEC331F2 EQ PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xB8A751DF EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xBA508467 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0xC6009D84 EQ PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6BD6F34B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x6BD6F34B EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52366C21 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x59078F08 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x5CD40AF5 EQ PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27531360 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x4AC9E300 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x4D408BCF EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x508A9100 EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27531360 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x2F5635CC EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAEACB5E GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xAEACB5E EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x213681CD EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x26AF21B0 EQ PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1186D99 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x1E64725 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x7184900 EQ PUSH2 0x25B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21D PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x2132 JUMP JUMPDEST PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x26E PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x26E JUMP JUMPDEST PUSH2 0x297 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x215C JUMP JUMPDEST PUSH2 0x26E PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2293 JUMP JUMPDEST PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2293 JUMP JUMPDEST PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x208 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x2304 JUMP JUMPDEST PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0xDE9 JUMP JUMPDEST PUSH2 0x208 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x341 PUSH2 0x33C CALLDATASIZE PUSH1 0x4 PUSH2 0x231F JUMP JUMPDEST PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2349 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x35C CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x235C JUMP JUMPDEST PUSH2 0xF3F JUMP JUMPDEST PUSH2 0x341 PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x1230 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2293 JUMP JUMPDEST PUSH2 0x125B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x24B JUMP JUMPDEST PUSH2 0x3CB PUSH2 0x3C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x23C9 JUMP JUMPDEST PUSH2 0x158D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2406 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2304 JUMP JUMPDEST PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x16A1 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x416 CALLDATASIZE PUSH1 0x4 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0x244A JUMP JUMPDEST PUSH2 0x16EA JUMP JUMPDEST PUSH2 0x449 PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0x2304 JUMP JUMPDEST PUSH2 0x172A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x248F JUMP JUMPDEST PUSH2 0x469 PUSH2 0x464 CALLDATASIZE PUSH1 0x4 PUSH2 0x23C9 JUMP JUMPDEST PUSH2 0x189C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24F1 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x487 CALLDATASIZE PUSH1 0x4 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x195C JUMP JUMPDEST PUSH2 0x208 PUSH2 0x49A CALLDATASIZE PUSH1 0x4 PUSH2 0x244A JUMP JUMPDEST PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x26E JUMP JUMPDEST PUSH2 0x26E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2949 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4C4 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x149958DBDC99081B9BDD08199BDD5B99 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x535 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x16C1 JUMP JUMPDEST DUP1 PUSH2 0x559 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F207570646174652074686973207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x18DBDC99 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE CALLER SWAP1 DUP3 SWAP1 PUSH32 0x35E7B6F8E0CA02C830BFB02CE9E16FDA8E9EA880A052ABB6E6950140EED84A2D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x606 SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x632 SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x67F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x654 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x67F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x662 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 DUP8 ADD DUP1 SLOAD SWAP7 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 POP SWAP1 PUSH2 0x6B5 SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6E1 SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x72E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x703 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x72E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x711 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x5 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x772 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE DUP1 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x149958DBDC99081B9BDD08199BDD5B99 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x16C1 JUMP JUMPDEST DUP1 PUSH2 0x8DE JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x8DE SWAP2 SWAP1 PUSH2 0x85A SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x886 SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP CALLER PUSH2 0xCAC JUMP JUMPDEST DUP1 PUSH2 0x902 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x959 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F20766965772074686973207265636F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1C99 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x981 SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9AD SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x80 SWAP1 SWAP3 ADD SWAP2 PUSH2 0xA3E SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA6A SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAB7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA8C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAB7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA9A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x5 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xAEF DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0xAF7 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0xB39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x514 SWAP1 PUSH2 0x2578 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C696420646F63746F722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH2 0xB92 DUP4 DUP4 PUSH2 0xCAC JUMP JUMPDEST ISZERO PUSH2 0xBDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F63746F7220616C726561647920617574686F72697A656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBEF SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE DUP5 DUP4 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MSTORE PUSH1 0x6 DUP5 MSTORE SWAP2 DUP2 KECCAK256 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 ADD PUSH2 0xC54 DUP5 DUP3 PUSH2 0x25F1 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xC77 SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0x53EA77BAC257751BB36BF9BC6076F9E71751FC8F1F4CA1FC008B0A060F1343DB SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCBF SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 DUP4 MUL DUP6 ADD DUP4 ADD SWAP1 SWAP4 MSTORE DUP3 DUP5 MSTORE SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD1E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD00 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xD80 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD4D JUMPI PUSH2 0xD4D PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xD6E JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x772 JUMP JUMPDEST DUP1 PUSH2 0xD78 DUP2 PUSH2 0x26DD JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD28 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xDA6 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0xDB0 DUP4 DUP4 PUSH2 0x1BEE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xDCD DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0xDE5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2949 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x1BEE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xE59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST PUSH2 0xDE5 DUP3 DUP3 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xE7B DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0xE83 PUSH2 0x1CD7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xEA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 SLOAD PUSH2 0xEBE SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEEA SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF37 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF0C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF37 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF1A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0xF47 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF57 SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0xF89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x514 SWAP1 PUSH2 0x2578 JUMP JUMPDEST DUP2 PUSH2 0xFD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265636F726420686173682063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH2 0xFEE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x16C1 JUMP JUMPDEST DUP1 PUSH2 0x100C JUMPI POP PUSH2 0x100C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2949 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x16C1 JUMP JUMPDEST DUP1 PUSH2 0x101C JUMPI POP PUSH2 0x101C DUP4 CALLER PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x1068 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F20616464207265636F726473000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5265636F726420616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE TIMESTAMP DUP3 DUP5 ADD MSTORE CALLER PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x110C SWAP1 DUP3 PUSH2 0x25F1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SWAP1 PUSH2 0x115B SWAP1 DUP3 PUSH2 0x25F1 JUMP JUMPDEST POP PUSH1 0xA0 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x5 SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1185 SWAP1 DUP6 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE SWAP3 DUP3 KECCAK256 ADD DUP6 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE SWAP1 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP4 SWAP1 SSTORE CALLER SWAP1 DUP4 SWAP1 PUSH2 0x11EA SWAP1 DUP7 SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0x716F9D7E35C51954F900C6C9CF9ED807431A0CA5BFF577E9C0D144DD5623BABC DUP5 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1223 SWAP3 SWAP2 SWAP1 PUSH2 0x26F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0xEBE SWAP1 PUSH2 0x2522 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1273 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x127B PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x40 MLOAD PUSH2 0x128B SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x12BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x514 SWAP1 PUSH2 0x2578 JUMP JUMPDEST PUSH2 0x12C7 DUP4 DUP4 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x130B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x111BD8DD1BDC881B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x131D SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x2 ADD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x1439 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1358 JUMPI PUSH2 0x1358 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1427 JUMPI DUP2 SLOAD DUP3 SWAP1 PUSH2 0x1382 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2718 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1392 JUMPI PUSH2 0x1392 PUSH2 0x26B1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13C2 JUMPI PUSH2 0x13C2 PUSH2 0x26B1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 DUP1 SLOAD DUP1 PUSH2 0x1400 JUMPI PUSH2 0x1400 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0x1439 JUMP JUMPDEST DUP1 PUSH2 0x1431 DUP2 PUSH2 0x26DD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1333 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x1533 JUMPI DUP6 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1477 JUMPI PUSH2 0x1477 PUSH2 0x26B1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x148E SWAP2 SWAP1 PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x1521 JUMPI DUP2 SLOAD DUP3 SWAP1 PUSH2 0x14AB SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2718 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x14BB JUMPI PUSH2 0x14BB PUSH2 0x26B1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x14D7 JUMPI PUSH2 0x14D7 PUSH2 0x26B1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 DUP2 PUSH2 0x14ED SWAP2 SWAP1 PUSH2 0x27B7 JUMP JUMPDEST POP DUP2 DUP1 SLOAD DUP1 PUSH2 0x14FE JUMPI PUSH2 0x14FE PUSH2 0x272B JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x151A SWAP2 SWAP1 PUSH2 0x1FBD JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1533 JUMP JUMPDEST DUP1 PUSH2 0x152B DUP2 PUSH2 0x26DD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1454 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x40 MLOAD PUSH2 0x1556 SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0x313D03951FF63181E699C784850C99173EA0426EA96118739CD232756CB8DC08 SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15A7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x16C1 JUMP JUMPDEST DUP1 PUSH2 0x15B7 JUMPI POP PUSH2 0x15B7 DUP3 CALLER PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x1603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F2076696577207265636F7264730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1613 SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP1 SLOAD DUP1 DUP4 MUL DUP6 ADD DUP4 ADD SWAP1 SWAP4 MSTORE DUP3 DUP5 MSTORE SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1665 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1651 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1689 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0xDE5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2949 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x16B9 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0xE83 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP2 DUP5 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x5 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 DUP6 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x1715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1744 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x16C1 JUMP JUMPDEST DUP1 PUSH2 0x1757 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ JUMPDEST PUSH2 0x17B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F207669657720646F63746F72207061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7469656E7473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP4 SWAP1 SWAP3 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1891 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x1804 SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1830 SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x187D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1852 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x187D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1860 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x17E5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x3 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP2 SWAP1 PUSH2 0x18C2 SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18EE SWAP1 PUSH2 0x2522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x193B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1910 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x193B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x191E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 POP PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1977 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0xDB0 DUP4 DUP4 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2969 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1999 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x19A1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT PUSH2 0x19F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50617469656E742049442063616E6E6F7420626520656D707479000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A02 SWAP2 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1A65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50617469656E7420616C72656164792072656769737465726564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE DUP3 MLOAD PUSH1 0x0 DUP2 MSTORE SWAP1 DUP2 ADD DUP4 MSTORE DUP2 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x3 SWAP1 PUSH2 0x1AA6 SWAP1 DUP7 SWAP1 PUSH2 0x255C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x1AC3 SWAP1 DUP3 PUSH2 0x25F1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x1AE6 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD PUSH2 0x1B47 DUP5 DUP3 PUSH2 0x25F1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH2 0x1B58 SWAP1 DUP6 SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP6 DUP4 MSTORE TIMESTAMP PUSH1 0x20 DUP5 ADD MSTORE SWAP2 PUSH32 0xCA7C439AC98AB508692C283175E70B79C56058DD05DA29469976AADC904692F5 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1BE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE83 DUP2 CALLER PUSH2 0x1D66 JUMP JUMPDEST PUSH2 0x1BF8 DUP3 DUP3 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0xDE5 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1C2E CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1C7C DUP3 DUP3 PUSH2 0x16C1 JUMP JUMPDEST ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1CDF PUSH2 0x1DBF JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1D31 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1D0C CALLER SWAP1 JUMP JUMPDEST PUSH2 0x1D70 DUP3 DUP3 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0xDE5 JUMPI PUSH2 0x1D7D DUP2 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x1D88 DUP4 PUSH1 0x20 PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D99 SWAP3 SWAP2 SWAP1 PUSH2 0x2892 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x514 SWAP2 PUSH1 0x4 ADD PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x1BE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x772 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1E29 DUP4 PUSH1 0x2 PUSH2 0x2907 JUMP JUMPDEST PUSH2 0x1E34 SWAP1 PUSH1 0x2 PUSH2 0x291E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E4C JUMPI PUSH2 0x1E4C PUSH2 0x21D4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E76 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1E91 JUMPI PUSH2 0x1E91 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1EC0 JUMPI PUSH2 0x1EC0 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1EE4 DUP5 PUSH1 0x2 PUSH2 0x2907 JUMP JUMPDEST PUSH2 0x1EEF SWAP1 PUSH1 0x1 PUSH2 0x291E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F67 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1F23 JUMPI PUSH2 0x1F23 PUSH2 0x26B1 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F39 JUMPI PUSH2 0x1F39 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1F60 DUP2 PUSH2 0x2931 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EF2 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1FB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x1FC9 SWAP1 PUSH2 0x2522 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1FD9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xE83 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x204C JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x204C JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2017 JUMP JUMPDEST POP PUSH2 0x2058 SWAP3 SWAP2 POP PUSH2 0x205C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2058 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x205D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2083 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20A5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x208D JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x20C6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x208A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x20ED PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x20AE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x40 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x60 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x211C DUP2 DUP7 PUSH2 0x20AE JUMP JUMPDEST SWAP2 POP POP DUP3 ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1FB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH1 0xC0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2178 PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x20AE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x21BB DUP3 DUP3 PUSH2 0x20AE JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA0 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2216 JUMPI PUSH2 0x2216 PUSH2 0x21D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x223E JUMPI PUSH2 0x223E PUSH2 0x21D4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x2257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x228E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22C9 DUP6 DUP3 DUP7 ADD PUSH2 0x21EA JUMP JUMPDEST SWAP3 POP POP PUSH2 0x22D8 PUSH1 0x20 DUP5 ADD PUSH2 0x2277 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x22D8 PUSH1 0x20 DUP5 ADD PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FB6 DUP3 PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x233B DUP4 PUSH2 0x2277 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1FB6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20AE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2395 DUP8 DUP4 DUP9 ADD PUSH2 0x21EA JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x23B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23BF DUP7 DUP3 DUP8 ADD PUSH2 0x21EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23FE DUP5 DUP3 DUP6 ADD PUSH2 0x21EA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x243E JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2422 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x245D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2480 DUP6 DUP3 DUP7 ADD PUSH2 0x21EA JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x24E4 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x24D2 DUP6 DUP4 MLOAD PUSH2 0x20AE JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x24B6 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2504 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x20AE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP PUSH1 0x40 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2536 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2556 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x256E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x208A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x14185D1A595B9D081B9BDD08199BDD5B99 PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xDB0 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x25CA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25E9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x25D6 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x260B JUMPI PUSH2 0x260B PUSH2 0x21D4 JUMP JUMPDEST PUSH2 0x261F DUP2 PUSH2 0x2619 DUP5 SLOAD PUSH2 0x2522 JUMP JUMPDEST DUP5 PUSH2 0x25A3 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2654 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x263C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2683 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2664 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x26A1 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x26EF JUMPI PUSH2 0x26EF PUSH2 0x26C7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2709 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x20AE JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x772 JUMPI PUSH2 0x772 PUSH2 0x26C7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD PUSH2 0x274F DUP2 PUSH2 0x2522 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x2767 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x277C JUMPI PUSH2 0x27AB JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x27AB JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x27A2 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x2789 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x27C2 JUMPI POP POP JUMP JUMPDEST PUSH2 0x27CC DUP3 SLOAD PUSH2 0x2522 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27E4 JUMPI PUSH2 0x27E4 PUSH2 0x21D4 JUMP JUMPDEST PUSH2 0x27F2 DUP2 PUSH2 0x2619 DUP5 SLOAD PUSH2 0x2522 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2826 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x280E JUMPI POP DUP5 DUP3 ADD SLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x288B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP5 AND SWAP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2860 JUMPI DUP3 DUP7 ADD SLOAD DUP3 SSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x2840 JUMP JUMPDEST POP DUP6 DUP4 LT ISZERO PUSH2 0x287E JUMPI DUP2 DUP6 ADD SLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP PUSH1 0x1 DUP4 PUSH1 0x1 SHL ADD DUP5 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x28CA DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x208A JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x28FB DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x208A JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x772 JUMPI PUSH2 0x772 PUSH2 0x26C7 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x772 JUMPI PUSH2 0x772 PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2940 JUMPI PUSH2 0x2940 PUSH2 0x26C7 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID EXP CALL 0xDA 0xC7 0xDE LOG2 REVERT PUSH32 0x7738119CEC7DF099DFAD49AA9D2E7D17BA6B60F63AE7411FA49807205CE4D355 MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA26469706673582212201965B0FFCB7BC84A5551D59B INVALID 0x22 DUP5 LOG3 CALLDATALOAD PUSH3 0x99169A 0x5F PUSH18 0xCBF1C321A5C5B2913564736F6C6343000813 STOP CALLER ","sourceMap":"396:10313:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4631:404;;;;;;:::i;:::-;;:::i;:::-;;1125:48;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;2732:202:0;;;;;;:::i;:::-;;:::i;:::-;;;1898:14:11;;1891:22;1873:41;;1861:2;1846:18;2732:202:0;1733:187:11;1361:32:10;;;;;;:::i;:::-;;:::i;:::-;;;2256:25:11;;;2244:2;2229:18;1361:32:10;2110:177:11;9011:105:10;9087:15;:22;9011:105;;9527:470;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4504:129:0:-;;;;;;:::i;:::-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129;5199:546:10;;;;;;:::i;:::-;;:::i;7361:396::-;;;;;;:::i;:::-;;:::i;4929:145:0:-;;;;;;:::i;:::-;;:::i;10103:119:10:-;;;;;;:::i;:::-;;:::i;6038:214:0:-;;;;;;:::i;:::-;;:::i;10631:76:10:-;;;:::i;1235:50::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9259:123::-;;;;;;:::i;:::-;9324:4;9347:19;;;:7;:19;;;;;:28;;;;;;9259:123;3405:1069;;;;;;:::i;:::-;;:::i;1326:29::-;;;;;;:::i;:::-;;:::i;5906:1249::-;;;;;;:::i;:::-;;:::i;1615:84:2:-;1685:7;;;;1615:84;;7906:332:10;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10330:121::-;;;;;;:::i;:::-;;:::i;534:60::-;;-1:-1:-1;;;;;;;;;;;534:60:10;;10504:72;;;:::i;3021:145:0:-;;;;;;:::i;:::-;;:::i;2153:49::-;;2198:4;2153:49;;1179:50:10;;;;;;:::i;:::-;;:::i;8381:306::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1077:42::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;5354:147:0:-;;;;;;:::i;:::-;;:::i;2482:693:10:-;;;;;;:::i;:::-;;:::i;8798:104::-;8875:13;:20;8798:104;;466:62;;-1:-1:-1;;;;;;;;;;;466:62:10;;4631:404;1239:19:2;:17;:19::i;:::-;4714::10::1;::::0;;;:7:::1;:19;::::0;;;;:28:::1;;::::0;::::1;;4706:57;;;::::0;-1:-1:-1;;;4706:57:10;;9533:2:11;4706:57:10::1;::::0;::::1;9515:21:11::0;9572:2;9552:18;;;9545:30;-1:-1:-1;;;9591:18:11;;;9584:46;9647:18;;4706:57:10::1;;;;;;;;;4794:31;-1:-1:-1::0;;;;;;;;;;;4814:10:10::1;4794:7;:31::i;:::-;:94;;;-1:-1:-1::0;4842:19:10::1;::::0;;;:7:::1;:19;::::0;;;;:32:::1;;::::0;-1:-1:-1;;;;;4842:32:10::1;4878:10;4842:46;4794:94;4773:177;;;::::0;-1:-1:-1;;;4773:177:10;;9878:2:11;4773:177:10::1;::::0;::::1;9860:21:11::0;9917:2;9897:18;;;9890:30;9956:34;9936:18;;;9929:62;-1:-1:-1;;;10007:18:11;;;10000:34;10051:19;;4773:177:10::1;9676:400:11::0;4773:177:10::1;4974:54;::::0;5012:15:::1;2256:25:11::0;;5000:10:10::1;::::0;4988;;4974:54:::1;::::0;2244:2:11;2229:18;4974:54:10::1;;;;;;;4631:404:::0;:::o;1125:48::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1125:48:10;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1125:48:10;;;;-1:-1:-1;1125:48:10;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1125:48:10;;;;;;;-1:-1:-1;;1125:48:10;;;:::o;2732:202:0:-;2817:4;-1:-1:-1;;;;;;2840:47:0;;-1:-1:-1;;;2840:47:0;;:87;;-1:-1:-1;;;;;;;;;;937:40:6;;;2891:36:0;2833:94;2732:202;-1:-1:-1;;2732:202:0:o;1361:32:10:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1361:32:10;:::o;9527:470::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9643:19:10;;;;:7;:19;;;;;:28;;;;;9635:57;;;;-1:-1:-1;;;9635:57:10;;9533:2:11;9635:57:10;;;9515:21:11;9572:2;9552:18;;;9545:30;-1:-1:-1;;;9591:18:11;;;9584:46;9647:18;;9635:57:10;9331:340:11;9635:57:10;9723:31;-1:-1:-1;;;;;;;;;;;9743:10:10;9723:7;:31::i;:::-;:109;;;-1:-1:-1;9790:19:10;;;;:7;:19;;;;;9771:61;;;;9790:19;9771:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9821:10;9771:18;:61::i;:::-;9723:171;;;-1:-1:-1;9848:19:10;;;;:7;:19;;;;;:32;;;-1:-1:-1;;;;;9848:32:10;9884:10;9848:46;9723:171;9702:252;;;;-1:-1:-1;;;9702:252:10;;10668:2:11;9702:252:10;;;10650:21:11;10707:2;10687:18;;;10680:30;10746:34;10726:18;;;10719:62;-1:-1:-1;;;10797:18:11;;;10790:32;10839:19;;9702:252:10;10466:398:11;9702:252:10;9971:19;;;;:7;:19;;;;;;;9964:26;;;;;;;;;;;;9971:19;;9964:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9964:26:10;;;-1:-1:-1;;9964:26:10;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9964:26:10;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9964:26:10;;;-1:-1:-1;;9964:26:10;;;;;;;;;;;;;;;;9527:470;-1:-1:-1;;9527:470:10:o;5199:546::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;1239:19:2::1;:17;:19::i;:::-;5349:8:10::2;5358:9;5349:19;;;;;;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;:28:::2;;::::0;::::2;;5341:58;;;;-1:-1:-1::0;;;5341:58:10::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5417:20:10;::::2;5409:55;;;::::0;-1:-1:-1;;;5409:55:10;;11711:2:11;5409:55:10::2;::::0;::::2;11693:21:11::0;11750:2;11730:18;;;11723:30;-1:-1:-1;;;11769:18:11;;;11762:52;11831:18;;5409:55:10::2;11509:346:11::0;5409:55:10::2;5483:37;5502:9;5513:6;5483:18;:37::i;:::-;5482:38;5474:76;;;::::0;-1:-1:-1;;;5474:76:10;;12062:2:11;5474:76:10::2;::::0;::::2;12044:21:11::0;12101:2;12081:18;;;12074:30;12140:27;12120:18;;;12113:55;12185:18;;5474:76:10::2;11860:349:11::0;5474:76:10::2;5569:8;5578:9;5569:19;;;;;;:::i;:::-;::::0;;;::::2;::::0;;::::2;::::0;;;;;;;;:37:::2;;:50:::0;;::::2;::::0;;::::2;::::0;;-1:-1:-1;5569:50:10;;;;;;;;::::2;::::0;;-1:-1:-1;;;;;;5569:50:10::2;-1:-1:-1::0;;;;;5569:50:10;::::2;::::0;;::::2;::::0;;;5629:22;;:14:::2;:22:::0;;;;;:38;;;;::::2;::::0;;;;;;;;::::2;;5657:9:::0;5629:38;::::2;:::i;:::-;;5727:10;-1:-1:-1::0;;;;;5691:47:10::2;5719:6;-1:-1:-1::0;;;;;5691:47:10::2;5708:9;5691:47;;;;;;:::i;:::-;;::::0;;;;::::2;::::0;;;::::2;::::0;;;::::2;5199:546:::0;;;:::o;7361:396::-;7473:4;7489:34;7526:8;7535:9;7526:19;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:37;;7489:74;;;;;;;;;;;;;;;7526:37;7489:74;;;7526:37;7489:74;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7489:74:10;;;;;;;;;;;;;;;;;;;;;;;7578:6;7573:156;7594:17;:24;7590:1;:28;7573:156;;;7667:6;-1:-1:-1;;;;;7643:30:10;:17;7661:1;7643:20;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7643:30:10;;7639:80;;7700:4;7693:11;;;;;;7639:80;7620:3;;;;:::i;:::-;;;;7573:156;;;-1:-1:-1;7745:5:10;;7361:396;-1:-1:-1;;;;7361:396:10:o;4929:145:0:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;10103:119:10:-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;10184:31:10::1;-1:-1:-1::0;;;;;;;;;;;10208:6:10::1;10184:10;:31::i;:::-;10103:119:::0;;:::o;6038:214:0:-;-1:-1:-1;;;;;6133:23:0;;719:10:4;6133:23:0;6125:83;;;;-1:-1:-1;;;6125:83:0;;15024:2:11;6125:83:0;;;15006:21:11;15063:2;15043:18;;;15036:30;15102:34;15082:18;;;15075:62;-1:-1:-1;;;15153:18:11;;;15146:45;15208:19;;6125:83:0;14822:411:11;6125:83:0;6219:26;6231:4;6237:7;6219:11;:26::i;10631:76:10:-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;10690:10:10::1;:8;:10::i;:::-;10631:76:::0;:::o;1235:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3405:1069::-;1239:19:2;:17;:19::i;:::-;3566:8:10::1;3575:9;3566:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:28:::1;;::::0;::::1;;3558:58;;;;-1:-1:-1::0;;;3558:58:10::1;;;;;;;:::i;:::-;3634:10:::0;3626:64:::1;;;::::0;-1:-1:-1;;;3626:64:10;;15440:2:11;3626:64:10::1;::::0;::::1;15422:21:11::0;15479:2;15459:18;;;15452:30;15518:29;15498:18;;;15491:57;15565:18;;3626:64:10::1;15238:351:11::0;3626:64:10::1;3721:31;-1:-1:-1::0;;;;;;;;;;;3741:10:10::1;3721:7;:31::i;:::-;:80;;;;3769:32;-1:-1:-1::0;;;;;;;;;;;3790:10:10::1;3769:7;:32::i;:::-;3721:138;;;;3818:41;3837:9;3848:10;3818:18;:41::i;:::-;3700:214;;;::::0;-1:-1:-1;;;3700:214:10;;15796:2:11;3700:214:10::1;::::0;::::1;15778:21:11::0;15835:2;15815:18;;;15808:30;15874:31;15854:18;;;15847:59;15923:18;;3700:214:10::1;15594:353:11::0;3700:214:10::1;3933:19;::::0;;;:7:::1;:19;::::0;;;;:28:::1;;::::0;::::1;;3932:29;3924:63;;;::::0;-1:-1:-1;;;3924:63:10;;16154:2:11;3924:63:10::1;::::0;::::1;16136:21:11::0;16193:2;16173:18;;;16166:30;-1:-1:-1;;;16212:18:11;;;16205:51;16273:18;;3924:63:10::1;15952:345:11::0;3924:63:10::1;4028:237;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;4137:15:::1;4028:237:::0;;;;4180:10:::1;4028:237:::0;;;;;;;;;;4250:4:::1;4028:237:::0;;;;-1:-1:-1;4006:19:10;;;:7:::1;:19:::0;;;;;;;:259;;:19;;:259:::1;::::0;:19;:259:::1;:::i;:::-;-1:-1:-1::0;4006:259:10::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;4006:259:10::1;-1:-1:-1::0;;;;;4006:259:10;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;4006:259:10::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;4006:259:10::1;::::0;::::1;;::::0;;;::::1;::::0;;4284:25:::1;::::0;::::1;::::0;4299:9;;4284:25:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;;:42;;::::1;::::0;;::::1;::::0;;-1:-1:-1;4284:42:10;;;;;;::::1;::::0;;;4336:15:::1;:32:::0;;;;::::1;::::0;;;;;::::1;::::0;;;4427:10:::1;::::0;4315;;4392:75:::1;::::0;4404:9;;4392:75:::1;:::i;:::-;;;;;;;;;4439:10;4451:15;4392:75;;;;;;;:::i;:::-;;;;;;;;3405:1069:::0;;;:::o;1326:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5906:1249::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;1239:19:2::1;:17;:19::i;:::-;6053:8:10::2;6062:9;6053:19;;;;;;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;:28:::2;;::::0;::::2;;6045:58;;;;-1:-1:-1::0;;;6045:58:10::2;;;;;;;:::i;:::-;6121:37;6140:9;6151:6;6121:18;:37::i;:::-;6113:71;;;::::0;-1:-1:-1;;;6113:71:10;;16800:2:11;6113:71:10::2;::::0;::::2;16782:21:11::0;16839:2;16819:18;;;16812:30;-1:-1:-1;;;16858:18:11;;;16851:51;16919:18;;6113:71:10::2;16598:345:11::0;6113:71:10::2;6259:35;6297:8;6306:9;6297:19;;;;;;:::i;:::-;;;;;;;;;;;;;:37;;6259:75;;6349:6;6344:279;6365:24:::0;;6361:28;::::2;6344:279;;;6438:6;-1:-1:-1::0;;;;;6414:30:10::2;:17;6432:1;6414:20;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;::::2;::::0;-1:-1:-1;;;;;6414:20:10::2;:30:::0;6410:203:::2;;6505:24:::0;;6487:17;;6505:28:::2;::::0;6532:1:::2;::::0;6505:28:::2;:::i;:::-;6487:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;6487:47:10::2;6464:17;6482:1;6464:20;;;;;;;;:::i;:::-;;;;;;;;;:70;;;;;-1:-1:-1::0;;;;;6464:70:10::2;;;;;-1:-1:-1::0;;;;;6464:70:10::2;;;;;;6552:17;:23;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;-1:-1:-1;;6552:23:10;;;;;-1:-1:-1;;;;;;6552:23:10::2;::::0;;;;;6593:5:::2;;6410:203;6391:3:::0;::::2;::::0;::::2;:::i;:::-;;;;6344:279;;;-1:-1:-1::0;;;;;;6731:22:10;::::2;6694:34;6731:22:::0;;;:14:::2;:22;::::0;;;;;6763:318:::2;6784:24:::0;;6780:28;::::2;6763:318;;;6891:9;6875:27;;;;;;6849:17;6867:1;6849:20;;;;;;;;:::i;:::-;;;;;;;;6833:38;;;;;;:::i;:::-;;;;;;;;:69:::0;6829:242:::2;;6963:24:::0;;6945:17;;6963:28:::2;::::0;6990:1:::2;::::0;6963:28:::2;:::i;:::-;6945:47;;;;;;;;:::i;:::-;;;;;;;;6922:17;6940:1;6922:20;;;;;;;;:::i;:::-;;;;;;;;:70;;;;;;:::i;:::-;;7010:17;:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;7051:5;;6829:242;6810:3:::0;::::2;::::0;::::2;:::i;:::-;;;;6763:318;;;;7137:10;-1:-1:-1::0;;;;;7104:44:10::2;7129:6;-1:-1:-1::0;;;;;7104:44:10::2;7118:9;7104:44;;;;;;:::i;:::-;;::::0;;;;::::2;::::0;;;::::2;::::0;;;::::2;6035:1120;;5906:1249:::0;;;:::o;7906:332::-;7995:16;8044:31;-1:-1:-1;;;;;;;;;;;8064:10:10;8044:7;:31::i;:::-;:89;;;;8092:41;8111:9;8122:10;8092:18;:41::i;:::-;8023:166;;;;-1:-1:-1;;;8023:166:10;;19704:2:11;8023:166:10;;;19686:21:11;19743:2;19723:18;;;19716:30;19782:32;19762:18;;;19755:60;19832:18;;8023:166:10;19502:354:11;8023:166:10;8206:14;8221:9;8206:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8199:32;;;;;;;;;;;;;;;8206:25;8199:32;;;8206:25;8199:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7906:332;;;:::o;10330:121::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;10412:32:10::1;-1:-1:-1::0;;;;;;;;;;;10437:6:10::1;10412:11;:32::i;10504:72::-:0;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;10561:8:10::1;:6;:8::i;3021:145:0:-:0;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;;;;3021:145::o;1179:50:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8381:306::-;8461:15;8509:31;-1:-1:-1;;;;;;;;;;;8529:10:10;8509:7;:31::i;:::-;:68;;;-1:-1:-1;;;;;;8557:20:10;;8567:10;8557:20;8509:68;8488:153;;;;-1:-1:-1;;;8488:153:10;;20063:2:11;8488:153:10;;;20045:21:11;20102:2;20082:18;;;20075:30;20141:34;20121:18;;;20114:62;-1:-1:-1;;;20192:18:11;;;20185:36;20238:19;;8488:153:10;19861:402:11;8488:153:10;-1:-1:-1;;;;;8658:22:10;;;;;;:14;:22;;;;;;;;8651:29;;;;;;;;;;;;;;;;;;;8658:22;;8651:29;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8381:306;;;:::o;1077:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1077:42:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;1077:42:10;;;:::o;5354:147:0:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;2482:693:10:-:0;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;1239:19:2::1;:17;:19::i;:::-;2664:1:10::2;2644:9;2638:23;:27;2630:66;;;::::0;-1:-1:-1;;;2630:66:10;;20470:2:11;2630:66:10::2;::::0;::::2;20452:21:11::0;20509:2;20489:18;;;20482:30;20548:28;20528:18;;;20521:56;20594:18;;2630:66:10::2;20268:350:11::0;2630:66:10::2;2715:8;2724:9;2715:19;;;;;;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;:28:::2;;::::0;::::2;;2714:29;2706:68;;;::::0;-1:-1:-1;;;2706:68:10;;20825:2:11;2706:68:10::2;::::0;::::2;20807:21:11::0;20864:2;20844:18;;;20837:30;20903:28;20883:18;;;20876:56;20949:18;;2706:68:10::2;20623:350:11::0;2706:68:10::2;2815:210;::::0;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;;::::2;::::0;;;2930:16;;-1:-1:-1;2930:16:10;;;;::::2;::::0;;2815:210;;;;2971:15:::2;2815:210:::0;;;;3010:4:::2;2815:210:::0;;;;2793:19;;:8:::2;::::0;:19:::2;::::0;2815:210;;2793:19:::2;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;:232;;:19;;:232:::2;::::0;:19;:232:::2;:::i;:::-;-1:-1:-1::0;2793:232:10::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;2793:232:10::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;-1:-1:-1;;2793:232:10::2;::::0;::::2;;::::0;;;::::2;::::0;;3044:13:::2;:29:::0;;-1:-1:-1;3044:29:10;::::2;::::0;;-1:-1:-1;3044:29:10;;;;;::::2;;3063:9:::0;3044:29;::::2;:::i;:::-;-1:-1:-1::0;3097:71:10::2;::::0;3140:10:::2;::::0;3097:71:::2;::::0;3115:9;;3097:71:::2;:::i;:::-;;::::0;;;;;::::2;::::0;;21152:25:11;;;3152:15:10::2;21208:2:11::0;21193:18;;21186:34;3097:71:10;::::2;::::0;21125:18:11;3097:71:10::2;;;;;;;2482:693:::0;;;:::o;1767:106:2:-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:2;;21433:2:11;1828:38:2;;;21415:21:11;21472:2;21452:18;;;21445:30;-1:-1:-1;;;21491:18:11;;;21484:46;21547:18;;1828:38:2;21231:340:11;1828:38:2;1767:106::o;3460:103:0:-;3526:30;3537:4;719:10:4;3526::0;:30::i;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:0;;;;;;;;;:36;;-1:-1:-1;;7708:36:0;7740:4;7708:36;;;7790:12;719:10:4;;640:96;7790:12:0;-1:-1:-1;;;;;7763:40:0;7781:7;-1:-1:-1;;;;;7763:40:0;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:0;;;;;;;;;;:37;;-1:-1:-1;;8112:37:0;;;8168:40;719:10:4;;8112:12:0;;8168:40;;8144:5;8168:40;7991:234;;:::o;2433:117:2:-;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:2::1;::::0;;2521:22:::1;719:10:4::0;2530:12:2::1;2521:22;::::0;-1:-1:-1;;;;;21740:32:11;;;21722:51;;21710:2;21695:18;2521:22:2::1;;;;;;;2433:117::o:0;2186:115::-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:2::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:4::0;;640:96;3844:479:0;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:0;;;;;;;;;;-1:-1:-1;;;3970:336:0;;;;;;;:::i;1945:106:2:-;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:2;;22803:2:11;2003:41:2;;;22785:21:11;22842:2;22822:18;;;22815:30;-1:-1:-1;;;22861:18:11;;;22854:50;22921:18;;2003:41:2;22601:344:11;2407:149:5;2465:13;2497:52;-1:-1:-1;;;;;2509:22:5;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:5;;1918:47;;-1:-1:-1;;;1975:6:5;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:5;;;;;;;;;-1:-1:-1;;;2000:6:5;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:5;;;;;;;;-1:-1:-1;2030:9:5;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:5;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:5;;;;;;;;-1:-1:-1;2141:1:5;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:5;;2162:55;;;;-1:-1:-1;;;2162:55:5;;23596:2:11;2162:55:5;;;23578:21:11;;;23615:18;;;23608:30;23674:34;23654:18;;;23647:62;23726:18;;2162:55:5;23394:356:11;2162:55:5;2241:6;1818:437;-1:-1:-1;;;1818:437:5:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:11;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:11;;14:180;-1:-1:-1;14:180:11:o;199:250::-;284:1;294:113;308:6;305:1;302:13;294:113;;;384:11;;;378:18;365:11;;;358:39;330:2;323:10;294:113;;;-1:-1:-1;;441:1:11;423:16;;416:27;199:250::o;454:271::-;496:3;534:5;528:12;561:6;556:3;549:19;577:76;646:6;639:4;634:3;630:14;623:4;616:5;612:16;577:76;:::i;:::-;707:2;686:15;-1:-1:-1;;682:29:11;673:39;;;;714:4;669:50;;454:271;-1:-1:-1;;454:271:11:o;730:707::-;1033:3;1022:9;1015:22;996:4;1060:46;1101:3;1090:9;1086:19;1078:6;1060:46;:::i;:::-;1137:2;1122:18;;1115:34;;;1180:2;1165:18;;1158:34;;;-1:-1:-1;;;;;1228:32:11;;1223:2;1208:18;;1201:60;1298:22;;;1292:3;1277:19;;1270:51;1338:33;1302:6;1356;1338:33;:::i;:::-;1330:41;;;1422:6;1415:14;1408:22;1402:3;1391:9;1387:19;1380:51;730:707;;;;;;;;;:::o;1442:286::-;1500:6;1553:2;1541:9;1532:7;1528:23;1524:32;1521:52;;;1569:1;1566;1559:12;1521:52;1595:23;;-1:-1:-1;;;;;;1647:32:11;;1637:43;;1627:71;;1694:1;1691;1684:12;2474:855;2665:2;2654:9;2647:21;2628:4;2703:6;2697:13;2746:4;2741:2;2730:9;2726:18;2719:32;2774:52;2821:3;2810:9;2806:19;2792:12;2774:52;:::i;:::-;2760:66;;2880:2;2872:6;2868:15;2862:22;2857:2;2846:9;2842:18;2835:50;2939:2;2931:6;2927:15;2921:22;2916:2;2905:9;2901:18;2894:50;3026:1;3022;3017:3;3013:11;3009:19;3003:2;2995:6;2991:15;2985:22;2981:48;2975:3;2964:9;2960:19;2953:77;3079:3;3071:6;3067:16;3061:23;3153:2;3149:7;3137:9;3129:6;3125:22;3121:36;3115:3;3104:9;3100:19;3093:65;3181:41;3215:6;3199:14;3181:41;:::i;:::-;3167:55;;;3292:3;3284:6;3280:16;3274:23;3267:31;3260:39;3253:4;3242:9;3238:20;3231:69;3317:6;3309:14;;;2474:855;;;;:::o;3334:127::-;3395:10;3390:3;3386:20;3383:1;3376:31;3426:4;3423:1;3416:15;3450:4;3447:1;3440:15;3466:719;3509:5;3562:3;3555:4;3547:6;3543:17;3539:27;3529:55;;3580:1;3577;3570:12;3529:55;3616:6;3603:20;3642:18;3679:2;3675;3672:10;3669:36;;;3685:18;;:::i;:::-;3760:2;3754:9;3728:2;3814:13;;-1:-1:-1;;3810:22:11;;;3834:2;3806:31;3802:40;3790:53;;;3858:18;;;3878:22;;;3855:46;3852:72;;;3904:18;;:::i;:::-;3944:10;3940:2;3933:22;3979:2;3971:6;3964:18;4025:3;4018:4;4013:2;4005:6;4001:15;3997:26;3994:35;3991:55;;;4042:1;4039;4032:12;3991:55;4106:2;4099:4;4091:6;4087:17;4080:4;4072:6;4068:17;4055:54;4153:1;4146:4;4141:2;4133:6;4129:15;4125:26;4118:37;4173:6;4164:15;;;;;;3466:719;;;;:::o;4190:173::-;4258:20;;-1:-1:-1;;;;;4307:31:11;;4297:42;;4287:70;;4353:1;4350;4343:12;4287:70;4190:173;;;:::o;4368:396::-;4446:6;4454;4507:2;4495:9;4486:7;4482:23;4478:32;4475:52;;;4523:1;4520;4513:12;4475:52;4563:9;4550:23;4596:18;4588:6;4585:30;4582:50;;;4628:1;4625;4618:12;4582:50;4651;4693:7;4684:6;4673:9;4669:22;4651:50;:::i;:::-;4641:60;;;4720:38;4754:2;4743:9;4739:18;4720:38;:::i;:::-;4710:48;;4368:396;;;;;:::o;4769:254::-;4837:6;4845;4898:2;4886:9;4877:7;4873:23;4869:32;4866:52;;;4914:1;4911;4904:12;4866:52;4950:9;4937:23;4927:33;;4979:38;5013:2;5002:9;4998:18;4979:38;:::i;5028:186::-;5087:6;5140:2;5128:9;5119:7;5115:23;5111:32;5108:52;;;5156:1;5153;5146:12;5108:52;5179:29;5198:9;5179:29;:::i;5219:254::-;5287:6;5295;5348:2;5336:9;5327:7;5323:23;5319:32;5316:52;;;5364:1;5361;5354:12;5316:52;5387:29;5406:9;5387:29;:::i;:::-;5377:39;5463:2;5448:18;;;;5435:32;;-1:-1:-1;;;5219:254:11:o;5478:220::-;5627:2;5616:9;5609:21;5590:4;5647:45;5688:2;5677:9;5673:18;5665:6;5647:45;:::i;5703:611::-;5800:6;5808;5816;5869:2;5857:9;5848:7;5844:23;5840:32;5837:52;;;5885:1;5882;5875:12;5837:52;5925:9;5912:23;5954:18;5995:2;5987:6;5984:14;5981:34;;;6011:1;6008;6001:12;5981:34;6034:50;6076:7;6067:6;6056:9;6052:22;6034:50;:::i;:::-;6024:60;;6131:2;6120:9;6116:18;6103:32;6093:42;;6188:2;6177:9;6173:18;6160:32;6144:48;;6217:2;6207:8;6204:16;6201:36;;;6233:1;6230;6223:12;6201:36;;6256:52;6300:7;6289:8;6278:9;6274:24;6256:52;:::i;:::-;6246:62;;;5703:611;;;;;:::o;6319:322::-;6388:6;6441:2;6429:9;6420:7;6416:23;6412:32;6409:52;;;6457:1;6454;6447:12;6409:52;6497:9;6484:23;6530:18;6522:6;6519:30;6516:50;;;6562:1;6559;6552:12;6516:50;6585;6627:7;6618:6;6607:9;6603:22;6585:50;:::i;:::-;6575:60;6319:322;-1:-1:-1;;;;6319:322:11:o;6646:632::-;6817:2;6869:21;;;6939:13;;6842:18;;;6961:22;;;6788:4;;6817:2;7040:15;;;;7014:2;6999:18;;;6788:4;7083:169;7097:6;7094:1;7091:13;7083:169;;;7158:13;;7146:26;;7227:15;;;;7192:12;;;;7119:1;7112:9;7083:169;;;-1:-1:-1;7269:3:11;;6646:632;-1:-1:-1;;;;;;6646:632:11:o;7283:390::-;7361:6;7369;7422:2;7410:9;7401:7;7397:23;7393:32;7390:52;;;7438:1;7435;7428:12;7390:52;7478:9;7465:23;7511:18;7503:6;7500:30;7497:50;;;7543:1;7540;7533:12;7497:50;7566;7608:7;7599:6;7588:9;7584:22;7566:50;:::i;:::-;7556:60;7663:2;7648:18;;;;7635:32;;-1:-1:-1;;;;7283:390:11:o;7678:803::-;7840:4;7869:2;7909;7898:9;7894:18;7939:2;7928:9;7921:21;7962:6;7997;7991:13;8028:6;8020;8013:22;8066:2;8055:9;8051:18;8044:25;;8128:2;8118:6;8115:1;8111:14;8100:9;8096:30;8092:39;8078:53;;8166:2;8158:6;8154:15;8187:1;8197:255;8211:6;8208:1;8205:13;8197:255;;;8304:2;8300:7;8288:9;8280:6;8276:22;8272:36;8267:3;8260:49;8332:40;8365:6;8356;8350:13;8332:40;:::i;:::-;8322:50;-1:-1:-1;8430:12:11;;;;8395:15;;;;8233:1;8226:9;8197:255;;;-1:-1:-1;8469:6:11;;7678:803;-1:-1:-1;;;;;;;7678:803:11:o;8486:445::-;8713:3;8702:9;8695:22;8676:4;8734:46;8775:3;8764:9;8760:19;8752:6;8734:46;:::i;:::-;8811:2;8796:18;;8789:34;;;;-1:-1:-1;8854:2:11;8839:18;;8832:34;;;;8909:14;8902:22;8897:2;8882:18;;;8875:50;8726:54;8486:445;-1:-1:-1;8486:445:11:o;10081:380::-;10160:1;10156:12;;;;10203;;;10224:61;;10278:4;10270:6;10266:17;10256:27;;10224:61;10331:2;10323:6;10320:14;10300:18;10297:38;10294:161;;10377:10;10372:3;10368:20;10365:1;10358:31;10412:4;10409:1;10402:15;10440:4;10437:1;10430:15;10294:161;;10081:380;;;:::o;10869:289::-;11000:3;11038:6;11032:13;11054:66;11113:6;11108:3;11101:4;11093:6;11089:17;11054:66;:::i;:::-;11136:16;;;;;10869:289;-1:-1:-1;;10869:289:11:o;11163:341::-;11365:2;11347:21;;;11404:2;11384:18;;;11377:30;-1:-1:-1;;;11438:2:11;11423:18;;11416:47;11495:2;11480:18;;11163:341::o;12340:545::-;12442:2;12437:3;12434:11;12431:448;;;12478:1;12503:5;12499:2;12492:17;12548:4;12544:2;12534:19;12618:2;12606:10;12602:19;12599:1;12595:27;12589:4;12585:38;12654:4;12642:10;12639:20;12636:47;;;-1:-1:-1;12677:4:11;12636:47;12732:2;12727:3;12723:12;12720:1;12716:20;12710:4;12706:31;12696:41;;12787:82;12805:2;12798:5;12795:13;12787:82;;;12850:17;;;12831:1;12820:13;12787:82;;;12791:3;;;12340:545;;;:::o;13061:1352::-;13187:3;13181:10;13214:18;13206:6;13203:30;13200:56;;;13236:18;;:::i;:::-;13265:97;13355:6;13315:38;13347:4;13341:11;13315:38;:::i;:::-;13309:4;13265:97;:::i;:::-;13417:4;;13481:2;13470:14;;13498:1;13493:663;;;;14200:1;14217:6;14214:89;;;-1:-1:-1;14269:19:11;;;14263:26;14214:89;-1:-1:-1;;13018:1:11;13014:11;;;13010:24;13006:29;12996:40;13042:1;13038:11;;;12993:57;14316:81;;13463:944;;13493:663;12287:1;12280:14;;;12324:4;12311:18;;-1:-1:-1;;13529:20:11;;;13647:236;13661:7;13658:1;13655:14;13647:236;;;13750:19;;;13744:26;13729:42;;13842:27;;;;13810:1;13798:14;;;;13677:19;;13647:236;;;13651:3;13911:6;13902:7;13899:19;13896:201;;;13972:19;;;13966:26;-1:-1:-1;;14055:1:11;14051:14;;;14067:3;14047:24;14043:37;14039:42;14024:58;14009:74;;13896:201;-1:-1:-1;;;;;14143:1:11;14127:14;;;14123:22;14110:36;;-1:-1:-1;13061:1352:11:o;14418:127::-;14479:10;14474:3;14470:20;14467:1;14460:31;14510:4;14507:1;14500:15;14534:4;14531:1;14524:15;14550:127;14611:10;14606:3;14602:20;14599:1;14592:31;14642:4;14639:1;14632:15;14666:4;14663:1;14656:15;14682:135;14721:3;14742:17;;;14739:43;;14762:18;;:::i;:::-;-1:-1:-1;14809:1:11;14798:13;;14682:135::o;16302:291::-;16479:2;16468:9;16461:21;16442:4;16499:45;16540:2;16529:9;16525:18;16517:6;16499:45;:::i;:::-;16491:53;;16580:6;16575:2;16564:9;16560:18;16553:34;16302:291;;;;;:::o;16948:128::-;17015:9;;;17036:11;;;17033:37;;;17050:18;;:::i;17081:127::-;17142:10;17137:3;17133:20;17130:1;17123:31;17173:4;17170:1;17163:15;17197:4;17194:1;17187:15;17213:844;17343:3;17372:1;17405:6;17399:13;17435:36;17461:9;17435:36;:::i;:::-;17490:1;17507:18;;;17534:133;;;;17681:1;17676:356;;;;17500:532;;17534:133;-1:-1:-1;;17567:24:11;;17555:37;;17640:14;;17633:22;17621:35;;17612:45;;;-1:-1:-1;17534:133:11;;17676:356;17707:6;17704:1;17697:17;17737:4;17782:2;17779:1;17769:16;17807:1;17821:165;17835:6;17832:1;17829:13;17821:165;;;17913:14;;17900:11;;;17893:35;17956:16;;;;17850:10;;17821:165;;;17825:3;;;18015:6;18010:3;18006:16;17999:23;;17500:532;-1:-1:-1;18048:3:11;;17213:844;-1:-1:-1;;;;;;17213:844:11:o;18062:1435::-;18181:3;18175:4;18172:13;18169:26;;18188:5;;18062:1435::o;18169:26::-;18218:37;18250:3;18244:10;18218:37;:::i;:::-;18278:18;18270:6;18267:30;18264:56;;;18300:18;;:::i;:::-;18329:97;18419:6;18379:38;18411:4;18405:11;18379:38;:::i;18329:97::-;18452:1;18480:2;18472:6;18469:14;18497:1;18492:748;;;;19284:1;19301:6;19298:89;;;-1:-1:-1;19353:19:11;;;19347:26;19298:89;-1:-1:-1;;13018:1:11;13014:11;;;13010:24;13006:29;12996:40;13042:1;13038:11;;;12993:57;19400:81;;18462:1029;;18492:748;12287:1;12280:14;;;12324:4;12311:18;;-1:-1:-1;;18528:20:11;;;12287:1;12280:14;;;12324:4;12311:18;;18692:9;18714:251;18728:7;18725:1;18722:14;18714:251;;;18810:21;;;18804:28;18789:44;;18860:1;18933:18;;;;18888:15;;;;18751:4;18744:12;18714:251;;;18718:3;18993:6;18984:7;18981:19;18978:203;;;19054:21;;;19048:28;-1:-1:-1;;19139:1:11;19135:14;;;19151:3;19131:24;19127:37;19123:42;19108:58;19093:74;;18978:203;;;;19227:1;19218:6;19215:1;19211:14;19207:22;19201:4;19194:36;18462:1029;;;;18062:1435;;:::o;21784:812::-;22195:25;22190:3;22183:38;22165:3;22250:6;22244:13;22266:75;22334:6;22329:2;22324:3;22320:12;22313:4;22305:6;22301:17;22266:75;:::i;:::-;-1:-1:-1;;;22400:2:11;22360:16;;;22392:11;;;22385:40;22450:13;;22472:76;22450:13;22534:2;22526:11;;22519:4;22507:17;;22472:76;:::i;:::-;22568:17;22587:2;22564:26;;21784:812;-1:-1:-1;;;;21784:812:11:o;22950:168::-;23023:9;;;23054;;23071:15;;;23065:22;;23051:37;23041:71;;23092:18;;:::i;23123:125::-;23188:9;;;23209:10;;;23206:36;;;23222:18;;:::i;23253:136::-;23292:3;23320:5;23310:39;;23329:18;;:::i;:::-;-1:-1:-1;;;23365:18:11;;23253:136::o"},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","DEFAULT_ADMIN_ROLE()":"a217fddf","DOCTOR_ROLE()":"fec331f2","addRecord(string,bytes32,string)":"508a9100","allPatientIds(uint256)":"52366c21","allRecordHashes(uint256)":"07184900","authorizeDoctor(string,address)":"26af21b0","doctorPatients(address,uint256)":"4ac9e300","getDoctorPatients(address)":"ba508467","getPatientRecords(string)":"5cd40af5","getRecord(bytes32)":"213681cd","getRoleAdmin(bytes32)":"248a9ca3","getTotalPatients()":"f497e189","getTotalRecords()":"0aeacb5e","grantDoctorRole(address)":"2f5635cc","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isAuthorizedDoctor(string,address)":"27531360","patientRecords(string,uint256)":"b8a751df","patients(string)":"c6009d84","pause()":"8456cb59","paused()":"5c975abb","records(bytes32)":"01e64725","registerPatient(string,bytes32)":"e41db285","renounceRole(bytes32,address)":"36568abe","revokeDoctor(string,address)":"59078f08","revokeDoctorRole(address)":"6bd6f34b","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","unpause()":"3f4ba83a","updateRecord(bytes32)":"01186d99","verifyRecord(bytes32)":"4d408bcf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"patientId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authorizedBy\",\"type\":\"address\"}],\"name\":\"DoctorAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"patientId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revokedBy\",\"type\":\"address\"}],\"name\":\"DoctorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"patientId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"identityHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registeredBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PatientRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"patientId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"recordHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authorizedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"recordType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RecordAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"recordHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updatedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RecordUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOCTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"patientId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"recordHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"recordType\",\"type\":\"string\"}],\"name\":\"addRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPatientIds\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allRecordHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"patientId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"authorizeDoctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"doctorPatients\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"getDoctorPatients\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"patientId\",\"type\":\"string\"}],\"name\":\"getPatientRecords\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"recordHash\",\"type\":\"bytes32\"}],\"name\":\"getRecord\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"patientId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"recordHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"authorizedBy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"recordType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct HMSRecords.MedicalRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPatients\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalRecords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"grantDoctorRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"patientId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"isAuthorizedDoctor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"patientRecords\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"patients\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"patientId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"identityHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"records\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"patientId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"recordHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"authorizedBy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"recordType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"patientId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"identityHash\",\"type\":\"bytes32\"}],\"name\":\"registerPatient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"patientId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"revokeDoctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"revokeDoctorRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"recordHash\",\"type\":\"bytes32\"}],\"name\":\"updateRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"recordHash\",\"type\":\"bytes32\"}],\"name\":\"verifyRecord\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Smart contract for Hospital Management System record hashes Stores only hashes of medical records, not the actual data\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"addRecord(string,bytes32,string)\":{\"details\":\"Add a medical record hash\",\"params\":{\"patientId\":\"Patient identifier\",\"recordHash\":\"Hash of the medical record\",\"recordType\":\"Type of record (appointment, diagnosis, etc.)\"}},\"authorizeDoctor(string,address)\":{\"details\":\"Authorize a doctor to access patient records\",\"params\":{\"doctor\":\"Doctor's address\",\"patientId\":\"Patient identifier\"}},\"getDoctorPatients(address)\":{\"details\":\"Get doctor's patients\",\"params\":{\"doctor\":\"Doctor's address\"},\"returns\":{\"_0\":\"string[] Array of patient IDs\"}},\"getPatientRecords(string)\":{\"details\":\"Get patient records\",\"params\":{\"patientId\":\"Patient identifier\"},\"returns\":{\"_0\":\"bytes32[] Array of record hashes\"}},\"getRecord(bytes32)\":{\"details\":\"Get record details\",\"params\":{\"recordHash\":\"Hash of the record\"},\"returns\":{\"_0\":\"MedicalRecord Record details\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getTotalPatients()\":{\"details\":\"Get total number of patients\",\"returns\":{\"_0\":\"uint256 Total patients count\"}},\"getTotalRecords()\":{\"details\":\"Get total number of records\",\"returns\":{\"_0\":\"uint256 Total records count\"}},\"grantDoctorRole(address)\":{\"details\":\"Grant doctor role\",\"params\":{\"doctor\":\"Address to grant doctor role\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isAuthorizedDoctor(string,address)\":{\"details\":\"Check if a doctor is authorized for a patient\",\"params\":{\"doctor\":\"Doctor's address\",\"patientId\":\"Patient identifier\"},\"returns\":{\"_0\":\"bool Authorization status\"}},\"pause()\":{\"details\":\"Pause contract\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"registerPatient(string,bytes32)\":{\"details\":\"Register a new patient\",\"params\":{\"identityHash\":\"Hash of patient identity data\",\"patientId\":\"Unique patient identifier\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeDoctor(string,address)\":{\"details\":\"Revoke doctor's access to patient records\",\"params\":{\"doctor\":\"Doctor's address\",\"patientId\":\"Patient identifier\"}},\"revokeDoctorRole(address)\":{\"details\":\"Revoke doctor role\",\"params\":{\"doctor\":\"Address to revoke doctor role\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"unpause()\":{\"details\":\"Unpause contract\"},\"updateRecord(bytes32)\":{\"details\":\"Update a medical record (mark as updated, original hash remains)\",\"params\":{\"recordHash\":\"Hash of the record to update\"}},\"verifyRecord(bytes32)\":{\"details\":\"Verify a record hash exists\",\"params\":{\"recordHash\":\"Hash to verify\"},\"returns\":{\"_0\":\"bool Existence status\"}}},\"title\":\"HMSRecords\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HMSRecords.sol\":\"HMSRecords\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/HMSRecords.sol\":{\"keccak256\":\"0x6da4d475ef0dcc935814e3b899f48c829dfaac32082a9fe201925477facb517c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://984ca2d425c6e68bd16419d74542fc64797a08f4f3adc540d76b23fee9f839af\",\"dweb:/ipfs/QmRTqxm2vWPuYYCRPk6yYsHweDeHdrrpASoQTL7kv96Yuo\"]}},\"version\":1}"}}}}}